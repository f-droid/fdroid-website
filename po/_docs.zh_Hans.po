# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Eric <spice2wolf@gmail.com>, 2021.
# Hans-Christoph Steiner <hans@guardianproject.info>, 2021, 2022.
# Jacque Fresco <aidter@use.startmail.com>, 2021.
# Andrey <andrey@mailbox.org>, 2021.
# Smart SangGe <liangjunyong06@gmail.com>, 2021.
# w568w <1278297578@qq.com>, 2021.
# ygsk10 <yogaskung@protonmail.ch>, 2021.
# JY3 <GeeyunJY3@gmail.com>, 2021, 2022, 2023.
# kak mi <wavelake@outlook.com>, 2021, 2022.
# Paul Leung <labrusca@live.com>, 2021.
# ZZY2357 <ZZY2357@outlook.com>, 2021.
# chitaotao <chotaotao1qaz2wsx@gmail.com>, 2021.
# 52871299hzy <bc3104hzy@126.com>, 2021.
# Calcitem <calcitem@outlook.com>, 2021, 2022.
# Eric <alchemillatruth@purelymail.com>, 2022.
# linsui <linsui@inbox.lv>, 2022, 2023, 2024.
# yangyangdaji <1504305527@qq.com>, 2022.
# Eric <hamburger1024@mailbox.org>, 2022.
# Eric <hamburger1024@duck.com>, 2022.
# Eric <hamburger2048@users.noreply.hosted.weblate.org>, 2022, 2023.
# RainSlide <RainSlide@outlook.com>, 2023.
# Eric <zxmegaxqug@hldrive.com>, 2023.
# 大王叫我来巡山 <hamburger2048@users.noreply.hosted.weblate.org>, 2024.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: team@f-droid.org\n"
"POT-Creation-Date: 2024-12-06 10:52+0100\n"
"PO-Revision-Date: 2024-12-07 12:00+0000\n"
"Last-Translator: 大王叫我来巡山 <hamburger2048@users.noreply.hosted.weblate.org>\n"
"Language-Team: Chinese (Simplified Han script) <https://hosted.weblate.org/projects/f-droid/website-docs/zh_Hans/>\n"
"Language: zh_Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.9-dev\n"

#. type: Yaml Front Matter Hash Value: title
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "All About Descriptions, Graphics, and Screenshots"
msgstr "描述、图片和屏幕截图"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Applications on F-Droid may provide content for the app store to make their about page more interesting and informative."
msgstr "F-Droid 上的应用可以为应用商店提供内容，使其\"关于\"页面更有趣、信息更丰富。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "This is supported from F-Droid version 0.103 and *fdroidserver* version 0.8."
msgstr "从 F-Droid 0.103 版本和 *fdroidserver* 0.8 版本开始支持。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#: _docs/Build_Server_Setup.md _docs/FAQ_-_App_Developers.md
#: _docs/FAQ_-_Client.md _docs/FAQ_-_General.md
#: _docs/Installing_the_Server_and_Repo_Tools.md _docs/Security_Model.md
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid ""
"* Do not remove this line (it will not be displayed)\n"
"{:toc}\n"
msgstr ""
"* Do not remove this line (it will not be displayed)\n"
"{:toc}\n"

#. type: Title ##
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "Latest tab criteria"
msgstr "最新标签页政策"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "In F-Droid client, since release 1.6, only applications that have all of the following are shown on the Latest tab:"
msgstr "在 F-Droid 客户端中，从 1.6 版本开始，只有具备以下所有条件的应用才会显示在“最新”标签页上："

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Name"
msgstr "名称"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Icon"
msgstr "图标"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Summary"
msgstr "概要"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Description"
msgstr "描述"

#. type: Title ###
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#: _docs/Repository_Style_Guide.md
#, no-wrap
msgid "License"
msgstr "许可"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "a What's New entry for at least one release"
msgstr "至少一个版本的更新内容条目"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "at least one graphic (screenshot or a feature graphic)"
msgstr "至少一张图片（屏幕截图或一张功能演示图片）"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "at least one of the above translated"
msgstr "以上的至少一个已被翻译"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Learn more at the [announcement post]({{ site.baseurl }}/2019/03/26/the-latest-tab-now-highlights-good-descriptions.html)."
msgstr "在[公告文章]({{ site.baseurl }}/2019/03/26/the-latest-tab-now-highlights-good-descriptions.html)中了解更多信息。"

#. type: Title ##
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "Data format"
msgstr "数据格式"

#. type: Title ###
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "Image file formats"
msgstr "图片文件格式"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Images may be provided in PNG or JPEG format. They must have the ending `png`, `jpg` or `jpeg`."
msgstr "图片可以用 PNG 或 JPEG 格式提供。图片必须以 `png`、`jpg` 或 `jpeg` 结尾。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "It is important to note that dangerous and unneeded metadata is stripped from image files before they are included in the repo. For example, JPEG EXIF data has [security issues](https://threatpost.com/google-shuts-down-potentially-massive-android-bug/120393/), and it is not needed to display images. This also means that images may be recompressed."
msgstr "需要注意的是，在将图片文件包含在存储库中之前，危险的和不需要的元数据将从文件中被删除。例如，JPEG EXIF 数据有[安全问题](https://threatpost.com/google-shuts-down-potentially-massive-android-bug/120393/)，且显示图像不需要它。这还意味着图片可能被重新压缩。"

#. type: Title ###
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "HTML descriptions"
msgstr "HTML 描述"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "The detailed app description may use HTML tags. Note that not all tags are supported by the renderer."
msgstr "在应用的详细描述中可以使用 HTML 标签，但请注意渲染器并不支持所有的标签。"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "These simple layout tags are [supported](https://gitlab.com/fdroid/jekyll-fdroid/-/blob/master/lib/fdroid/Package.rb#L21): `b`, `big`, `blockquote`, `br`, `cite`, `em`, `i`, `li`, `ol`, `small`, `strike`, `strong`, `sub`, `sup`, `tt`, `u`, `ul`."
msgstr "这些简单的布局标签是 [受支持的](https://gitlab.com/fdroid/jekyll-fdroid/-/blob/master/lib/fdroid/Package.rb#L21)：`b`, `big`, `blockquote`, `br`, `cite`, `em`, `i`, `li`, `ol`, `small`, `strike`, `strong`, `sub`, `sup`, `tt`, `u`, `ul`。"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "`a` with `href` is currently allowed, but might be removed without notice."
msgstr "目前允许带 `href` 的 `a`，但可能会在不通知的情况下被移除。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid ""
"* Certain tags are explicitly prohibited, namely `applet`, `base`, `body`, `button`, `embed`, `form`, `head`, `html`,\n"
"`iframe`, `img`, `input`, `link`, `object`, `picture`, `script`, `source`, `style`, `svg` and `video`.\n"
"* Note that a line break will automatically be converted to a `br` tag.\n"
"* You may not make use of JavaScript.\n"
msgstr ""
"* 明确禁止某些标签，它们是 `applet`、`base`、`body`、`button`、`embed`、`form`、`head`、`html`、`iframe`、`img`、`input`、`link`、`object`、`picture`、`script`、`source`、`style`、`svg` 和 `video`。\n"
"* 请注意，换行符将被自动转换为 `br` 标签。\n"
"* 你不得使用 JavaScript。\n"

#. type: Title ##
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "Ways of providing metadata"
msgstr "提供元数据的方式"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Adding metadata can be done in the following three ways."
msgstr "可以通过下面三种方式添加元数据。"

#. type: Title ###
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "In the application's source repository"
msgstr "在应用的代码库中"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "For the official F-Droid repository, it is **strongly encouraged** to add metadata in the application's source repo for for the following reasons:"
msgstr "对于官方 F-Droid 存储库，**强烈建议**在应用的代码库中添加元数据，原因如下："

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "The application's metadata is under direct control of the repository owners"
msgstr "应用的元数据由代码库的所有者直接控制"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Metadata from the repository is copied to the F-Droid repo automatically (thus no merge requests are needed)"
msgstr "代码库中的元数据会自动复制到 F-Droid 存储库（因此不需要合并请求）"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "It is the only way to provide images, such as the app icon or screenshots"
msgstr "这是提供图片的唯一方式，比如应用图标或截屏"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "F-Droid supports two distinct file structures. These aim to be compatible with existing free software tools that allow publishing applications to Google Play. It is not required to install any of these tools, the file structure can easily be created manually instead."
msgstr "F-Droid 支持两种不同的文件结构。这些旨在与现有的自由软件工具兼容，这些工具使你可以将应用发布到 Google Play。你不需要安装任何这些工具，因为文件结构可以很容易地手动创建。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Please be aware that texts in the app's metadata file will override all other descriptive texts provided through the structures explained below. This affects [_Name_](../Build_Metadata_Reference/#Name), [_Summary_](../Build_Metadata_Reference/#Summary), and [_Description_](../Build_Metadata_Reference/#Description).  Once metadata fields that were previously in the metadata file have been moved to the app's source repo, please file a [merge request](https://gitlab.com/fdroid/fdroiddata/merge_requests) or [issue](https://gitlab.com/fdroid/fdroiddata/issues) to remove _Summary_ and _Description_ from the app's metadata file."
msgstr "请注意，应用的元数据文件中的文本将覆盖所有其他通过下面解释的结构提供的描述性文本。这影响到 [_Name_](../Build_Metadata_Reference/#Name)，[_Summary_](../Build_Metadata_Reference/#Summary) 和 [_Description_](../Build_Metadata_Reference/#Description)。一旦之前在元数据文件中的元数据字段被转移到应用的存储库中，请提交[合并请求](https://gitlab.com/fdroid/fdroiddata/merge_requests)或[问题](https://gitlab.com/fdroid/fdroiddata/issues)以从应用的元数据文件中删除 _Summary_ 和 _Description_。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "For more details, see the [precedence rules](#precedence) described at the end of this file."
msgstr "更多细节参见本文件末尾描述的[优先权规则](#precedence)。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "F-Droid will only use metadata files from the latest release. This means that *fdroidserver* will check out the latest version it knows and scan the repository at the state of that version for metadata files."
msgstr "F-Droid 将只使用最新发布版本里的元数据文件。这意味着 *fdroidserver* 将拉取它所知道的最新版本，并在该版本的存储库中查找元数据文件。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "All metadata files are completely optional, except for the short summary description as well as the longer full description. However, apps which do not fulfill certain [criteria](#latest-tab-criteria) will not be shown on the Latest tab."
msgstr "所有元数据文件都是完全可选的，除了简短的概要描述以及较长的完整描述。然而，不符合某些[标准](#latest-tab-criteria)的应用将不会被显示在最新标签页上。"

#. type: Title ####
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "Fastlane structure"
msgstr "Fastlane 结构"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "The first of the two structures is aiming to be compatible to the [fastlane supply](https://github.com/fastlane/fastlane/blob/2.28.7/supply/README.md#images-and-screenshots) tool."
msgstr "第一种结构旨在与 [Fastlane 提供](https://github.com/fastlane/fastlane/blob/2.28.7/supply/README.md#images-and-screenshots)工具兼容。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "The basic file structure is as follows. Pay attention to the notes at the right. When this structure is created, it needs to be place in the correct position as outlined below."
msgstr "基本的文件结构如下。请注意右边的注释。当创建项目结构时，这些文件一定要被放置在正确的位置，如下所述。"

#. type: Fenced code block
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid ""
"├── en-US                       (en-US is the F-Droid fallback language)\n"
"│   ├── short_description.txt   (short description, max 80 chars, mandatory)\n"
"│   ├── full_description.txt    (full app description, mandatory)\n"
"│   ├── title.txt               (app name)\n"
"│   ├── video.txt               (URL to a video introducing the app)\n"
"│   ├── images\n"
"│   │   ├── icon.png            (app icon)\n"
"│   │   ├── featureGraphic.png  (promo banner, shown on top of the app desc in F-Droid client; landscape)\n"
"│   │   ├── tvBanner.png        (\"icon\" for TV devices, currently not used)\n"
"│   │   ├── phoneScreenshots\n"
"│   │   │   ├── 1.png\n"
"│   │   │   ├── 2.png\n"
"│   │   │   ...\n"
"│   │   ├── sevenInchScreenshots/\n"
"│   │   ├── tenInchScreenshots/ (you may add different screenshots for different screen sizes)\n"
"│   │   ├── tvScreenshots/\n"
"│   │   └── wearScreenshots/\n"
"│   └── changelogs\n"
"│       ├── 100000.txt          (must correspond to versionCode, literally, no padding)\n"
"│       ├── 100100.txt          (if the version code was set to 100100)\n"
"│       └── 100101.txt          (maximum size: 500 characters)\n"
"└── ru                          (other locale codes)\n"
"    ...                         (localized metadata is always preferred by the client)\n"
"    └── changelogs\n"
"        └── 100100.txt\n"
msgstr ""
"├── en-US                       (en-US is the F-Droid fallback language)\n"
"│   ├── short_description.txt   (short description, max 80 chars, mandatory)\n"
"│   ├── full_description.txt    (full app description, mandatory)\n"
"│   ├── title.txt               (app name)\n"
"│   ├── video.txt               (URL to a video introducing the app)\n"
"│   ├── images\n"
"│   │   ├── icon.png            (app icon)\n"
"│   │   ├── featureGraphic.png  (promo banner, shown on top of the app desc in F-Droid client; landscape)\n"
"│   │   ├── tvBanner.png        (\"icon\" for TV devices, currently not used)\n"
"│   │   ├── phoneScreenshots\n"
"│   │   │   ├── 1.png\n"
"│   │   │   ├── 2.png\n"
"│   │   │   ...\n"
"│   │   ├── sevenInchScreenshots/\n"
"│   │   ├── tenInchScreenshots/ (you may add different screenshots for different screen sizes)\n"
"│   │   ├── tvScreenshots/\n"
"│   │   └── wearScreenshots/\n"
"│   └── changelogs\n"
"│       ├── 100000.txt          (must correspond to versionCode, literally, no padding)\n"
"│       ├── 100100.txt          (if the version code was set to 100100)\n"
"│       └── 100101.txt          (maximum size: 500 characters)\n"
"└── ru                          (other locale codes)\n"
"    ...                         (localized metadata is always preferred by the client)\n"
"    └── changelogs\n"
"        └── 100100.txt\n"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "This structure must be placed at one of the following locations from **the repository's root**:"
msgstr "这个结构必须放置在**代码库根目录**的以下位置之一："

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "`metadata/`"
msgstr "`metadata/`"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "`fastlane/metadata/android/`"
msgstr "`fastlane/metadata/android/`"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Note that placing the structure anywhere else, like in the gradle module's root, **won't work**."
msgstr "注意，把这个结构放在其他地方，比如在 gradle 模块的根目录下**将不能正常工作**。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid ""
"**Build flavors** and multiple apps inside one repository are currently not properly supported.\n"
"(Follow [this issue](https://gitlab.com/fdroid/fdroidserver/issues/829) tracking the implementation of this.)\n"
msgstr ""
"目前还没有支持**构建 Flavor** 或者在一个存储库内构建多个应用。\n"
"（关注[此议题](https://gitlab.com/fdroid/fdroidserver/issues/829)跟踪此功能的实现。）\n"

#. type: Title ####
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "Triple-T structure"
msgstr "Triple-T 结构"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "The second supported structure is compatible with the tool [Triple-T Gradle Play Publisher](https://github.com/Triple-T/gradle-play-publisher/blob/2.8.0/README.md#publishing-listings)."
msgstr "第二种支持的结构与 [Triple-T Gradle Play Publisher](https://github.com/Triple-T/gradle-play-publisher/blob/2.8.0/README.md#publishing-listings) 工具兼容。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "Place the following structure at `<module>/src/main/play/` or, for **build flavor** support, at `<module>/src/<buildFlavor>/play/`, where `<module>` is the gradle module of your app (in many cases, this is just the folder `app`):\n"
msgstr "将以下结构放在 `<module>/src/main/play/`，或者，要支持**构建 Flavor**，放在`<module>/src/<buildFlavor>/play/`，其中 `<module>` 是你的应用的 gradle 模块（在许多情况下是`app` 文件夹）。\n"

#. type: Fenced code block
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid ""
"├── contact-email.txt                   (Developer email / AuthorEmail)\n"
"├── contact-website.txt                 (Developer website / AuthorWebSite)\n"
"├── release-notes\n"
"│   └── en-US\n"
"│       └── default.txt                 (latest changelog)\n"
"└── listings\n"
"    ├── en-US                           (en-US is the default locale in F-Droid)\n"
"    │   ├── title.txt                   (app name)\n"
"    │   ├── short-description.txt       (short description, max 80 chars, mandatory)\n"
"    │   ├── full-description.txt        (full app description, mandatory)\n"
"    │   ├── video-url.txt               (URL to a video introducing the app)\n"
"    │   ├── whatsnew                    (alternative changelog location; single file, no .txt)\n"
"    │   └── graphics\n"
"    │       ├── icon                    (app icon)\n"
"    │       │   └── *.(png|jpg)         1 image, usually 512x512\n"
"    │       ├── feature-graphic         (promo banner, shown on top of the app desc in F-Droid client)\n"
"    │       │   └── *.(png|jpg)         1 image, usually 1024x500\n"
"    │       ├── phone-screenshots\n"
"    │       │   └── *.(png|jpg)\n"
"    │       ├── tablet-screenshots\n"
"    │       │   └── *.(png|jpg)\n"
"    │       ├── large-tablet-screenshots\n"
"    │       │   └── *.(png|jpg)\n"
"    │       ├── tv-banner               (\"icon\" for TV devices, currently not used)\n"
"    │       │   └── *.(png|jpg)\n"
"    │       ├── tv-screenshots\n"
"    │       │   └── *.(png|jpg)\n"
"    │       └── wear-screenshots\n"
"    │           └── *.(png|jpg)\n"
"    ├── de                              (other locales)\n"
"        ├── ...\n"
msgstr ""
"├── contact-email.txt                   (开发者电子邮件 / AuthorEmail)\n"
"├── contact-website.txt                 (开发者网站 / AuthorWebSite)\n"
"├── release-notes\n"
"│   └── en-US\n"
"│       └── default.txt                 （最新更新日志）\n"
"└── listings\n"
"    ├── en-US                           （en-US 为 F-Droid 默认地区代码）\n"
"    │   ├── title.txt                   （应用名称）\n"
"    │   ├── short-description.txt       （简介，最大长度 80 字符，必需项）\n"
"    │   ├── full-description.txt        （完整的应用描述，必需项）\n"
"    │   ├── video-url.txt               （链接到应用介绍视频的地址）\n"
"    │   ├── whatsnew                    （替代的更新日志位置；单文件，无 .txt）\n"
"    │   └── graphics\n"
"    │       ├── icon                    （应用图标，如果你的应用没有 png 图标则必需）\n"
"    │       │   └── *.(png|jpg)         （一张图片，通常为 512x512）\n"
"    │       ├── feature-graphic         （宣传横幅，显示在 F-Droid 客户端应用描述顶部；横向）\n"
"    │       │   └── *.(png|jpg)         （一张图片，通常为 1024x500）\n"
"    │       ├── phone-screenshots\n"
"    │       │   └── *.(png|jpg)\n"
"    │       ├── tablet-screenshots\n"
"    │       │   └── *.(png|jpg)\n"
"    │       ├── large-tablet-screenshots\n"
"    │       │   └── *.(png|jpg)\n"
"    │       ├── tv-banner               （TV 设备的图标，当前未使用）\n"
"    │       │   └── *.(png|jpg)\n"
"    │       ├── tv-screenshots\n"
"    │       │   └── *.(png|jpg)\n"
"    │       └── wear-screenshots\n"
"    │           └── *.(png|jpg)\n"
"    ├── de                              （其他地区代码）\n"
"        ├── ...\n"

#. type: Title ###
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "In the app's build metadata in an *fdroiddata* collection"
msgstr "位于应用的一个 *fdroiddata* 集合内的版本元数据中"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid ""
"**Note**: This option is only meant for those who host their own repositories. If you are a developer who wants to get\n"
"an app into the main F-Droid repository, **do not choose this option**. Specifically, screenshots may not be added to\n"
"the *fdroiddata* repository.\n"
msgstr "**注意**：这个选项只适用于那些托管自己的存储库的人。如果你是想把应用放到 F-Droid 主存储库的开发者，**别选这个选项**。特别是不可以把屏幕截图添加到 *fdroiddata* 代码库。\n"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Metadata files can also be added to any *fdroiddata* repository of build metadata. The file structure is modelled after fastlane as well and it looks the same as shown above, with the following additional notes."
msgstr "元数据文件也可以被添加到任何构建元数据的 *fdroiddata* 库中。文件结构也是按照 fastlane 的结构来的，它看起来和上面所示的相同，但还有如下额外要点。"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Place the structure in the following location: `<fdroiddata>/metadata/<packageId>/`"
msgstr "将文件结构放在以下位置：`<fdroiddata>/metadata/<packageId>/`"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid ""
"   * For example, for `en-US`, `title.txt` would reside in this location:\n"
"   `<fdroiddata>/metadata/<packageId>/en-US/title.txt`\n"
"* Instead of `short_description.txt`, the summary file should be named `summary.txt`.\n"
"* Instead of `full_description.txt`, the description file should be named `description.txt`.\n"
"* Not following the above two points causes the linter to fail.\n"
msgstr ""
"   * 例如，对于 `en-US`， `title.txt` 应位于此位置：\n"
"   `<fdroiddata>/metadata/<packageId>/en-US/title.txt`\n"
"* 概要文件应命名为 `summary.txt` 而不是 `short_description.txt`。\n"
"* 描述文件应命名为 `description.txt` 而不是 `full_description.txt`。\n"
"* 不遵循以上两点将导致 linter 失败。\n"

#. type: Title ###
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "In the F-Droid repo"
msgstr "位于 F-Droid 存储库中"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "**Note**: This option is only available to those who host their own repositories.\n"
msgstr "**注意**：此选项仅对自托管存储库生效。\n"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "The ultimate destination for files from the app's source repo and *fdroiddata* metadata sub-directories is in the F-Droid repo. The text all gets included into the index file (aka *index-v1.json*). All of the graphics files can be directly included in the repo."
msgstr "来自应用源代码库和 *fdroiddata* 元数据子目录的文件的最终目的地是 F-Droid 存储库。所有文本都包含在索引文件中（也称为 *index-v1.json*）。所有的图片文件都可以直接包含在存储库中。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "If graphics files are also in the app's source or *fdroiddata*, then the files directly in the repo will be overwritten."
msgstr "如果图形文件也在应用源代码或 *fdroiddata* 中，则直接位于存储库中的文件将被覆盖。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "You may not place text files directly in the repo."
msgstr "你不应将文本文件直接置于存储库中。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "For reference, picture files can be placed in the repo at the following locations:"
msgstr "作为参考，图片文件可以放在存储库中的以下位置："

#. type: Fenced code block
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid ""
"- fdroid\n"
"  └── repo\n"
"      └── <package-id>\n"
"          └── <locale>\n"
"              ├── featureGraphic.png\n"
"              ├── icon.png\n"
"              ├── tvBanner.png\n"
"              ├── phoneScreenshots\n"
"              │   └── *.png\n"
"              ├── sevenInchScreenshots\n"
"              │   └── *.png\n"
"              ├── tenInchScreenshots\n"
"              │   └── *.png\n"
"              ├── tvScreenshots\n"
"              │   └── *.png\n"
"              └── wearScreenshots\n"
"                  └── *.png\n"
msgstr ""
"- fdroid\n"
"  └── repo\n"
"      └── <package-id>\n"
"          └── <locale>\n"
"              ├── featureGraphic.png\n"
"              ├── icon.png\n"
"              ├── tvBanner.png\n"
"              ├── phoneScreenshots\n"
"              │   └── *.png\n"
"              ├── sevenInchScreenshots\n"
"              │   └── *.png\n"
"              ├── tenInchScreenshots\n"
"              │   └── *.png\n"
"              ├── tvScreenshots\n"
"              │   └── *.png\n"
"              └── wearScreenshots\n"
"                  └── *.png\n"

#. type: Title ##
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid "Precedence"
msgstr "优先级"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "The following general precedence rules are applied when multiple of the above options provide metadata:"
msgstr "当多个上述选项提供元数据时应用以下通用优先规则："

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "The metadata file (i. e. `<fdroiddata>/metadata/<packageId>.yml`) overwrites *fdroiddata* files, even localized ones."
msgstr "元数据文件（即 `<fdroiddata>/metadata/<packageId>.yml`）覆盖*fdroiddata* 文件，甚至是本地化的。"

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "The *fdroiddata* files overwrite metadata from the app source."
msgstr "*fdroiddata* 文件覆盖应用源代码中的元数据。"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
#, no-wrap
msgid ""
"* For data that is also contained in the APK file like the app's name, the previous two options both overwrite the\n"
"data from the APK file.\n"
msgstr "* 应用名称等数据也包含在 APK 文件中，前两个选项均会覆盖此类数据。\n"

#. type: Plain text
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "However, the following more specific rule also applies:"
msgstr "然而，也应用以下更具体的规则："

#. type: Bullet: '* '
#: _docs/All_About_Descriptions_Graphics_and_Screenshots.md
msgid "Graphic files from the app's source of *fdroiddata* overwrites files in the repo."
msgstr "来自应用的 *fdroiddata* 源的图像文件覆盖存储库中的文件。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/All_our_APIs.md
#, no-wrap
msgid "All our APIs"
msgstr "我们的全部 API"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "For F-Droid to be trusted, we need to be transparent.  Making it easy for people to pay attention to all the processes and systems we use helps us stay secure.  These are the APIs with key information about the publishing process."
msgstr "为了使 F-Droid 值得信赖，我们需要透明。让人们可以轻易关注我们使用的所有流程和系统帮助我们保持安全。这些是关于发布流程的关键信息的 API。"

#. type: Title ##
#: _docs/All_our_APIs.md
#, no-wrap
msgid "Active packages"
msgstr "活跃包"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "There is a per-app API accessible via `https://f-droid.org/api/v1/packages`, which can be used to query information about the applications in the main repository. The JSON API currently lists the published and suggested versions. Archived applications and packages are not available in this API."
msgstr "通过 `https://f-droid.org/api/v1/packages`可访问一个每应用 API, 它可用来查询主存储库中应用的信息。JSON API 目前列出了已发布和建议的版本。存档的应用和包在此 API 中不可用。"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "Example request:"
msgstr "示例请求："

#. type: Fenced code block
#: _docs/All_our_APIs.md
#, no-wrap
msgid "GET https://f-droid.org/api/v1/packages/org.fdroid.fdroid HTTP/1.1\n"
msgstr "GET https://f-droid.org/api/v1/packages/org.fdroid.fdroid HTTP/1.1\n"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "Example response:"
msgstr "示例响应："

#. type: Fenced code block
#: _docs/All_our_APIs.md
#, no-wrap
msgid ""
"HTTP/1.1 200 OK\n"
"Content-Type: application/json; charset=utf-8\n"
msgstr ""
"HTTP/1.1 200 OK\n"
"Content-Type: application/json; charset=utf-8\n"

#. type: Fenced code block (json)
#: _docs/All_our_APIs.md
#, no-wrap
msgid ""
"{\n"
"  \"packageName\": \"org.fdroid.fdroid\",\n"
"  \"suggestedVersionCode\": 1009000,\n"
"  \"packages\": [\n"
"    {\n"
"      \"versionName\": \"1.10-alpha0\",\n"
"      \"versionCode\": 1010000\n"
"    },\n"
"    {\n"
"      \"versionName\": \"1.9\",\n"
"      \"versionCode\": 1009000\n"
"    }\n"
"  ]\n"
"}\n"
msgstr ""
"{\n"
"  \"packageName\": \"org.fdroid.fdroid\",\n"
"  \"suggestedVersionCode\": 1009000,\n"
"  \"packages\": [\n"
"    {\n"
"      \"versionName\": \"1.10-alpha0\",\n"
"      \"versionCode\": 1010000\n"
"    },\n"
"    {\n"
"      \"versionName\": \"1.9\",\n"
"      \"versionCode\": 1009000\n"
"    }\n"
"  ]\n"
"}\n"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "This API is already used by shields.io project to provide F-Droid badges, [like this](https://img.shields.io/f-droid/v/org.fdroid.fdroid)."
msgstr "shields.io 已经使用这个 API 来提供 F-Droid 徽章，[像这样](https://img.shields.io/f-droid/v/org.fdroid.fdroid)。"

#. type: Title ###
#: _docs/All_our_APIs.md
#, no-wrap
msgid "The repo index"
msgstr "存储库索引"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "F-Droid is built around a signed index of all the apps and packages that are available.  This is a JSON file, though more of an index than an API since all the information is distributed via a single file."
msgstr "F-Droid 是围绕所有可用的应用和软件包的签名索引构建的。  这是一个 JSON 文件，尽管它更像是一个索引而不是一个 API，因为所有信息都通过一个文件分发。"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/index-v2.json>"
msgstr "<https://f-droid.org/repo/index-v2.json>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/index-v1.json>"
msgstr "<https://f-droid.org/repo/index-v1.json>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/archive/index-v2.json>"
msgstr "<https://f-droid.org/archive/index-v2.json>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/archive/index-v1.json>"
msgstr "<https://f-droid.org/archive/index-v1.json>"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "As of index-v2, there is support for files that only contain the changes, known as \"diff\" files.  There is also a separate entry point, which is signed by a JAR and a GPG signature and lists the available index and diff files."
msgstr "从 index-v2 开始，支持仅包含更改的文件，称为差异（“diff”）文件。  还有一个单独的入口点，由 JAR 和 GPG 签名签署，并列出可用的索引和差异文件。"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/entry.jar>"
msgstr "<https://f-droid.org/repo/entry.jar>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/entry.json>"
msgstr "<https://f-droid.org/repo/entry.json>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/entry.json.asc>"
msgstr "<https://f-droid.org/repo/entry.json.asc>"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "The v1 repo index formats come in the form of a signed JAR file that contains _index-v1.json_.  The best method is to verify the JAR signature, then extract _index-v1.json_ if it validates. The _fdroidserver_ Python library provides `fdroidserver.download_repo_index()` to make this easy to do."
msgstr "v1 仓库索引以签名的 JAR 文件的形式出现，该文件包含 _index-v1.json_。  最好的方法是验证 JAR 签名，然后提取 _index-v1.json_ ，如果验证通过的话。 _fdroidserver_ Python 库提供 `fdroidserver.download_repo_index()` 使这很容易完成。"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/index-v1.jar>"
msgstr "<https://f-droid.org/repo/index-v1.jar>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/archive/index-v1.jar>"
msgstr "<https://f-droid.org/archive/index-v1.jar>"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "There are also GPG signatures for verifying the JSON files:"
msgstr "还有用于验证下列 JSON 文件的 GPG 签名："

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/index-v2.json.asc>"
msgstr "<https://f-droid.org/repo/index-v2.json.asc>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/index-v1.json.asc>"
msgstr "<https://f-droid.org/repo/index-v1.json.asc>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/archive/index-v2.json.asc>"
msgstr "<https://f-droid.org/archive/index-v2.json.asc>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/archive/index-v1.json.asc>"
msgstr "<https://f-droid.org/archive/index-v1.json.asc>"

#. type: Title ###
#: _docs/All_our_APIs.md
#, no-wrap
msgid "App Search API"
msgstr "应用搜索 API"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "We've got a basic web-api for performing a full-text searches on the _f-droid.org_ repository."
msgstr "我们有了一个基础的 web-api 用来执行对 _f-droid_ 存储库的全文搜索。"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://search.f-droid.org/api/search_apps?q=f-droid>"
msgstr "<https://search.f-droid.org/api/search_apps?q=f-droid>"

#. type: Title ###
#: _docs/All_our_APIs.md
#, no-wrap
msgid "App build metadata"
msgstr "应用构建元数据"

#. type: Plain text
#: _docs/All_our_APIs.md
#, no-wrap
msgid ""
"Every app in _f-droid.org_ has a corresponding\n"
"[build metadata file]({{ site.baseurl }}/docs/Build_Metadata_Reference) in\n"
"[_fdroiddata_](https://gitlab.com/fdroid/fdroiddata).  In order to encourage\n"
"more creative reuse, we keep our data in standard formats in easy to find\n"
"places.  The whole app collection is in [YAML format]({%\n"
"post_url 2019-09-11-yaml-metadata %}).  The file can be directly accessed\n"
"by Application ID using the GitLab Raw URL\n"
"`https://gitlab.com/fdroid/fdroiddata/-/raw/master/metadata/<ApplicationID>.yml`\n"
"(e.g. <https://gitlab.com/fdroid/fdroiddata/-/raw/master/metadata/org.fdroid.fdroid.yml>).\n"
"The repo index and the [GitLab Repository Files\n"
"API](https://docs.gitlab.com/ee/api/repository_files.html) can be used to query\n"
"which Application IDs are available.  These files are also available via the\n"
"mirror on GitHub,\n"
"e.g. <https://raw.githubusercontent.com/f-droid/fdroiddata/master/metadata/org.fdroid.fdroid.yml>\n"
msgstr ""
"_f-droid.org_ 中的每个应用在 \n"
"[_fdroiddata_](https://gitlab.com/fdroid/fdroiddata) 中\n"
"有一个相应的[构建元数据文件]({{ site.baseurl }}/docs/Build_Metadata_Reference) 。\n"
"为了鼓励更多有创意的重用，\n"
"我们将数据以标准格式存储在易于获取的地方。\n"
"全部应用集合以 [YAML 格式]({%\n"
"post_url 2019-09-11-yaml-metadata %})存储。\n"
"文件可以通过 Application ID 使用 GitLab Raw URL\n"
"`https://gitlab.com/fdroid/fdroiddata/-/raw/master/metadata/<ApplicationID>.yml`\n"
"（例如 <https://gitlab.com/fdroid/fdroiddata/-/raw/master/metadata/org.fdroid.fdroid.yml>）直接访问。\n"
"存储库索引和 \n"
"[GitLab 仓库文件\n"
"API](https://docs.gitlab.com/ee/api/repository_files.html) \n"
"可以用于请求可用的 Application ID。这些文件也可以通过 GitHub 上的镜像获取，例如 <https://raw.githubusercontent.com/f-droid/fdroiddata/master/metadata/org.fdroid.fdroid.yml>\n"

#. type: Title ###
#: _docs/All_our_APIs.md
#, no-wrap
msgid "f-droid.org build server status"
msgstr "f-droid.org 构建服务器状态"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "The four main steps of the build cycle are: _checkupdates_, _build_, _update_, and _deploy_.  There is a JSON file for each one of those with status information.  It is posted once that step completes running.  The step that is currently running is posted to _running_."
msgstr "构建循环的四个主要步骤为：_checkupdates_，_build_，_update_ 和 _deploy_。每个步骤有一个包含状态信息的 JSON 文件。步骤运行完成后此文件将立即发布。当前运行的步骤发布在_running_。"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/status/running.json>"
msgstr "<https://f-droid.org/repo/status/running.json>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/status/build.json>"
msgstr "<https://f-droid.org/repo/status/build.json>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/status/update.json>"
msgstr "<https://f-droid.org/repo/status/update.json>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://f-droid.org/repo/status/deploy.json>"
msgstr "<https://f-droid.org/repo/status/deploy.json>"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "Two examples of how these JSON APIs can be used are the [F-Droid Monitor](https://monitor.f-droid.org/) website and the [F-Droid Build Status]({{ site.baseurl }}/packages/de.storchp.fdroidbuildstatus/) app."
msgstr "使用这些 JSON API 的例子可以参见 [F-Droid Monitor](https://monitor.f-droid.org/) 网站和 [F-Droid Build Status]({{ site.baseurl }}/packages/de.storchp.fdroidbuildstatus/) 应用。"

#. type: Title ###
#: _docs/All_our_APIs.md
#, no-wrap
msgid "Mirror and repo monitoring"
msgstr "镜像和存储库监视器"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "[_mirror-monitor_](https://gitlab.com/fdroid/mirror-monitor) and [_repo-monitor_](https://gitlab.com/fdroid/repo-monitor) are automated jobs that check various stats about _f-droid.org_ mirrors and third party repos respectively.  They each provide a single, large JSON log of all the times the checks where run:"
msgstr "[_mirror-monitor_](https://gitlab.com/fdroid/mirror-monitor) 和 [_repo-monitor_](https://gitlab.com/fdroid/repo-monitor) 分别是检查 _f-droid.org_ 镜像和第三方存储库状态的自动化任务。它们提供了一个单一大文件 JSON 日志记录了所有运行的检查："

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "_f-droid.org_ mirror status: <https://fdroid.gitlab.io/mirror-monitor/report.json>"
msgstr "_f-droid.org_ 镜像状态：<https://fdroid.gitlab.io/mirror-monitor/report.json>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "third-party repo status: <https://fdroid.gitlab.io/repo-monitor/report.json>"
msgstr "第三方存储库状态：<https://fdroid.gitlab.io/repo-monitor/report.json>"

#. type: Title ###
#: _docs/All_our_APIs.md
#, no-wrap
msgid "Reproducible builds"
msgstr "可重复构建"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "_verification.f-droid.org_ is a rebuilder that rebuilds the official releases from _f-droid.org_, then checks to see if they were [reproducibly built](https://reproducible-builds.org/). There is an entry point for each package based on the package name: <https://verification.f-droid.org/org.fdroid.fdroid.json>"
msgstr "_verification.f-droid.org_ 是一个重构器，它从 _f-droid.org_ 重新构建官方发行版, 然后检查它们是否[可重复构建](https://reproducible-builds.org/)。每个包都有一个基于包名的入口点: <https://verification.f-droid.org/org.fdroid.fdroid.json>"

#. type: Plain text
#: _docs/All_our_APIs.md
#, no-wrap
msgid ""
"Then there is a JSON file per APK that has been checked, where the filename\n"
"follows the pattern `<ApplicationId>_<VersionCode>.apk.json`, for example:\n"
"<https://verification.f-droid.org/org.fdroid.fdroid_1010050.apk.json>\n"
msgstr ""
"然后，每个已检查的 APK 都有一个 JSON 文件，\n"
"其中的文件名格式为 `<ApplicationId>_<VersionCode>.apk.json`，示例：\n"
"<https://verification.f-droid.org/org.fdroid.fdroid_1010050.apk.json>\n"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "There is also a listing of all the successfully verified APKs: <https://verification.f-droid.org/verified.json>"
msgstr "还有一个所有成功验证过的 APK 的清单：<https://verification.f-droid.org/verified.json>"

#. type: Title ###
#: _docs/All_our_APIs.md
#, no-wrap
msgid "Binary transparency logs"
msgstr "二进制透明度日志"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "[Binary transparency](https://wiki.mozilla.org/Security/Binary_Transparency) is the idea that all released packages should be logged as they are published.  This provides a way to check if a given binary was produced by the publisher, or came from somewhere else, e.g. as an exploit.  _fdroidserver_ has built in tools for managing a binary transparency log of the index files as part of the release process. This has been enabled on _f-droid.org_: <https://gitlab.com/fdroid/f-droid.org-transparency-log>"
msgstr "[二进制透明度](https://wiki.mozilla.org/Security/Binary_Transparency)指所有发布的包应当应当如它们发布的原样记录。这提供了检查给出的二进制文件是否由发布者制作，或来自其他地方，如漏洞。_fdroidserver_ 拥有作为发布过程的一部分管理二进制透明度日志的内建工具。它已经在 _f-droid.org_ 上启用: <https://gitlab.com/fdroid/f-droid.org-transparency-log>"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "Since Gradle and the Google Android Tools team does not publish one, F-Droid has done it.  The basic API is a JSON file with a listing of all URLs known to have be published.  Each URL then contains a list of SHA-256 checksums that the log process has seen.  There are also other files tracked, based on what the publisher provides."
msgstr "因为 Gradle 和 Google Android Tools team 没有发布一个，F-Droid 做了。基本 API 是一个 JSON 文件包含包含已发布 URL 的列表。每个 URL 包含一个日志过程得到的 SHA-256 校验和列表。也有其他被跟踪的文件，取决于发布者提供什么。"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://gitlab.com/fdroid/gradle-transparency-log/-/raw/master/checksums.json>"
msgstr "<https://gitlab.com/fdroid/gradle-transparency-log/-/raw/master/checksums.json>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://gitlab.com/fdroid/android-sdk-transparency-log/-/raw/master/checksums.json>"
msgstr "<https://gitlab.com/fdroid/android-sdk-transparency-log/-/raw/master/checksums.json>"

#. type: Title ###
#: _docs/All_our_APIs.md
#, no-wrap
msgid "<tt>issuebot</tt>"
msgstr "<tt>issuebot</tt>"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "[_issuebot_](https://gitlab.com/fdroid/issuebot#json-rest-api) runs on app merge requests and requests for packaging (RFP) to provide information to reviewers about the app.  Much of that information is also published in JSON format.  Each report is made of data from modules that run on a specific app.  There are two entry points:"
msgstr "[_issuebot_](https://gitlab.com/fdroid/issuebot#json-rest-api) 在应用合并请求和打包请求 (RFP) 上运行以对评审者提供关于应用的信息。大部分这些信息也以 JSON 格式提供。每个报告由来自在特定应用上运行的模块的数据组成。有两个入口点："

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://fdroid.gitlab.io/rfp/issuebot/applicationIds.json>"
msgstr "<https://fdroid.gitlab.io/rfp/issuebot/applicationIds.json>"

#. type: Bullet: '* '
#: _docs/All_our_APIs.md
msgid "<https://fdroid.gitlab.io/rfp/issuebot/sourceUrls.json>"
msgstr "<https://fdroid.gitlab.io/rfp/issuebot/sourceUrls.json>"

#. type: Title ###
#: _docs/All_our_APIs.md
#, no-wrap
msgid "Metrics"
msgstr "指标"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "[Usage data]({% post_url 2019-04-15-privacy-preserving-analytics %})  is gathered from [various F-Droid websites](https://fdroid.gitlab.io/metrics/)  and published with no personally identifiable information (PII).  It is published with one JSON file per-week, with a JSON index file per website.  For example, here is a week of search metrics: <https://fdroid.gitlab.io/metrics/search.f-droid.org/2021-01-18.json>"
msgstr "[使用数据]({% post_url 2019-04-15-privacy-preserving-analytics %})从[多个 F-Droid 网站](https://fdroid.gitlab.io/metrics/)生成并发布，不包含个人识别信息 (PII)。每周发布一个 JSON 文件，每个网站发布一个 JSON 索引文件。例如，这是一周的搜索指标：<https://fdroid.gitlab.io/metrics/search.f-droid.org/2021-01-18.json>"

#. type: Plain text
#: _docs/All_our_APIs.md
#, no-wrap
msgid ""
"Though not really an API, the <ftp.fau.de> mirror does provide some metrics:\n"
"https://ftp.fau.de/cgi-bin/show-ftp-stats.cgi\n"
msgstr ""
"尽管并非真正的 API，<ftp.fau.de> 镜像提供一些统计数据：\n"
"https://ftp.fau.de/cgi-bin/show-ftp-stats.cgi\n"

#. type: Title ###
#: _docs/All_our_APIs.md
#, no-wrap
msgid "Git stats"
msgstr "Git 统计数据"

#. type: Plain text
#: _docs/All_our_APIs.md
msgid "Each _git_ repo has lots of interesting metadata.  The _GitStats_ project generates nice charts from that data.  This is not quite an API, but it is related since it is using public project data.  Pre-generated pages for each of the central git repos are visible here: <https://fdroid.gitlab.io/>."
msgstr "每个  _git_ 存储库有很多令人感兴趣的元数据。_GitStats_ 项目从这些数据中生成漂亮的图表。这不算一个 API，但它相关因为它使用公开项目数据。可从此处访问每个中心化 git 存储库的预生成页面：<https://fdroid.gitlab.io/>。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Anti-Features.md
#, no-wrap
msgid "Anti-Features"
msgstr "负面特征"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "When reviewing apps to accept, F-Droid takes the user's point of view, first and foremost.  We start with [strict acceptance criteria](../Inclusion_Policy) based on the principles of free software and user control.  There are some things about an app that might not block it from inclusion, but many users might not want to accept them.  For these kinds of things, F-Droid has a defined set of Anti-Features.  Apps can then be marked with these Anti-Features so users can clearly choose whether the app is still acceptable."
msgstr "审查要接受的应用时，F-Droid 会首先从用户的角度出发。我们从基于自由软件和用户控制原则的[严格的收录标准](../Inclusion_Policy)开始。应用的某些内容可能不会妨碍它被收录，但许多用户也许不想接受它们。 为了处理这类情况，F-Droid 制定了一系列明确的负面特征来标记应用，以便用户选择是否仍要接受该应用。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Anti-Features are organized into \"flags\" that packagers can use to mark apps, warning of possibly undesirable behaviour from the user's perspective, often serving the interest of the developer or a third party.  Free software packages do not exist in a bubble.  For one piece of software to be useful, it usually has to integrate with some other software.  Therefore, users that want free software also want to know if an app depends on or promotes any proprietary software.  Sometimes, there are concepts in Anti-Features that overlap with tactics used by third parties against users.  F-Droid always marks Anti-Features from the user's point of view.  For example, [NSFW](#NSFW) might be construed as similar to a censor's blocklists, but in our case, the focus is on the user's context and keeping the user in control."
msgstr "负面特征被组织成“标记”，打包器可以用它们来标记应用，警告从用户的角度看来可能不受欢迎的行为，这些行为通常服务于开发人员或第三方的利益。  自由软件包不是孤立存在的。  要使一个软件可用，它通常必须与其他一些软件集成。  因此，想要自由软件的用户也想知道一个应用是否依赖或推广任何专有软件。  有时，负面特征中的某些概念与第三方针对用户使用的策略重叠，而 F-Droid 始终从用户的角度标记负面特征。  比如， [NSFW](#NSFW) 可能被解释为类似于审查员的黑名单，但在 F-Droid 中，我们关注的是用户的视角和掌控权。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "You will see our Anti-Features in action when viewing the details of any app containing one or more Anti-Features, whether in the F-Droid client or on this website.  The F-Droid client also provides settings to hide apps with certain Anti-Features."
msgstr "无论是在 F-Droid 客户端还是在网站上查看任何包含一个或多个负面特征的应用的详细信息时，你都会看到我们的负面特征的实际情况。  F-Droid 客户端还提供设置项来隐藏具有某些负面特征的应用。"

#. type: Title ##
#: _docs/Anti-Features.md
#, no-wrap
msgid "List of Anti-Features"
msgstr "负面特征列表"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "F-Droid currently uses this list of Anti-Features for labeling apps we are shipping:"
msgstr "F-Droid 目前使用此负面特征列表来标记我们正在发布的应用："

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[Ads](#Ads) - advertising"
msgstr "[广告](#Ads) - 广告"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[Disabled Algorithm](#DisabledAlgorithm) - signed using an unsafe algorithm"
msgstr "[禁用的算法](#DisabledAlgorithm) - 使用不安全的算法来签名"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[Known Vulnerability](#KnownVuln) - known security vulnerability"
msgstr "[含有已知漏洞](#KnownVuln) - 已知的安全漏洞"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[Non-Free Addons](#NonFreeAdd) - promotes other non-libre apps or plugins"
msgstr "[非自由插件](#NonFreeAdd) - 推广其他非自由应用或插件"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[Non-Free Assets](#NonFreeAssets) - non-libre media in things that are not code (e.g. images, sound, music, 3D-models, or video)"
msgstr "[非自由资产](#NonFreeAssets) - 源代码之外存在非自由媒体（例如图像，声音，音乐，3D 模型或视频）"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[Non-Free Dependencies](#NonFreeDep) - needs a non-libre app to work (e.g. Spotify, Whatsapp)"
msgstr "[非自由依赖项](#NonFreeDep) - 需要非自由应用才能工作（例如 Spotify,Whatsapp）"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[Non-Free Network Services](#NonFreeNet) - promotes or depends entirely on a non-free network service"
msgstr "[非自由网络服务](#NonFreeNet) - 推广或完全依赖非自由网络服务"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[No Source Since](#NoSourceSince) - source code no longer available, making new releases impossible"
msgstr "[源代码不再可用](#NoSourceSince) - 源代码不再可用，因此无法发布新版本"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[NSFW](#NSFW) - contains content that the user may not want to be publicized or visible everywhere"
msgstr "[NSFW](#NSFW) - 包含用户可能不希望随处公开或可见的内容"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[Tethered Network Services](#TetheredNet) - depends entirely on a certain instance of a network service"
msgstr "[受束缚的网络服务](#TetheredNet) - 完全依赖于网络服务的特定实例"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[Tracking](#Tracking) - tracks and/or reports your activity to somewhere, even when it can be turned off"
msgstr "[跟踪](#Tracking) - 跟踪和/或报告你的活动，即使可以将其关闭"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "[Upstream Non-Free](#UpstreamNonFree) - upstream source code is not libre, and this version has those parts replaced or rewritten"
msgstr "[上游代码非自由](#UpstreamNonFree) - 上游源代码不是自由的，此版本已替换或重写了这些部分"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's a complete [list of all apps in F-Droid containing Anti-Features](https://monitor.f-droid.org/anti-features)."
msgstr "这是完整的 [F-Droid 中所有包含负面特征的应用列表](https://monitor.f-droid.org/anti-features)。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "Ads<a name=\"Ads\" />"
msgstr "广告<a name=\"Ads\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This Anti-Feature is applied to an app that contains advertising."
msgstr "这个负面特征适用于包含广告的应用。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Note that most applications that contain advertising are not Free Software, because they use proprietary software (e.g. AdMob) to provide that advertising. Those apps will not be found in the repo at all, so the only time you would see this Anti-Feature applied would be an app that contains advertising without using Non-Free Software to do it."
msgstr "请注意，大多数包含广告的应用都不是自由软件，因为它们使用专有软件（例如 AdMob）来提供广告。存储库中根本不会有这些应用，因此你唯一能看到应用此负面特征的应用将是，未使用专有软件来包含广告的应用。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's the list of [apps with Ads](https://monitor.f-droid.org/anti-feature/Ads)."
msgstr "这是[带有广告负面特征的应用](https://monitor.f-droid.org/anti-feature/Ads)列表。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "Disabled Algorithm<a name=\"DisabledAlgorithm\" />"
msgstr "禁用的算法<a name=\"DisabledAlgorithm\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This Anti-Feature is applied to apps that were signed using a signature algorithm that is considered outdated or unsafe."
msgstr "这个负面特征适用于使用了过时或不安全签名算法签名的应用。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's the list of [apps signed with Disabled Algorithms](https://monitor.f-droid.org/anti-feature/DisabledAlgorithm)."
msgstr "这是[带有禁用的算法负面特征的应用](https://monitor.f-droid.org/anti-feature/DisabledAlgorithm)列表。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "Known Vulnerability<a name=\"KnownVuln\" />"
msgstr "含有已知漏洞<a name=\"KnownVuln\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This Anti-Feature is applied to apps with a known security vulnerability, found by one of the scanners in _fdroidserver_."
msgstr "这个负面特征应用于存在已知安全漏洞的应用，由 _fdroidserver_ 的一个扫描器所发现。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's the list of [apps with Known Vulnerabilities](https://monitor.f-droid.org/anti-feature/KnownVuln)."
msgstr "这是[带有含有已知漏洞负面特征的应用](https://monitor.f-droid.org/anti-feature/KnownVuln)列表。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "Non-Free Addons<a name=\"NonFreeAdd\" />"
msgstr "非自由插件<a name=\"NonFreeAdd\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This Anti-Feature is applied to apps that, although Free Software themselves, promote other Non-Free applications or plugins."
msgstr "此负面特征适用于那些虽然本身是自由软件，但却推广其他非自由应用或插件的应用。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's the list of [apps with Non-Free Addons](https://monitor.f-droid.org/anti-feature/NonFreeAdd)."
msgstr "这是[带有非自由插件负面特征的应用](https://monitor.f-droid.org/anti-feature/NonFreeAdd)列表。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "Non-Free Assets<a name=\"NonFreeAssets\" />"
msgstr "非自由资产<a name=\"NonFreeAssets\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This Anti-Feature is applied to apps that contain and make use of Non-Free assets. The most common case is apps using artwork - images, sounds, music, etc. - under a license that restricts commercial usage or making derivative works (for example, any Creative Commons license with a \"Non-Commercial\" (NC) or \"No Derivatives\" (ND) restriction)."
msgstr "此负面特征适用于包含并使用非自由资产的应用。最常见情况是应用中使用了在限制商用或进行衍生创作的许可证下授权的艺术作品像是图片、声音、音乐等（比如，任何带 \"Non-Commercial\" (NC) 或 \"No Derivatives\" (ND) 限制的 Creative Commons 许可证）。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's the list of [apps with Non-Free Assets](https://monitor.f-droid.org/anti-feature/NonFreeAssets)."
msgstr "这是[带有非自由资产负面特征的应用](https://monitor.f-droid.org/anti-feature/NonFreeAssets)列表。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "Non-Free Dependencies<a name=\"NonFreeDep\" />"
msgstr "非自由依赖项<a name=\"NonFreeDep\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This Anti-Feature is applied to apps that require things that are not Free Software in order to run."
msgstr "此负面特征适用于需要非自由软件才能运行的应用。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This does not mean that proprietary software is included in the app, but for example, it may depend on other software already being installed on your device. A common example would be an app that doesn't run, or is not useful, unless you have Google Maps installed."
msgstr "此应用本身不含专有软件，但是它可能依赖于设备上已安装的专有软件。一个常见的例子为，除非你安装了 Google 地图，否则此应用无法运行或不能正常工作。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's the list of [apps with Non-Free Dependencies](https://monitor.f-droid.org/anti-feature/NonFreeDep)."
msgstr "这是[带有非自由依赖负面特征的应用](https://monitor.f-droid.org/anti-feature/NonFreeDep)列表。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "Non-Free Network Services<a name=\"NonFreeNet\" />"
msgstr "非自由网络服务<a name=\"NonFreeNet\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This Anti-Feature is applied to apps that promote or depend entirely on a proprietary network service."
msgstr "此负面特征适用于所有推广或完全依赖专有网络服务的应用。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's the list of [apps with Non-Free Network Services](https://monitor.f-droid.org/anti-feature/NonFreeNet)."
msgstr "这是[带有非自由网络服务负面特征的应用](https://monitor.f-droid.org/anti-feature/NonFreeNet)列表。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "No Source Since<a name=\"NoSourceSince\" />"
msgstr "源代码已不可用<a name=\"NoSourceSince\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "The upstream source for this app is no longer available. Either the app went proprietary, the source repository was dropped, or it has moved to a location currently not known to us. This means there will not be further updates unless the source reappears."
msgstr "这个应用的上游源代码不可用。或者是它已经成为专有软件，源代码库弃置，或者是源代码库被转移到我们不知道的位置了。这意味着除非源代码重新出现，不会有进一步更新。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's a list of [apps with No Source](https://monitor.f-droid.org/anti-feature/NoSourceSince)."
msgstr "这是[带有源代码不再可用负面特征的应用](https://monitor.f-droid.org/anti-feature/NoSourceSince)列表。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "NSFW<a name=\"NSFW\" />"
msgstr "NSFW<a name=\"NSFW\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This Anti-Feature is applied to an app that contains content that the user may not want to be publicized or visible everywhere. The marked app may contain nudity, profanity, slurs, violence, intense sexuality, political incorrectness, or other potentially disturbing subject matter.  This is especially relevant in environments like workplaces, schools, religious and family settings. The name comes from the Internet term \"Not safe for work\"."
msgstr "这个负面特征应用于包含用户可能不希望随处公开或可见的内容的应用。被标记的应用可能包含裸体、亵渎、侮辱、暴力、强烈的性元素、政治不正确，或其他潜在的令人不安的主题。 这一负面特征与工作场所、学校、宗教和家庭环境尤其相关。NSFW 这个名称来自网络术语“Not safe for work”。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's the list of [apps with NSFW](https://monitor.f-droid.org/anti-feature/NSFW)."
msgstr "这是[带 NSFW 负面特征的应用](https://monitor.f-droid.org/anti-feature/NSFW)列表。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "Tethered Network Services<a name=\"TetheredNet\" />"
msgstr "受束缚的网络服务<a name=\"TetheredNet\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This Anti-Feature is applied to apps that depend entirely on a service which is impossible (or not easy) to replace.  Replacement requires changes to the app or service. This Anti-Feature would not be applied if there is a simple configuration option that allows pointing the app to a running instance of an alternative, publicly available, self-hostable server solution."
msgstr "此负面特征适用于推广或完全依赖于不可能或不易替换的服务的的应用。替换需要对应用或服务进行修改。如果有一个简单的配置选项，允许将应用指向另一个备选的、公开可用的、可自托管的服务器解决方案，那么这个负面特征就不适用。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's the list of [apps with Tethered Network Services](https://monitor.f-droid.org/anti-feature/TetheredNet)."
msgstr "这是[受束缚网络服务应用](https://monitor.f-droid.org/anti-feature/NonFreeNet)的列表。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "Tracking<a name=\"Tracking\" />"
msgstr "跟踪<a name=\"Tracking\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This Anti-Feature is applied to apps that track you and/or report your activity to somewhere, either without your permission or by default (i.e. you'd have to actively seek out an option to disable it)."
msgstr "此负面特征适用于跟踪你和/或向某处报告你的活动的应用，无论是在未经你的许可的情况下，还是在默认情况下（即，你必须主动寻找禁用该功能的选项）。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Examples of where this Anti-Feature might be applied:"
msgstr "可能适用该负面特征的例子："

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "Sending crash reports without your knowledge or permission"
msgstr "在你不知情或未经许可的情况下发送崩溃报告"

#. type: Bullet: '* '
#: _docs/Anti-Features.md
msgid "Checking for updates without your knowledge or permission"
msgstr "在你不知情或未经许可的情况下检查更新"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Examples of where it would not be applied - any of the above, if the functionality is opt-in (i.e. you are asked before it happens)  and disabled by default. Enabling it should then also require informed consent, i.e. requiring a privacy policy similar to GDPR, and avoid collecting personal data (PII) as far as possible."
msgstr "不适用的例子 - 如果该功能是可选的（即在发生之前询问你）并且默认禁用，对于上述任何一项均如此。此外，启用它还应要求知情同意，即要求有类似于 GDPR 的隐私政策，并尽可能避免收集个人数据 (PII)。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Note that frequently app tracking is implemented using proprietary software, e.g. Google Analytics or Flurry. Apps containing these proprietary libraries will **not** be found in the F-Droid repo."
msgstr "请注意，应用跟踪经常使用专有软件（例如， Google Analytics 或 Flurry）实现。包含这些专有库的应用将**不会**在 F-Droid 存储库中出现。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's the list of [apps with Tracking](https://monitor.f-droid.org/anti-feature/Tracking)."
msgstr "这是[带有跟踪负面特征的应用](https://monitor.f-droid.org/anti-feature/Tracking)列表。"

#. type: Title ###
#: _docs/Anti-Features.md
#, no-wrap
msgid "Upstream Non-Free<a name=\"UpstreamNonFree\" />"
msgstr "上游代码非自由<a name=\"UpstreamNonFree\" />"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This Anti-Feature is applied to apps where the upstream source code includes proprietary software by default in their own releases."
msgstr "这个负面特征适用于上游源代码原本包含专有软件的应用。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "This does not mean that proprietary software is included in the app.  Most likely, the F-Droid build has been patched in some way to remove the Non-Free code/libraries, and/or some functionality may be missing.  The app's description will usually go into more detail about this."
msgstr "这并非代表此应用包含专有软件。最有可能的是，该应用在 F-Droid 上的构建已经以某种方式打了补丁，删除了非自由代码/库，和/或一些功能可能丢失。 该应用的描述通常会更详细地说明这一点。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "In our experience, where the upstream developer includes Non-Free libraries, sooner or later they will include more Non-Free libraries, or other Anti-Features. Frequently they become impossible to maintain/update in F-Droid. If there is an alternative, it is recommended that you avoid applications with this Anti-Feature if future updates are important to you."
msgstr "根据我们的经验，如果上游开发者开始加入一些非自由库，他们迟早要加入更多，或者加入其他负面特征。这些应用经常变得无法在 F-Droid 维护/更新。如果有其他选择，如果该应用未来的更新对你很重要，我们建议你避免使用带有这种负面特征的应用。"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "Here's the list of [apps with Upstream Non-Free](https://monitor.f-droid.org/anti-feature/UpstreamNonFree)."
msgstr "这是[带有上游代码非自由负面特征的应用](https://monitor.f-droid.org/anti-feature/UpstreamNonFree)列表。"

#. type: Title ##
#: _docs/Anti-Features.md
#, no-wrap
msgid "Reporting Anti-Features"
msgstr "报告负面特征"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "While our package maintainers are working hard to find all Anti-Features and bring them to your attention, some might remain unnoticed or slip in with an app update. Should you discover that an app contains an Anti-Feature F-Droid is not aware of, please report it. You can submit them by E-Mail to [team@f-droid.org](mailto:team@f-droid.org) or open an issue here: [gitlab.com/fdroid/fdroiddata/issues](https://gitlab.com/fdroid/fdroiddata/issues)."
msgstr "尽管我们的包维护者们努力找出所有负面特征并提醒你们，仍有一些负面特征可能未被注意到或者在应用更新时溜进来。如果你发现应用包含 F-Droid 未发现的负面特征，请报告它。你可以通过电子邮件向 [team@f-droid.org](mailto:team@f-droid.org) 提交或打开一个 issue：[gitlab.com/fdroid/fdroiddata/issues](https://gitlab.com/fdroid/fdroiddata/issues)。"

#. type: Title ##
#: _docs/Anti-Features.md
#, no-wrap
msgid "Origins of the F-Droid definition of Anti-Features"
msgstr "F-Droid 负面特征定义的起源"

#. type: Plain text
#: _docs/Anti-Features.md
msgid "The Free Software Foundation (FSF) also has a similar idea, and it is also known as \"Anti-Features\".  [\"Anti-features are sold to customers as features but are fundamental or unavoidable aspects of systems that can only be removed or withheld through technological effort\"](https://www.fsf.org/blogs/community/antifeatures).  Another way of thinking about Anti-Features is that they are [\"functionality that a technology developer will charge users to not include\"](https://www.fsf.org/bulletin/2007/fall/antifeatures/).  The F-Droid definition was initially inspired by FSF's, but our definition has evolved over the years into something different."
msgstr "自由软件基金会（FSF）也有类似的想法，同样被称为“负面特征”。  [“负面特征作为功能出售给客户，但它们是系统基本或不可避免的方面，只能通过技术努力删除或保留”](https://www.fsf.org/blogs/community/antifeatures)。  另一种定义“负面特征”的方式是[“用户向开发者支付费用才能删除的功能”](https://www.fsf.org/bulletin/2007/fall/antifeatures/)。  F-Droid 的定义最初是受到 FSF 的启发，但多年来我们的定义已经演变成不同的东西。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Building_Applications.md
#, no-wrap
msgid "Building Applications"
msgstr "构建应用"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "Instead of (or as well as) including binary APKs from external sources in a repository, you can build them directly from the source code."
msgstr "你可以直接从源代码构建二进制 APK，而不是（或同时）在存储库中包含来自外部源的二进制 APK。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "Using this method, it is is possible to verify that the application builds correctly, corresponds to the source code, and contains only free software. Unfortunately, in the Android world, it seems to be very common for an application supplied as a binary APK to present itself as Free Software when in fact some if not all of the following is true:"
msgstr "使用此方法，可以验证应用构建是否正确，是否与源代码相对应，是否只包含自由软件。不幸的是，在 Android 世界中，以二进制 APK 形式提供应用并声称自己是自由软件似乎司空见惯，它，然而实际上，以下部分甚至全部都是事实："

#. type: Bullet: '1.  '
#: _docs/Building_Applications.md
msgid "The source code (either for a particular version, or even all versions!) is unavailable or incomplete."
msgstr "源代码（对于特定版本，甚至所有版本！）未提供或不完整。"

#. type: Bullet: '2.  '
#: _docs/Building_Applications.md
msgid "The source code is not capable of producing the actual binary supplied."
msgstr "源代码实际无法生成所提供的二进制文件。"

#. type: Bullet: '3.  '
#: _docs/Building_Applications.md
msgid "The 'source code' contains binary files of unknown origin, or with proprietary licenses."
msgstr "“源代码”包含来源不明，或使用专有许可的二进制文件。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "For this reason, source-built applications are the preferred method for the main F-Droid repository, although occasionally for technical or historical reasons, exceptions are made to this policy."
msgstr "因此，从源代码构建应用为 F-Droid 主存储库的首选方法，尽管偶尔出于技术或历史原因，也有例外。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "When building applications from source, it should be noted that you will be signing them (all APK files must be signed to be installable on Android) with your own key. When an application is already installed on a device, it is not possible to upgrade it in place to a new version signed with a different key without first uninstalling the original.  This may present an inconvenience to users, as the process of uninstalling loses any data associated with the previous installation."
msgstr "从源代码编译时，应注意，你需使用自己的密钥对应用签名（所有 APK 必须经过签名才能在 Android 上安装）。如果设备已安装某个应用，升级至使用不同密钥签名的新版本时，需首先卸载该应用。这可能对用户带来不便，因为卸载将导致与已安装应用相关联数据的丢失。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "The process for managing a repository for built-from-source applications is very similar to that described in the Simple Binary Repository chapter, except now you need to:"
msgstr "管理从源代码编译的应用的存储库的流程与《简单二进制存储库》章节中的说明非常相似，不过还需："

#. type: Bullet: '1.  '
#: _docs/Building_Applications.md
msgid "Include Build entries in the metadata files."
msgstr "包含 Build 条目至元数据文件。"

#. type: Bullet: '2.  '
#: _docs/Building_Applications.md
msgid "Run `fdroid build` to build any applications that are not already built."
msgstr "运行 `fdroid build` 来构建任何尚未构建的应用。"

#. type: Bullet: '3.  '
#: _docs/Building_Applications.md
msgid "Run `fdroid publish` to finalise packaging and sign any APKs that have been built."
msgstr "运行`fdroid publish`完成打包，并对所有已构建的 APK 进行签名。"

#. type: Title ###
#: _docs/Building_Applications.md
#, no-wrap
msgid "App data directory aka _fdroiddata_"
msgstr "应用的数据目录，即 _fdroiddata_"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "To do anything, you'll need at least one repository data directory. It's from this directory that you run the `fdroid` command to perform all repository management tasks. You can either create a brand new one, or grab a copy of the data used by the main F-Droid repository:"
msgstr "开始之前，你需要至少一个存储库数据目录。在这个目录下，可运行 `fdroid` 命令执行所有存储库管理任务。可以创建全新的数据，或者复制 F-Droid 主存储库使用的数据："

#. type: Fenced code block (bash)
#: _docs/Building_Applications.md
#, no-wrap
msgid "git clone https://gitlab.com/fdroid/fdroiddata.git\n"
msgstr "git clone https://gitlab.com/fdroid/fdroiddata.git\n"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "Regardless of the intended usage of the tools, you will always need to set up some basic configuration details. This is done by creating a file called _config.yml_ in the data directory. You should do this by copying the example file (`./examples/config.yml`) from the fdroidserver project to your data directory and then editing according to the instructions within."
msgstr "无论如何使用这些工具，总是需要设置一些基本的配置细节：这可通过在数据目录中创建名一个为 _config.yml_ 的文件来完成。你应该从 fdroidserver 项目中复制示例文件 (`./examples/config.yml`) 至你的数据目录，然后根据其中的说明进行编辑。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "Once configured in this way, all the functionality of the tools is accessed by running the `fdroid` command. Run it on its own to get a list of the available sub-commands."
msgstr "按照这种方式设置之后，即可通过 `fdroid` 命令访问这些工具的所有功能。不加参数运行该命令可显示一个可用的子命令的列表。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "You can follow any command with `--help` to get a list of additional options available for that command."
msgstr "任何命令后加上 `--help` 可获取该命令可用的附加选项列表。"

#. type: Fenced code block (bash)
#: _docs/Building_Applications.md
#, no-wrap
msgid "fdroid update --help\n"
msgstr "fdroid update --help\n"

#. type: Title ###
#: _docs/Building_Applications.md
#, no-wrap
msgid "More about `fdroid build`"
msgstr "有关 `fdroid build` 的更多信息"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "When run without any parameters, `fdroid build` will build any and all versions of applications that you don't already have in the `repo` directory (or more accurately, the `unsigned` directory). There are various other things you can do. As with all the tools, the `--help` option is your friend, but a few annotated examples and discussion of the more common usage modes follows:"
msgstr "在不加任何参数的情况下运行时，`fdroid build` 将构建所有不在 `repo` 目录（准确地说，`unsigned` 目录）中的应用版本。你还可以做其他各种事情。和所有工具一样，`--help` 选项很有帮助，以下为一些常见用途的附有注释的示例和说明："

#. type: Plain text
#: _docs/Building_Applications.md
msgid "To build a single version of a single application, you could run the following:"
msgstr "为构建单一应用的单一版本，你可以运行如下命令："

#. type: Fenced code block (bash)
#: _docs/Building_Applications.md
#, no-wrap
msgid "fdroid build org.fdroid.fdroid:16\n"
msgstr "fdroid build org.fdroid.fdroid:16\n"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "This attempts to build version code 16 (which is version 0.25) of the F-Droid client. Many of the tools recognise arguments as packages, allowing their activity to be limited to just a limited set of packages."
msgstr "该命令用于编译版本代码 16（即 0.25 版本）的 F-Droid 客户端。这些工具中许多可将参数识别为包，以便其活动仅限于特定一组包。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "If the build above was successful, two files will have been placed in the `unsigned` directory:"
msgstr "编译成功后，`unsigned` 目录将生成两个文件："

#. type: Fenced code block
#: _docs/Building_Applications.md
#, no-wrap
msgid ""
"org.fdroid.fdroid_16.apk\n"
"org.fdroid.fdroid_16_src.tar.gz\n"
msgstr ""
"org.fdroid.fdroid_16.apk\n"
"org.fdroid.fdroid_16_src.tar.gz\n"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "The first is the (unsigned) APK. You could sign this with a debug key and push it direct to your device or an emulator for testing. The second is a source tarball containing exactly the source that was used to generate the binary."
msgstr "第一个文件是（未签名的）APK。你可以使用调试密钥签名，然后直接在设备或模拟器中进行测试。第二个文件是源代码 tarball，其中包含生成二进制所用的源代码。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "If you were intending to publish these files, you could then run:"
msgstr "如果你想要发布这些文件，请运行："

#. type: Fenced code block (bash)
#: _docs/Building_Applications.md
#, no-wrap
msgid "fdroid publish\n"
msgstr "fdroid publish\n"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "The source tarball would move to the `repo` directory (which is the directory you would push to your web server). A signed and zipaligned version of the APK would also appear there, and both files would be removed from the `unsigned` directory."
msgstr "源代码 tarball 将移动到 `repo` 目录（这是你将要推送到你的 Web 服务器的目录）。APK 的已签名和压缩对齐版本也将出现在那里，并且这两个文件将从 `unsigned` 目录中被删除。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "If you're building purely for the purposes of testing, and not intending to push the results to a repository, at least yet, the `--test` option can be used to direct output to the `tmp` directory instead of `unsigned`. A similar effect could be achieved by simply deleting the output files from `unsigned` after the build, but with the risk of forgetting to do so!"
msgstr "如果你纯粹是为了测试而构建，并且不打算将结果推送到存储库中，至少现在还不打算推送，那么可以使用 `--test` 选项将输出指向到 `tmp` 目录，而不是 `unsigned` 目录。类似的效果可以通过在构建后简单地删除 `unsigned` 目录中的输出文件来实现，但你可能会忘记这么做！"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "Along similar lines (and only in conjunction with `--test`, you can use `--force` to force a build of a Disabled application, where normally it would be completely ignored. Similarly a version that was found to contain ELFs or known Non-Free libraries can be forced to build. See also — _scanignore_ and _scandelete_ in the _Builds_ section."
msgstr "与此相似（并仅在与 `--test` 同时使用时，你可以使用 `--force` 强制构建 Disabled 的应用，一般它会被直接忽略。被发现包含 ELF 或已知非自由库的版本也可以被强制构建。参见 — _构建_章节中的 _scanignore_ 和 _scandelete_。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "If the build was unsuccessful, you can find out why by looking at the output in the _logs/_ directory. If that isn't illuminating, try building the app the regular way, step by step: android update project, ndk-build, ant debug."
msgstr "如果构建未成功，你可以查看 _logs/ _ 文件夹中的输出寻找原因。如果这样仍未找到原因，尝试用常规的方法逐步构建应用：android update project, ndk-build, ant debug。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "Note that source code repositories often contain prebuilt libraries. If the app is being considered for the main F-Droid repository, it is important that all such prebuilts are built either via the metadata or by a reputable third party."
msgstr "请注意，源代码存储库通常包含预构建库。如果想要在 F-Droid 主存储库发布该应用，那么所有这些预构建库都必须通过元数据或由可信的第三方构建，这点非常重要。"

#. type: Title ###
#: _docs/Building_Applications.md
#, no-wrap
msgid "Running `fdroid build` in your app's source"
msgstr "在应用源代码中运行 `fdroid build`"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "Another option for using `fdroid build` is to use a metadata file that is included in the app's source itself, rather than in a _metadata/_ folder with lots of other apps. The _.fdroid.yml_ metadata file should be in the root of your source repo."
msgstr "使用 `fdroid build` 的另一种选择是使用一个元数据文件，该文件包含在应用的源代码中，而不是在一个有很多其他应用的 _metadata/_ 目录中。_.fdroid.yml_ 元数据文件应当位于代码库的根目录下。"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "Once you have that setup, you can build the most recent version of the app using the whole F-Droid stack by running:"
msgstr "设置完成之后，你可以通过运行以下命令使用整个 F-Droid 技术栈构建最新版本应用："

#. type: Fenced code block (bash)
#: _docs/Building_Applications.md
#, no-wrap
msgid "fdroid build\n"
msgstr "fdroid build\n"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "If you want to build every single version, then specify `--all`."
msgstr "如需构建每一个版本，可指定 `--all` 选项。"

#. type: Title ###
#: _docs/Building_Applications.md
#, no-wrap
msgid "Direct Installation"
msgstr "直接安装"

#. type: Plain text
#: _docs/Building_Applications.md
msgid "You can also build and install directly to a connected device or emulator using the `fdroid install` command. If you do this without passing packages as arguments then all the latest built and signed version available of each package will be installed . In most cases, this will not be what you want to do, so execution will stop straight away. However, you can override this if you're sure that's what you want, by using `--all`. Note that currently, no sanity checks are performed with this mode, so if the files in the signed output directory were modified, you won't be notified."
msgstr "你还可以使用 `fdroid install` 命令构建并直接安装到所连接的设备或模拟器上。如果在不将包作为参数传递的情况下执行此操作，则将安装每个包的所有最新构建和签名版本。在大多数情况下，这不是你想要做的，因此将直接终止该命令执行。但是，如果你确定这是你想要的，你可以通过使用 `---all` 来覆盖这一规则。请注意，当前该模式不执行完整性检查，因此，如果已签名输出目录中的文件被修改，你不会被提示。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Building_a_Signing_Server.md
#, no-wrap
msgid "Building a Signing Server"
msgstr "构建签名服务器"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "The Android APK signing model sets the expectation that the signing key will be the same for the entire lifetime of the app.  That can be seen in the recommended lifetime of an Android signing key: [20+ years](https://developer.android.com/studio/publish/app-signing.html#considerations).  On top of that, it is difficult to [migrate an app to a new key](https://guardianproject.info/2015/12/29/how-to-migrate-your-android-apps-signing-key/).  Since the signing key is an essential part to preventing APKs from impersonating another, Android signing keys must be kept safe for the entire life of the app."
msgstr "Android APK 签名模型期望签名密钥在应用的整个生命周期中保持不变。这体现在 Android 签名密钥的推荐使用期限上：[20 年以上](https://developer.android.com/studio/publish/app-signing.html#considerations) 。基于此，很难[将应用迁移到新密钥](https://guardianproject.info/2015/12/29/how-to-migrate-your-android-apps-signing-key/)。因为签名密钥是防止 APK 冒充其他人的重要部分，所以 Android 签名密钥必须在应用的整个生命周期中保证安全。"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "The F-Droid repo signing keys follow a very similar model: the signing key is the essential way to safely identify an F-Droid repo. So the same considerations apply to F-Droid repo signing keys as to APK signing keys.  This also provides some really useful benefits.  Since the integrity of the repo index file and the APKs are guaranteed by the repo signature, the files can be delivered via whatever method is most convenient, and their integrity will be automatically verified by the F-Droid client app, the _f-droid.org_ deploy process, and Repomaker."
msgstr "F-Droid 存储库的签名密钥遵循一个非常相似的模型：签名密钥是安全识别 F-Droid 存储库的重要方式。因此，同样的考虑适用于F-Droid 存储库签名密钥和APK签名密钥。这也提供了一些真正有用的好处。由于存储库索引文件和 APK 的完整性由存储库签名保证，文件可以通过任何最方便的方法交付，它们的完整性将被 F-Droid 客户端应用，_f-droid.org_ 部署过程和 Repomaker 自动验证。"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "This means the security burden is shifted from the online, public webserver to a private signing machine.  Just keeping that machine out of the public eye goes a long way towards improving security.  There are a number of additional measures that can be taken to further improve the security of the signing process.  Here are some approaches, starting with the easiest and least security, and going on to more secure setups that require more work to setup and run.  Signing is not an resource intensive process, so any machine will work, even a 10 year old, basic laptop.  We recommend using a minimal [Debian](https://www.debian.org) install, and rebuilding the machine from scratch."
msgstr "这意味着安全负担从在线的公开的网络服务器转移到了私密的签名机器上。只要让这台机器远离公众的视线，就能在很大程度上提高安全性。可以采取一些额外的措施来进一步提高签名过程的安全性。这里有一些方法，从最简单和最不安全的开始，然后是更安全的设置，但需要更多的工作来设置和运行。签名不是一个资源密集型的过程，所以任何机器都可以工作，甚至是一台 10 年前的基本的笔记本电脑。我们建议使用一个最小的 [Debian](https://www.debian.org) 安装，并从头构建机器。"

#. type: Title ###
#: _docs/Building_a_Signing_Server.md
#, no-wrap
msgid "Automated Signing Server with HSM"
msgstr "带有 HSM 的自动签名服务器"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "For a fully automated signing setup, the machine running the signing needs to be online and running. Ideally this machine would have no remote access, at the very least remote access should be very carefully controlled and monitored.  A laptop makes it easy to work with even when remote access is disabled, since it provides a built-in keyboard and monitor.  If remote access is required, then any basic PC will work fine.  Using a Hardware Security Module (HSM) to store the keys prevents them from being stolen if the server is broken into.  An attacker could only run the signing process on that server."
msgstr "对于一个完全自动化的签名设置，运行签名的机器需要在线并持续运行。理想情况下，这台机器不能有远程访问，至少远程访问应该被非常仔细地控制和监控。笔记本电脑即使在禁用远程访问的情况下，也能很容易地工作，因为它提供了一个内置的键盘和显示器。如果需要远程访问，那么任何基本的个人电脑都可以工作。使用硬件安全模块 (HSM) 来存储密钥可以防止在服务器被攻破时密钥被盗。攻击者只能在该服务器上运行签名过程。"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "Ideally, this machine would only be accessible via Tor.  That hides the physical location of the server, and hides the traffic from network.  This makes it much harder attackers to find the actual machine to attack."
msgstr "理想情况下，这台机器只能通过 Tor 访问。 这隐藏了服务器的物理位置，并隐藏了来自网络的流量。这使得攻击者更难找到实际的机器进行攻击。"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "For the HSM, we recommend using [Nitrokey](https://www.nitrokey.com/)  hardware, since they are free software/hardware, and provide a wide range of options.  Use a separate machine to put the signing keys on HSM.  A good HSM will keep an audit trail of how many signatures have been made, so that information could be used to create an automatic auditing process to raise alarms if too many signatures have been made.  That could mean that this server was breached and used to sign unauthorized packages."
msgstr "对于HSM，我们推荐使用 [Nitrokey](https://www.nitrokey.com/) 硬件，因为它们是自由软件/硬件，并提供广泛的选择。使用一台单独的机器将签名密钥放在 HSM 上。一个好的 HSM 会保存一个审计跟踪，记录签发了多少个签名，所以这些信息可以用来创建一个自动审计程序并在签名过多的时候发出警报。这可能意味着这台服务器被攻破并被用来签署未经授权的软件包。"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "Another possibility is to use a setup like [Fedora](https://pagure.io/sigul)'s [Sigul](http://www.devops-blog.net/koji/gpg-signing-rpms-with-sigul-signing-server-koji-integration)  that involves three machines."
msgstr "另一种可能是使用类似 [Fedora](https://pagure.io/sigul) 的 [Sigul](http://www.devops-blog.net/koji/gpg-signing-rpms-with-sigul-signing-server-koji-integration) 这样的涉及三台机器的设置。"

#. type: Title ###
#: _docs/Building_a_Signing_Server.md
#, no-wrap
msgid "Basic laptop dedicated to signing"
msgstr "专门用于签名的基本笔记本电脑"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "Start with a laptop that can be wiped clean and rebuilt from scratch.  What is most important is that only the essential software is installed on it, and nothing else.  Do not include any browser at all, for example, since that is the most common vector of attack.  No remote access setup (e.g. SSH or VNC) should be installed or configured.  To sign apps and repos, someone would take out this laptop, connect it to the network, and run the signing process.  The signed results can then be published via the network connection.  When the signing is complete, the machine can be turned off and disconnected and kept in a safe place."
msgstr "从一台可以完全清除并从头构建的笔记本电脑开始。最重要的是，只在上面安装必要的软件。例如，不要安装任何浏览器，因为这是最常见的攻击向量。不应安装或配置远程访问设置（如 SSH 或 VNC）。为了签名应用和存储库，有人会拿出这台笔记本电脑，将其连接到网络，并运行签名过程。然后，签名的结果可以通过网络连接发布。当签名完成后，可以关闭机器，断开连接，并保存在一个安全的地方。"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "This could be made quite automatic with some custom scripts.  The person running the process would only need to take out the machine, connect it, turn it on, wait until the process completes, then put it all away again."
msgstr "这可以通过一些定制的脚本使之相当自动化。运行该程序的人只需要拿出机器，连接它，打开它，等待程序完成，然后再把它收起来。"

#. type: Title ###
#: _docs/Building_a_Signing_Server.md
#, no-wrap
msgid "Fully offline signing laptop with USB thumb drives"
msgstr "使用 U 盘的完全离线签名笔记本电脑"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "This process is based on the same basic, stripped down laptop as the previous example.  But this time, the networking should be entirely disabled before the install process.  For example, it is easy in many laptops to physically remove the WiFi card.  Therefore, it makes sense to use a laptop that does not include an ethernet jack, which are usually not possible to remove.  Otherwise, blocklisting all kernel modules related to neworking can suffice.  Since this machine is fully offline, the extra work of using an HSM is not as important, but it can't hurt to include it."
msgstr "这个过程是基于与前一个例子相同的基本的经过裁剪的笔记本电脑。但是这一次，在安装过程中应该完全禁用网络。例如，在许多笔记本电脑中，很容易从物理上拆除 WiFi 卡。因此，使用不包括以太网插口的笔记本电脑是有意义的，这些插口通常无法移除。否则，可以将所有与网络有关的内核模块列入屏蔽名单。由于这台机器是完全离线的，额外使用 HSM 的额外工作并不那么重要但也无妨。"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "Download the full \"CD\" or \"DVD\" image of Debian to run the install.  Be sure to [verify](https://www.debian.org/CD/verify) the GPG signatures and the SHA-256 hashes.  In order to update the offline machine, an \"[apt offline](https://www.debian.org/doc/manuals/apt-offline)\" setup is required."
msgstr "下载完整的 Debian CD 或 DVD 镜像来运行安装。请务必[验证](https://www.debian.org/CD/verify) GPG 签名和 SHA-256 哈希值。为了更新离线机器，需要进行 [apt 离线](https://www.debian.org/doc/manuals/apt-offline) 设置。"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "To be extra careful, all of the software used should be verified.  Chromebooks are nice, cheap laptops that run Linux natively.  They also use Coreboot for the BIOS."
msgstr "为了格外小心，所有使用的软件都应经过验证。Chromebook 是物美价廉的笔记本电脑，可以原生运行 Linux。它们也可以使用 Coreboot 作为 BIOS。"

#. type: Bullet: '* '
#: _docs/Building_a_Signing_Server.md
msgid "Buy a computer off the shelf with cash, avoid having it shipped, especially across borders"
msgstr "用现金购买现成的电脑，避免运输，尤其是跨境运输"

#. type: Bullet: '* '
#: _docs/Building_a_Signing_Server.md
msgid "Buy a Debian-supported [Chromebook](https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook) with removeable WiFi hardware, and needs no binary blobs"
msgstr "购买一个支持 Debian 的 [Chromebook](https://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices/acer-c720-chromebook)，带有可移动的 Wi-Fi 硬件，不需要二进制 blob"

#. type: Bullet: '* '
#: _docs/Building_a_Signing_Server.md
msgid "Install a reproducibly built Coreboot binary"
msgstr "安装一个可重复构建的 Coreboot 二进制文件"

#. type: Bullet: '* '
#: _docs/Building_a_Signing_Server.md
msgid "Install from a reproducibly built Debian image, wiping out Chrome OS entirely"
msgstr "从一个可重复构建的 Debian 镜像中安装，完全清除Chrome OS"

#. type: Title ##
#: _docs/Building_a_Signing_Server.md
#, no-wrap
msgid "The Physical Environment"
msgstr "物理环境"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "The last thing to consider is the physical location where signatures happen, and where essential equipment is stored.  The signing environment must be physically secure. Otherwise, there is no way to prevent laptops or HSMs from being lost or used to sign inappropriate content.  For the offline machines, keeping them in a locked room is a good start.  For an online machine, forcing all network traffic and remote access over Tor hides the physical location of the machine from network observers."
msgstr "最后要考虑的是签名发生的物理地点，以及重要设备的存放地点。签署环境必须在物理上是安全的。否则，没有办法防止笔记本电脑或 HSM 丢失或被用于签名不适当的内容。对于离线机器，把它们放在一个上锁的房间里是一个好的开始。对于在线机器，强制所有的网络流量和远程访问通过 Tor 进行可以向网络观察者隐藏机器的物理位置。"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "For high risk signing keys, using multiple layers of defense is important:"
msgstr "对于高风险的签名密钥，使用多层防护很重要："

#. type: Bullet: '* '
#: _docs/Building_a_Signing_Server.md
msgid "Restricted physical access to HSMs or smart cards"
msgstr "限制对 HSM 或智能卡的物理访问"

#. type: Bullet: '* '
#: _docs/Building_a_Signing_Server.md
msgid "Security cameras"
msgstr "安全摄像机"

#. type: Bullet: '* '
#: _docs/Building_a_Signing_Server.md
msgid "On-site security guards"
msgstr "现场安保人员"

#. type: Bullet: '* '
#: _docs/Building_a_Signing_Server.md
msgid "Visitor logging"
msgstr "访客记录"

#. type: Bullet: '* '
#: _docs/Building_a_Signing_Server.md
msgid "A tools-resistant server safe for online code-signing servers"
msgstr "一款可安全使用工具的服务器，适用于在线代码签名服务器"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "The signing server should be physically separate from the rest of the infrastructure.  And the logs, machine, and network should be periodically audited."
msgstr "签署服务器应与基础设施的其他部分在物理上分开。日志，机器和网络应定期进行审计。"

#. type: Title ##
#: _docs/Building_a_Signing_Server.md
#, no-wrap
msgid "Difficult decisions"
msgstr "困难的决定"

#. type: Plain text
#: _docs/Building_a_Signing_Server.md
msgid "Ideally all of these practices would be put into place, but each of these security measures comes at a cost of difficulty, expense, and complexity.  They can also delay the process of getting regular updates out.  So there are risks of implementing too strict security policies, much like the risks of not implementing enough."
msgstr "理想情况下，所有这些做法都会落实到位，但这些安全措施中的每一项都要付出困难，费用和复杂性的代价。它们也会推迟定期更新的进程。因此，实施太严格的安全政策有风险，就像实施不够的风险一样。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "Build Metadata Reference"
msgstr "构建元数据参考"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Information used by `fdroid update` to compile the public index comes from several sources:"
msgstr "`fdroid update` 用于编译公共索引的信息来自多个来源："

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "APK, media, etc files in the _repo_ sub-directory"
msgstr "_repo_ 子目录中的 APK、媒体等文件"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "per-package \"metadata\" files in the _metadata_ sub-directory"
msgstr "_metadata_ 子目录中每个包的“元数据”文件"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[localizable texts and graphics](../All_About_Descriptions_Graphics_and_Screenshots#in-the-apps-build-metadata-in-an-fdroiddata-collection) in the _metadata_ subdirectory"
msgstr "_metadata_ 子目录下[可本地化的文本和图片](../All_About_Descriptions_Graphics_and_Screenshots#in-the-apps-build-metadata-in-an-fdroiddata-collection)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "localizable texts and graphics [embedded in an app's source code](../All_About_Descriptions_Graphics_and_Screenshots#in-the-apps-source-repository)"
msgstr "[嵌入在应用源代码中](../All_About_Descriptions_Graphics_and_Screenshots#in-the-apps-source-repository)的可本地化的文本和图片"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "These metadata files are simple, easy to edit text files, always named as the \"package name\" with file type appended.  There are a wide range of available fields for adding information to describe packages and/or apps.  For all of the fields like _AuthorName_ that apply to all releases of a package/app, the fields use CamelCase starting with an upper case letter.  All other fields use camelCase starting with a lower case letter, including per-build fields, localized fields, etc."
msgstr "这些元数据文件是简单且易于编辑的文本文件，文件名通常为“包名称”加文件类型。有大量可用字段可用于添加信息以描述包和/或应用。适用于包或应用的所有发布版本的所有字段，如 _AuthorName_，都使用以一个大写字母开头的大驼峰式，形如 CamelCase。包括每个构建字段，本地化字段等在内的所有其他字段都使用一个小写字母开头的小驼峰式，形如 camelCase。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Note that although the metadata files are designed to be easily read and written by humans, they are also processed and written by various scripts. They can be automatically cleaned up when necessary. The structure and comments will be preserved correctly, although the order of fields will be standardised. (In the event that the original file was in a different order, comments are considered as being attached to the field following them). In fact, you can standardise all packages in a repository using a single command, without changing the functional content, by running:"
msgstr "请注意，尽管元数据文件被设计为便于人类读取和写入，但它们也可以通过各种脚本进行处理和写入。必要时可自动格式化。结构和注释将正确保留，但字段顺序将标准化。（如果格式化后字段顺序与原文件中的不同，则注释被视为附加到其后面的字段中）。事实上，你可以通过运行以下命令，在不改变功能内容的情况下，使用单个命令标准化存储库中的所有包："

#. type: Fenced code block
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "fdroid rewritemeta\n"
msgstr "fdroid rewritemeta\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Or just run it on a specific app:"
msgstr "或对特定应用，运行："

#. type: Fenced code block
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "fdroid rewritemeta org.adaway\n"
msgstr "fdroid rewritemeta org.adaway\n"

#. type: Title ##
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "Markup and Data Format"
msgstr "标记和数据格式"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "F-Droid metadata files are written in YAML and have a file extension `.yml`.  The top-most data structure is a \"map\" or \"dictionary\", made up of key/value pairs.  All keys are strings.  There are some internal data types used for values:"
msgstr "F-Droid 元数据用 YAML 写成，文件扩展名为 `.yml`。  最上面的数据结构是”地图“或”目录“，由 key/value 对组成。  所有的 key 均为字符串。  有一些用于 value 的内部数据类型："

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`TYPE_BOOL` - Either `true` or `false`."
msgstr "`TYPE_BOOL` - 要么 `true`，要么 `false`。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`TYPE_BUILD` - A list of build entries, which are maps of key/value pairs."
msgstr "`TYPE_BUILD` - 构建条目列表，条目是 key/value 对的映射。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`TYPE_INT` - An integer in decimal format."
msgstr "`TYPE_INT` - 十进制格式的整数。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`TYPE_LIST` - A list of strings."
msgstr "`TYPE_LIST` - 字符串列表。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`TYPE_MULTILINE` - A block of text with multiple lines."
msgstr "`TYPE_MULTILINE` - 多行文本的区块。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`TYPE_SCRIPT` - A string or list of strings to be executed as a _bash_ script."
msgstr "`TYPE_SCRIPT` - 将作为 _bash_ 脚本执行的字符串或字符串列表。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`TYPE_STRING` - A string."
msgstr "`TYPE_STRING` - 一条字符串。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`TYPE_STRINGMAP` - A map of maps, the inner keys are BCP 47 locales and the values are human-readable text."
msgstr "`TYPE_STRINGMAP` - 地图的地图，内部键是 BCP 47 区域设置，值是人类可读的文本。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The canonical format is [YAML 1.2](https://yaml.org/spec/1.2.2/).  The process of reading metadata files is more tolerant, and will do some automatic type conversions when that can provide a reliable transformation.  `fdroid rewritemeta` will output YAML 1.2, so it will not preserve the original values as written, if they have been converted."
msgstr "标准格式是 [YAML 1.2](https://yaml.org/spec/1.2.2/)。  读取元数据文件的过程容忍度更高，并且在能够提供可靠转换的情况下会执行一些自动类型转换。  `fdroid rewritemeta` 将输出 YAML 1.2，因此如果原始值已被转换，则不会保留写入的原始值。"

#. type: Title ##
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "Fields"
msgstr "字段"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The following sections describe the fields recognised within the file."
msgstr "以下部分描述了文件中可识别的字段。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Categories_](#Categories)"
msgstr "[_Categories_ (分类)](#Categories)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_AuthorName_](#AuthorName)"
msgstr "[_AuthorName_ (作者名)](#AuthorName)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_AuthorEmail_](#AuthorEmail)"
msgstr "[_AuthorEmail_ (作者电子邮箱)](#AuthorEmail)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_AuthorWebSite_](#AuthorWebSite)"
msgstr "[_AuthorWebSite_ (作者网站)](#AuthorWebSite)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_License_](#License)"
msgstr "[_License_ (许可证)](#License)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_AutoName_](#AutoName)"
msgstr "[_AutoName_ (自动命名)](#AutoName)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Name_](#Name)"
msgstr "[_Name_ (应用名称)](#Name)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_WebSite_](#WebSite)"
msgstr "[_WebSite_ (网站)](#WebSite)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_SourceCode_](#SourceCode)"
msgstr "[_SourceCode_ (源代码)](#SourceCode)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_IssueTracker_](#IssueTracker)"
msgstr "[_IssueTracker_ (问题跟踪器)](#IssueTracker)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Translation_](#Translation)"
msgstr "[_Translation_ (翻译)](#Translation)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Changelog_](#Changelog)"
msgstr "[_Changelog_ (更新日志)](#Changelog)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Donate_](#Donate)"
msgstr "[_Donate_ (捐赠)](#Donate)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Liberapay_](#Liberapay)"
msgstr "[_Liberapay_](#Liberapay)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_OpenCollective_](#OpenCollective)"
msgstr "[_OpenCollective_](#OpenCollective)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Bitcoin_](#Bitcoin)"
msgstr "[_Bitcoin_ (比特币)](#Bitcoin)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Litecoin_](#Litecoin)"
msgstr "[_Litecoin_ (莱特币)](#Litecoin)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Summary_](#Summary)"
msgstr "[_Summary_ (概要)](#Summary)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Description_](#Description)"
msgstr "[_Description_ (描述)](#Description)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_MaintainerNotes_](#MaintainerNotes)"
msgstr "[_MaintainerNotes_ (维护者注解)](#MaintainerNotes)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_RepoType_](#RepoType)"
msgstr "[_RepoType_ (存储库类型)](#RepoType)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Repo_](#Repo)"
msgstr "[_Repo_ (存储库)](#Repo)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Binaries_](#Binaries)"
msgstr "[_Binaries_ (二进制文件)](#Binaries)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds_](#Builds)"
msgstr "[_Builds_ (构建)](#Builds)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.versionName_](#build_versionName)"
msgstr "[_Builds.versionName_ (版本名)](#build_versionName)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.versionCode_](#build_versionCode)"
msgstr "[_Builds.versionCode_ (版本代码)](#build_versionCode)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.commit_](#build_commit)"
msgstr "[_Builds.commit_(提交)](#build_commit)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.disable_](#build_disable)"
msgstr "[_Builds.disable_ (禁用)](#build_disable)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.subdir_](#build_subdir)"
msgstr "[_Builds.subdir_ (子文件夹)](#build_subdir)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.submodules_](#build_submodules)"
msgstr "[_Builds.submodules_ (子模块)](#build_submodules)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.sudo_](#build_sudo)"
msgstr "[_Builds.sudo_](#build_sudo)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.timeout_](#build_timeout)"
msgstr "[_Builds.timeout_ (超时)](#build_timeout)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.init_](#build_init)"
msgstr "[_Builds.init_](#build_init)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.oldsdkloc_](#build_oldsdkloc)"
msgstr "[_Builds.oldsdkloc_](#build_oldsdkloc)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.target_](#build_target)"
msgstr "[_Builds.target_](#build_target)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.androidupdate_](#build_androidupdate)"
msgstr "[_Builds.androidupdate_](#build_androidupdate)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.encoding_](#build_encoding)"
msgstr "[_Builds.encoding_](#build_encoding)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.forceversion_](#build_forceversion)"
msgstr "[_Builds.forceversion_](#build_forceversion)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.forcevercode_](#build_forcevercode)"
msgstr "[_Builds.forcevercode_](#build_forcevercode)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.rm_](#build_rm)"
msgstr "[_Builds.rm_](#build_rm)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.extlibs_](#build_extlibs)"
msgstr "[_Builds.extlibs_](#build_extlibs)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.srclibs_](#build_srclibs)"
msgstr "[_Builds.srclibs_](#build_srclibs)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.patch_](#build_patch)"
msgstr "[_Builds.patch_](#build_patch)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.prebuild_](#build_prebuild)"
msgstr "[_Builds.prebuild_](#build_prebuild)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.scanignore_](#build_scanignore)"
msgstr "[_Builds.scanignore_](#build_scanignore)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.scandelete_](#build_scandelete)"
msgstr "[_Builds.scandelete_](#build_scandelete)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.build_](#build_build)"
msgstr "[_Builds.build_](#build_build)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.buildjni_](#build_buildjni)"
msgstr "[_Builds.buildjni_](#build_buildjni)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.ndk_](#build_ndk)"
msgstr "[_Builds.ndk_](#build_ndk)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.gradle_](#build_gradle)"
msgstr "[_Builds.gradle_](#build_gradle)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.maven_](#build_maven)"
msgstr "[_Builds.maven_](#build_maven)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.preassemble_](#build_preassemble)"
msgstr "[_Builds.preassemble_](#build_preassemble)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.gradleprops_](#build_gradleprops)"
msgstr "[_Builds.gradleprops_](#build_gradleprops)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.antcommands_](#build_antcommands)"
msgstr "[_Builds.antcommands_](#build_antcommands)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.output_](#build_output)"
msgstr "[_Builds.output_ (输出)](#build_output)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.postbuild_](#build_postbuild)"
msgstr "[_Builds.postbuild_](#build_postbuild)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.novcheck_](#build_novcheck)"
msgstr "[_Builds.novcheck_](#build_novcheck)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Builds.antifeatures_](#build_antifeatures)"
msgstr "[_Builds.antifeatures_ (负面特征)](#build_antifeatures)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_AllowedAPKSigningKeys_](#AllowedAPKSigningKeys)"
msgstr "[_AllowedAPKSigningKeys_(允许的 APK 签名密钥)](#AllowedAPKSigningKeys)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_AntiFeatures_](#AntiFeatures)"
msgstr "[_AntiFeatures_(负面特征)](#AntiFeatures)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_Disabled_](#Disabled)"
msgstr "[_Disabled_ (已禁用)](#Disabled)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_RequiresRoot_](#RequiresRoot)"
msgstr "[_RequiresRoot_ (需要根权限)](#RequiresRoot)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_ArchivePolicy_](#ArchivePolicy)"
msgstr "[_ArchivePolicy_ (存档策略)](#ArchivePolicy)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_AutoUpdateMode_](#AutoUpdateMode)"
msgstr "[_AutoUpdateMode_ (自动更新模式)](#AutoUpdateMode)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_UpdateCheckMode_](#UpdateCheckMode)"
msgstr "[_UpdateCheckMode_ (更新检查模式)](#UpdateCheckMode)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_UpdateCheckIgnore_](#UpdateCheckIgnore)"
msgstr "[_UpdateCheckIgnore_ (更新检查忽略)](#UpdateCheckIgnore)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_VercodeOperation_](#VercodeOperation)"
msgstr "[_VercodeOperation_ (版本代码操作)](#VercodeOperation)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_UpdateCheckName_](#UpdateCheckName)"
msgstr "[_UpdateCheckName_ (更新检查名称)](#UpdateCheckName)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_UpdateCheckData_](#UpdateCheckData)"
msgstr "[_UpdateCheckData_ (更新检查数据)](#UpdateCheckData)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_CurrentVersion_](#CurrentVersion)"
msgstr "[_CurrentVersion_ (当前版本)](#CurrentVersion)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_CurrentVersionCode_](#CurrentVersionCode)"
msgstr "[_CurrentVersionCode_ (当前版本代码)](#CurrentVersionCode)"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "[_NoSourceSince_](#NoSourceSince)"
msgstr "[_NoSourceSince_ (源代码不可用日期)](#NoSourceSince)"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Categories_<a name=\"Categories\"></a>"
msgstr "_Categories_ (类别)<a name=\"Categories\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Any number of categories for the application to be placed in. There is no fixed list of categories - both the client and the web site will automatically show any categories that exist in any applications.  However, if your metadata is intended for the main F-Droid repository, you should use one of the existing categories (`Connectivity`,`Development`, `Games`,`Graphics`,`Internet`,`Money`,`Multimedia`,`Navigation`,`Phone & SMS`, `Reading`,`Science & Education`,`Security`,`Sports & Health`,`System`,`Theming`, `Time`,`Writing`), or discuss the proposal to add a new one. _Categories_ must be a list of items, even if there is just one."
msgstr "要将应用置入的任意数量的类别。没有固定的类别列表 - 客户端和网站都会自动显示任何应用中存在的任何类别。但是，如果元数据用于 F-Droid 主存储库，则应该使用现有的类别之一（`连接`、`开发`、`游戏`、`图像`、`互联网`、`金融`、`多媒体`、`导航`、`手机 & 短信`、`阅读`、`科学&教育`、`安全`、`体育&健康`、`系统`、`主题`、`时间`、`写作`）或讨论提案以增加一个新类别。_Categories_ 必须是一个项目列表，即使只有一个项目。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<categories>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件(_index.xml_)中，该字段将被转换为 (`<categories>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_AuthorName_<a name=\"AuthorName\"></a>"
msgstr "_AuthorName_ (作者姓名) <a name=\"AuthorName\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The name of the author, either full, abbreviated or pseudonym. If present, it should represent the name(s) as published by upstream, e.g.  in their copyright or authors file. This can be omitted (or left blank)."
msgstr "作者名字可为全名、缩写或别名。如果存在，它应该等同于上游发布的名称，例如在其版权或作者文件中。该部分可省略（或留空）。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<author>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<author>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_AuthorEmail_<a name=\"AuthorEmail\"></a>"
msgstr "_AuthorEmail_ (作者的电子邮箱) <a name=\"AuthorEmail\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The e-mail address of the author(s). This can be omitted (or left blank)."
msgstr "作者的电子邮箱地址。可省略（或留白）。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "__Warning__: this overrides all _AuthorEmail_ entries [set in the app's source code](../All_About_Descriptions_Graphics_and_Screenshots)."
msgstr "__警告__：这会覆盖所有的 _AuthorEmail_ 条目[在应用的源代码中设置](../All_About_Descriptions_Graphics_and_Screenshots)。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<email>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<email>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_AuthorWebSite_<a name=\"AuthorWebSite\"></a>"
msgstr "_AuthorWebSite_ (作者网站) <a name=\"AuthorWebSite\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The website URL of the author(s). This can be omitted (or left blank)."
msgstr "作者网站的链接。可省略（或留空）。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "__Warning__: this overrides all _AuthorWebSite_ entries [set in the app's source code](../All_About_Descriptions_Graphics_and_Screenshots)."
msgstr "__警告__：这会覆盖所有的 _AuthorWebSite_ 条目[在应用的源代码中设置](../All_About_Descriptions_Graphics_and_Screenshots)。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_License_<a name=\"License\"></a>"
msgstr "_License_ (许可证)<a name=\"License\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The overall license for the application in terms of the binary that the user can install. Values should correspond to short identifiers of the [SPDX](https://spdx.org/licenses/) license list. There can only be one license listed here. If there are multiple licenses that apply to the source code, then this field should contain the least restrictive license that the whole app can be used under.  When multiple licenses are combined, that usually means the most restrictive wins."
msgstr "在用户可以安装的二进制文件意义上的应用的总体许可证。值应对应于 [SPDX](https://spdx.org/licenses/) 许可证列表的短标识符。这里只能列出一个许可证。如果有多个适用于源代码的许可证，那么这个字段应该包含整个应用可以使用的限制性最小的许可证。当多个许可证结合时，通常意味着限制性最强的许可证获胜。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "This field cannot represent the complexity of licenses that apply to parts of the app, or apps that have the entire thing released under more than one license."
msgstr "这个字段不能表示适用于部分应用的许可证的复杂性，或者整体在一个以上的许可证下发布的应用。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<license>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<license>`) 。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_AutoName_<a name=\"AutoName\"></a>"
msgstr "_AutoName_ (自动命名的应用名)<a name=\"AutoName\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The name of the application as can best be retrieved from the source code. This is done so that `fdroid checkupdates` can put a familiar name in the description of commits created when a new update of the application is found. The _AutoName_ entry is generated automatically when `fdroid checkupdates` is run, and is only used for the commit messages generated by `fdroid checkupdates`."
msgstr "应用的名称可以最好地从源代码中检索出来。这样做是为了让 `fdroid checkupdates` 能够在发现应用的新更新时，在创建的提交描述中放入一个熟悉的名字。_AutoName_ 条目在 `fdroid checkupdates` 运行时自动生成，并且只用于 `fdroid checkupdates` 生成的提交消息。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Name_<a name=\"Name\"></a>"
msgstr "_Name_(名称)<a name=\"Name\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The title of the application, with optional descriptive phrase. This field will override all other sources of the application name, including scraped from the APK and from [localized metadata](../All_About_Descriptions_Graphics_and_Screenshots).  Setting _Name_ is usually not needed, since the application's correct name is retrieved from the APK file.  However, in a situation where an APK contains a bad or missing application name, it can be overridden using this. Note that this only overrides the name in the list of apps presented in the client; it doesn't change the name or application label in the source code."
msgstr "应用的标题，可选描述性短语。这个字段将覆盖所有其他来源的应用名称，包括从 APK 和[本地化元数据](../All_About_Descriptions_Graphics_and_Screenshots)中抓取的名称。一般不需要设置 _Name_，因为应用的正确名称是从 APK 文件中检索出来的。然而，在 APK 包含一个坏的或缺失的应用名称的情况下，可以用这个来覆盖它。请注意，这只覆盖客户端显示的应用列表中的名称；它并不改变源代码中的名称或应用标签。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "__50 character limit__"
msgstr "__50 个字符限制__"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "__Warning__: this overrides all _Name_/_title_ entries [set in the app's source code](../All_About_Descriptions_Graphics_and_Screenshots)."
msgstr "__警告__：这会覆盖所有的 _Name_ / _title_ 条目[在应用的源代码中设置](../All_About_Descriptions_Graphics_and_Screenshots)。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<name>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<name>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_WebSite_<a name=\"WebSite\"></a>"
msgstr "_WebSite_ (网站)<a name=\"WebSite\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The URL for the application's web site. If there is no relevant web site, this can be omitted (or left blank)."
msgstr "该应用的网站 URL。如果没有相关的网站，可以省略（或留空）。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<web>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<web>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_SourceCode_<a name=\"SourceCode\"></a>"
msgstr "_SourceCode_ (源代码)<a name=\"SourceCode\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The URL to view or obtain the application's source code. This should be something human-friendly. Machine-readable source-code is covered in the _Repo_ field."
msgstr "用于查看或获取应用源代码的 URL。这应该是人类友好的页面。机器可读的源代码在由 _Repo_ 字段涵盖。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<source>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<source>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_IssueTracker_<a name=\"IssueTracker\"></a>"
msgstr "_IssueTracker_ (问题追踪器)<a name=\"IssueTracker\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The URL for the application's issue tracker. Optional, since not all applications have one."
msgstr "应用的问题跟踪器 URL。可选，因为不是所有的应用都有。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<tracker>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<tracker>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Translation_<a name=\"Translation\"></a>"
msgstr "_Translation_ (翻译)<a name=\"Translation\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The URL for the application's translation portal or at least a guide.  Optional, since not all applications have one."
msgstr "应用的翻译门户或至少是一个指南的 URL。可选，因为不是所有的应用都有。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "This is converted to (`translation`) in the JSON file (_index.json_)."
msgstr "在 JSON 文件中 (_index.json_)，该字段将被转换为 (`翻译`)。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Changelog_<a name=\"Changelog\"></a>"
msgstr "_Changelog_ (变更日志)<a name=\"Changelog\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The URL for the application's changelog. Optional, since not all applications have one."
msgstr "应用的更新日志 URL。可选，因为不是所有的应用都有。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<changelog>`) in the XML file (_index.xml_).\n"
msgstr "在XML 文件 (_index.xml_) 中，该字段将被转换为 (`<changelog>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Donate_<a name=\"Donate\"></a>"
msgstr "_Donate_ (捐赠)<a name=\"Donate\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The URL to donate to the project. This should be the project's donate page if it has one."
msgstr "用于捐赠项目的 URL。这应该是项目的捐赠页面，如果有的话。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "It is possible to use a direct PayPal link here, if that is all that is available. However, bear in mind that the developer may not be aware of that direct link, and if they later changed to a different PayPal account, or the PayPal link format changed, things could go wrong. It is always best to use a link that the developer explicitly makes public, rather than something that is auto-generated 'button code'."
msgstr "在这里使用直接的 PayPal 链接是可能的，如果这是仅有的。然而，请记住，开发者可能不知道这个直接链接，如果他们后来改用了一个不同的 PayPal 账户，或者 PayPal 链接的格式改变了，就可能出错。最好是使用开发者明确公开的链接，而不是使用自动生成的“按钮代码”。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<donate>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<donate>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Liberapay_<a name=\"Liberapay\"></a><a name=\"LiberapayID\"></a>"
msgstr "_Liberapay_<a name=\"Liberapay\"></a><a name=\"LiberapayID\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The project's Liberapay (https://liberapay.com) user or group name, if it has one. This should be an alphanumeric name, such that (for example) https://liberapay.com/xxxxx which redirects to your account page. This used to be _LiberapayID_, which was a numeric ID fetched from Liberapay's site by adding /public.json behind your team page."
msgstr "项目的 Liberapay (https://liberapay.com) 用户或组名，如果有的话。这应该是一个由字母数字组成的名字，使（例如）https://liberapay.com/xxxxx 可以重定向到你的账户页面。这曾经是 _LiberapayID_，通过在你的团队页面后面添加 /public.json 从 Liberapay 网站获取的一个数字 ID。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<liberapay>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_)中，该字段将被转换为 (`<liberapay>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_OpenCollective_<a name=\"OpenCollective\"></a>"
msgstr "_OpenCollective_<a name=\"OpenCollective\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The project's OpenCollective (https://opencollective.com) user or group name, if it has one. This should be an alphanumeric name, such that (for example) https://opencollective.com/xxxxx redirects to your account page."
msgstr "项目的 OpenCollective (https://opencollective.com) 用户或组名，如果有的话。这应该是一个字母数字组成的名称，使（例如）https://opencollective.com/xxxxx 指向你的账户页面。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Bitcoin_<a name=\"Bitcoin\"></a>"
msgstr "_Bitcoin_ (比特币)<a name=\"Bitcoin\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "A bitcoin address for donating to the project."
msgstr "一个用于捐赠项目的比特币地址。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<bitcoin>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<bitcoin>`) 。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Litecoin_<a name=\"Litecoin\"></a>"
msgstr "_Litecoin_ (莱特币)<a name=\"Litecoin\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "A litecoin address for donating to the project."
msgstr "一个用于捐赠给项目的莱特币地址。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<litecoin>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<litecoin>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Summary_<a name=\"Summary\"></a>"
msgstr "_Summary_ (概要)<a name=\"Summary\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "A brief summary of what the application is.  The _Summary_ is used in the app list and tile views of the F-Droid client, and as a sub-headline in some other views."
msgstr "关于该应用是什么的简介。_Summary_ 用于 F-Droid 客户端的应用列表和磁贴视图中，并作为其他一些视图的副标题。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "__80 character limit__"
msgstr "__80 个字符限制__"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "__Warning__: this overrides all _Summary_ aka \"short description\" entries [set in the app's source code](../All_About_Descriptions_Graphics_and_Screenshots)."
msgstr "__警告__：这会覆盖所有的 _Summary_ ，即\"short description\"条目 [在应用的源代码中设置](../All_About_Descriptions_Graphics_and_Screenshots)。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<summary>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件(_index.xml_) 中，该字段将被转换为 (`<summary>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Description_<a name=\"Description\"></a>"
msgstr "_Description_ (描述)<a name=\"Description\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "A full description of the application, relevant to the latest version.  This can span multiple lines (which should be kept to a maximum of 80 characters), and is terminated by a line containing a single '.'."
msgstr "对应用最新版本的完整描述。这可以跨越多行（每行应保持在 80 个字符以内），并以包含一个单 '.' 的行作为结束。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The description formatting follows the established conventions that work across many app stores:"
msgstr "描述的格式遵循许多应用商店的既定惯例："

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "Basic HTML formatting can be used."
msgstr "可以使用基本的 HTML 格式化。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "Newlines will be preserved."
msgstr "换行将被保留。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"* Links to other packages on f-droid.org will show up as clickable on\n"
"the website, other links will show up as plain text.\n"
msgstr "* f-droid.org 上的其他软件包的链接将在网站上显示为可点击链接，其他链接将显示为纯文本。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "It can be helpful to note information pertaining to updating from an earlier version; whether the app contains any prebuilts built by the upstream developers or whether Non-Free elements were removed; whether the app is in rapid development or whether the latest version lags behind the current version; whether the app supports multiple architectures or whether there is a maximum SDK specified (such info not being recorded in the index)."
msgstr "与从更早版本更新有关的注释信息是很有帮助的；应用是否包含任何由上游开发者预构建内容，或者是否移除了非自由元素；应用是否处于快速开发阶段，或者最新版本是否落后于当前版本；应用是否支持多种架构，或者是否有指定的最大 SDK（此类信息未被记录在索引中）。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "__4000 character limit__"
msgstr "__4000 个字符限制__"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "__Warning__: this overrides all _Description_ aka \"full description\" entries [set in the app's source code](../All_About_Descriptions_Graphics_and_Screenshots)."
msgstr "__警告__：这会覆盖所有的 _Description_ ，即“full description”条目 [在应用的源代码中设置](../All_About_Descriptions_Graphics_and_Screenshots)。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<desc>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<desc>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_MaintainerNotes_<a name=\"MaintainerNotes\"></a>"
msgstr "_MaintainerNotes_ (维护者注解)<a name=\"MaintainerNotes\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "This is a multi-line field using the same rules and syntax as the description. It's used to record notes for F-Droid maintainers to assist in maintaining and updating the application in the repository."
msgstr "这是一个多行字段，使用与描述相同的规则和语法。它用于记录 F-Droid 维护者的注意事项，以协助维护和更新仓库中的应用。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "This information is also published to the wiki."
msgstr "这些信息也会发布到维基上。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_RepoType_<a name=\"RepoType\"></a>"
msgstr "_RepoType_ (存储库类别)<a name=\"RepoType\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The type of repository - for automatic building from source. If this is not specified, automatic building is disabled for this application.  Possible values are:"
msgstr "存储库类型 - 用于从源代码自动构建。如果不指定这个，这个应用的自动构建将被禁用。可能的值为："

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`git`"
msgstr "`git`"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`svn`"
msgstr "`svn`"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`git-svn`"
msgstr "`git-svn`"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`hg`"
msgstr "`hg`"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`bzr`"
msgstr "`bzr`"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`srclib`"
msgstr "`srclib`"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Repo_<a name=\"Repo\"></a>"
msgstr "_Repo_ (存储库)<a name=\"Repo\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The repository location. Usually a git: or svn: URL, for example."
msgstr "存储库的位置。通常是 git: 或 svn: URL。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The `git-svn` option connects to an SVN repository, and you specify the URL in exactly the same way, but git is used as a back-end. This is preferable for performance reasons, and also because a local copy of the entire history is available in case the upstream repository disappears.  (It happens!). In order to use Tags as [_UpdateCheckMode_](#UpdateCheckMode)  for this VCS type, the URL must have the `tags=` special argument set.  Likewise, if you intend to use the `RepoManifest/branch` scheme, you would want to specify `branches=` as well. Finally, `trunk=` can also be added. All these special arguments will be passed to \"git svn\" in order, and their values must be relative paths to the SVN repo root dir.  Here's an example of a complex git-svn _Repo_ URL: `http://svn.code.sf.net/p/project/code/svn;trunk=trunk;tags=tags;branches=branches`"
msgstr "`git-svn` 选项连接到一个 SVN 仓库，你以完全相同的方式指定 URL，但 git 被用作后端。出于性能方面的考虑，这样做比较好，而且还因为在上游仓库消失的情况下，可以在本地拷贝整个历史。（这种情况时有发生！）为了将 Tags 作为该 VCS 类型的 [_UpdateCheckMode_](#UpdateCheckMode)，URL 必须设置` tags`= special argument set.。同样，如果你打算使用 `RepoManifest/branch ` 方案，你也要指定 `branch=` 。最后，还可以加上` trunk=`。所有这些特殊参数将依次传递给 \"git svn\"，其值必须是 SVN repo 根目录的相对路径。下面是一个复杂的 git-svn _Repo_ URL 的例子：`http://svn.code.sf.net/p/project/code/svn;trunk=trunk;tags=tags;branch=branches`"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "If the [_RepoType_](#RepoType) is `srclib`, then you must specify the name of the according srclib `.yml` file. For example if `srclibs/FooBar.yml` exist and you want to use this srclib, then you have to set _Repo_ to `FooBar`."
msgstr "如果 [_RepoType_](#RepoType)是`srclib`，那么你必须指定相应的 srclib .`yml` 文件的名称。例如，如果存在 `srclibs/FooBar.yml` 并且你想使用这个 srclib，那么你必须将 _Repo_ 设置为 `FooBar`。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Binaries_<a name=\"Binaries\"></a>"
msgstr "_Binaries_ (二进制文件)<a name=\"Binaries\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The location of binaries used in verification process."
msgstr "验证过程中使用的二进制文件的位置。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "If specified, F-Droid will verify the output APK file of a build against the one specified. You can use `%v` and `%c` to point to the version name and version code of the current build. To verify the F-Droid client itself you could use: `Binaries: https://f-droid.org/repo/org.fdroid.fdroid_%c.apk`"
msgstr "如果指定了，F-Droid 将验证输出的 APK 文件和指定的文件。你可以使用 `%v` 和 `%c`来指向当前构建的版本名称和版本代码。为了验证 F-Droid 客户端本身，你可以使用：`Binaries: https://f-droid.org/repo/org.fdroid.fdroid_%c.apk`"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "F-Droid will use upstream binaries if the verification succeeded."
msgstr "如果验证成功，F-Droid 将使用上游的二进制文件。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Builds_<a name=\"Builds\"></a>"
msgstr "_Builds_ (版本)<a name=\"Builds\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Any number of sub-entries can be present, each specifying a version to automatically build from source.  For example:"
msgstr "可以有任何数量的子条目，每个条目都指定了一个从源代码自动构建的版本。例如："

#. type: Fenced code block (yaml)
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"Builds:\n"
"  - versionName: '1.2'\n"
"    versionCode: 12\n"
"    commit: v1.2\n"
"\n"
"  - versionName: '1.3'\n"
"    versionCode: 13\n"
"    commit: v1.3-fdroid\n"
msgstr ""
"Builds:\n"
"  - versionName: '1.2'\n"
"    versionCode: 12\n"
"    commit: v1.2\n"
"\n"
"  - versionName: '1.3'\n"
"    versionCode: 13\n"
"    commit: v1.3-fdroid\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`versionName: xxx`<a name=\"build_versionName\"></a>\n"
msgstr "`versionName: xxx`<a name=\"build_versionName\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`versionCode: yyy`<a name=\"build_versionCode\"></a>\n"
msgstr "`versionCode: yyy`<a name=\"build_versionCode\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ":   Specifies to build version xxx, which has a version code of yyy.\n"
msgstr "：指定构建版本 xxx，该版本的代码为 yyy。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`commit: xxx`<a name=\"build_commit\"></a>\n"
msgstr "`commit: xxx`<a name=\"build_commit\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   The _commit_ parameter specifies the tag, commit or revision number\n"
"    from which to build it in the source repository.\n"
msgstr "：_commit_ 参数指定了在源代码库中构建它的标签、提交或修订号。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    In addition to the three, always required, parameters described above,\n"
"    further parameters can be added (in `name: value` format) to apply further\n"
"    configuration to the build. These are (roughly in order of application):\n"
msgstr ""
"    除了上述三个始终需要的参数外，\n"
"    还可以添加更多的参数（以 `name: value` 的格式）来\n"
"    对构建进行进一步配置。这些参数是（大致按应用顺序排列）：\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`disable: <message>`<a name=\"build_disable\"></a>\n"
msgstr "`disable: <message>`<a name=\"build_disable\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Disables this build, giving a reason why. (For backwards\n"
"    compatibility, this can also be achieved by starting the commit ID\n"
"    with '!')\n"
msgstr ""
":      禁用此构建，并给出原因。\n"
"        (如果出于向后兼容目的，\n"
"        也可以通过以 '!' 开头的 commit ID 实现）\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    The purpose of this feature is to allow non-buildable releases (e.g.\n"
"    the source is not published) to be flagged, so the scripts don't\n"
"    generate repeated messages about them. (And also to record the\n"
"    information for review later). If an APK has already been built,\n"
"    disabling causes it to be deleted once `fdroid update` is run; this\n"
"    is the procedure if ever a version has to be replaced.\n"
msgstr ""
"    这个功能的目的是让不可编译的版本（比如说源代码没有发布）被标记出来，\n"
"        这样脚本就不会产生关于它们的重复信息。\n"
"        (同时也是为了记录这些信息以便日后查阅）。\n"
"        如果一个 APK 已经被构建了，\n"
"        禁用会导致它在 `fdroid update` 运行后被删除；\n"
"        这是的确需要替换一个版本时所需的步骤。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`subdir: <path>`<a name=\"build_subdir\"></a>\n"
msgstr "`subdir: <path>`<a name=\"build_subdir\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Specifies to build from a subdirectory of the checked out source\n"
"    code. This is the directory where the build scripts are run.\n"
msgstr ""
":   指定从检出的源代码的一个子目录中构建。\n"
"    这是构建脚本运行的目录。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`submodules: true`<a name=\"build_submodules\"></a>\n"
msgstr "`submodules: true`<a name=\"build_submodules\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Use if the project (git only) has submodules - causes\n"
"    `git submodule update --init --recursive` to be executed after the\n"
"    source is cloned. Submodules are reset and cleaned like the main app\n"
"    repository itself before each build.\n"
msgstr "：如果项目（仅 git）有子模块，则使用 - 使得 `git submodule update --init --recursive` 将在源代码被克隆后执行。子模块在构建前和主应用存储库本身一样被重置和清理。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`sudo: xxxx`<a name=\"build_sudo\"></a>\n"
msgstr "`sudo: xxxx`<a name=\"build_sudo\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Specifies a script to be run using `sudo bash -x -c \"xxxx\"` in the\n"
"    buildserver VM guest.  This script is run with full root privileges,\n"
"    but the state will be reset after each build.  The vast majority of\n"
"    apps build using the standard Debian/stable base environment. This\n"
"    is useful for setting up the buildserver for complex builds that\n"
"    need very specific things that are not appropriate to install for\n"
"    all builds, or for things that would conflict with other builds.\n"
msgstr "：指定一个使用 `sudo bash -x -c \"xxxx\"` 在 buildserver VM guest 中运行的脚本。这个脚本是以完全的 root 权限运行的，但在每次构建后，其状态将被重置。绝大多数的应用都是使用标准的 Debian/stable 基本环境来构建的。这对于设置需要非常特殊东西的复杂的构建服务器是很有用的。 而这些东西不适合在所有的构建中安装或者与其他构建冲突。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`timeout: <seconds>`<a name=\"build_timeout\"></a>\n"
msgstr "超时 `timeout: <seconds>`<a name=\"build_timeout\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Time limit for this build (in seconds).  After time is up,\n"
"    buildserver VM is forcefully terminated.  The default is 7200\n"
"    (2 hours); 0 means no limit.\n"
msgstr "：该构建的时间限制（以秒为单位）。到时间之后，buildserver VM 会被强制终止。默认是 7200（2小时）；0 表示没有限制。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Limitation is applied only in server mode, i.e. when `fdroid build`\n"
"    is invoked with the `--server` option.\n"
msgstr "    限制只适用于服务器模式，即当 `fdroid build` 被使用 `--server` 选项调用时。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`init: xxxx`<a name=\"build_init\"></a>\n"
msgstr "`init: xxxx`<a name=\"build_init\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Like [`prebuild`](#build_prebuild), but runs on the source code BEFORE any\n"
"    other processing takes place.\n"
msgstr ""
":   与[`prebuild`](#build_prebuild)类似，但在任何其他处理发生之前\n"
"    在源代码上运行。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    You can use `$$SDK$$` and `$$NDK$$` to substitute the paths to the\n"
"    Android SDK and NDK directories respectively. The following\n"
"    per-build variables are available likewise: `$$VERSION$$`,\n"
"    `$$VERCODE$$` and `$$COMMIT$$`.\n"
msgstr ""
"    你可以使用 `SDK` 和 `$$NDK$$` \n"
"    分别替换Android SDK 和 NDK 目录路径。以下\n"
"    不同构建的变量同样可用：`$$VERSION$$`、\n"
"    `$$VERCODE$$` 和 `$$COMMIT$$`。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "    This runs in [`subdir:`](#build_subdir) if set.\n"
msgstr "    设置后，这运行于 [`subdir:`](#build_subdir)。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`oldsdkloc: true`<a name=\"build_oldsdkloc\"></a>\n"
msgstr "`oldsdkloc: true`<a name=\"build_oldsdkloc\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   The SDK location in the repo is in an old format, or the _build.xml_\n"
"    is expecting such. The 'new' format is `sdk.dir` while the VERY OLD\n"
"    format is sdk-location. Typically, if you get a message along the\n"
"    lines of: \"com.android.ant.SetupTask cannot be found\" when trying to\n"
"    build, then try enabling this option.\n"
msgstr ""
":  存储库中的 SDK 位置是旧格式，或者 _build.xml_\n"
"    期望如此。 新格式是 `sdk.dir` ，而非常旧的\n"
"    格式是 sdk-location。通常而言，如果当你试图\n"
"    构建时，得到 \"com.android.ant.SetupTask cannot be found\"\n"
"    消息，请尝试启用此选项。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`target: <target>`<a name=\"build_target\"></a>\n"
msgstr "`target: <target>`<a name=\"build_target\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Specifies a particular SDK target for compilation, overriding the\n"
"    value defined in the code by upstream. This has different effects\n"
"    depending on what build system used — this flag currently affects\n"
"    Ant, Maven and Gradle projects only. Note that this does not change\n"
"    the target SDK in the AndroidManifest.xml, which determines the\n"
"    level of features that can be included in the build.\n"
msgstr "：指定一个特定的 SDK 目标进行编译，覆盖代码中由上游定义的值。取决于所使用的构建系统具有不同的作用 - 这个标志目前只影响 Ant，Maven 和 Gradle 项目。请注意，这并不改变 AndroidManifest.xml 中的目标 SDK，它决定了可以包含在构建中的功能的级别。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    In the case of an Ant project, it modifies _project.properties_ of the\n"
"    app and possibly sub-projects. This is likely to cause the whole\n"
"    _build.xml_ to be rewritten, which is fine if it's a 'standard'\n"
"    Android file or doesn't already exist, but not a good idea if it's\n"
"    heavily customised.\n"
msgstr ""
"    对于 Ant 项目，\n"
"     它修改应用和可能的子项目的 _project.properties_。\n"
"     这可能会导致整个 _build.xml_ 被重写，\n"
"     如果它是一个“标准”的 Android 文件或不存在就没有问题，\n"
"     但如果它是高度自定义的文件可能会导致问题。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`androidupdate: auto|<path1>[,<path2>,...]`<a name=\"build_androidupdate\"></a>\n"
msgstr "`androidupdate: auto|<path1>[,<path2>,...]`<a name=\"build_androidupdate\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   By default, 'android update' is used in Ant builds to generate or\n"
"    update the project and all its referenced projects. Specifying\n"
"    `androidupdate: no` bypasses that. Note that this is useless in builds that\n"
"    don't use Ant.\n"
msgstr ""
":   默认情况下， 'android update' 在 Ant 构建中用来生成或\n"
"    更新项目及其所有引用的项目。 指定\n"
"    `androidupdate: no` 可以绕过这个。 请注意，在不使用\n"
"    Ant 的构建中，这不起作用。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Default value is `auto`, which recursively uses the paths in\n"
"    _project.properties_ to find all the subprojects to update.\n"
msgstr ""
"    默认值是 `auto`，\n"
"    它以递归的方式地使用 _project.properties_ 中的路径找到所有要更新的子项目。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Otherwise, the value can be a comma-separated list of directories in\n"
"    which to run 'android update' relative to the application directory.\n"
msgstr ""
"    除此之外，这个值可以是目录组成的列表，目录名之间用英文逗号隔开。\n"
"    在这些目录中相对于应用目录运行 'android update'。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`encoding: xxxx`<a name=\"build_encoding\"></a>\n"
msgstr "`encoding: xxxx`<a name=\"build_encoding\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Adds a `java.encoding` property to _local.properties_ with the\n"
"    given value. Generally the value will be 'utf-8'. This is picked up\n"
"    by the SDK's ant rules, and forces the Java compiler to interpret\n"
"    source files with this encoding. If you receive warnings during the\n"
"    compile about character encodings, you probably need this.\n"
msgstr ""
":   用给定的值添加一个 `java.encoding` 属性到 _local.properties_\n"
"   。这个值的编码通常会是 'utf-8'。这是由\n"
"    SDK 的 ant 规则挑选的，并强迫 Java 编译器用这个编码\n"
"    解释源文本。如果你在编译期间收到\n"
"    有关字符编码的警告，你可能需要这个。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`forceversion: true`<a name=\"build_forceversion\"></a>\n"
msgstr "`forceversion: true`<a name=\"build_forceversion\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   If specified, the package version in _AndroidManifest.xml_ is replaced\n"
"    with the version name for the build as specified in the metadata.\n"
msgstr "：如果指定，_AndroidManifest.xml_ 中的软件包版本将被替换为元数据中指定的构建版本名称。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    This is useful for cases when upstream repo failed to update it for\n"
"    specific tag; to build an arbitrary revision; to make it apparent\n"
"    that the version differs significantly from upstream; or to make it\n"
"    apparent which architecture or platform the APK is designed to\n"
"    run on.\n"
msgstr "    这在一些情况下有用：上游存储库未更新其特定 tag 中的版本；建立一个任意的修订版；构建一个任意的 revision；明显地显示出此版本与上游版本有很大的不同；或者明确表示 APK 被设计用于哪个架构或平台上运行。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`forcevercode: true`<a name=\"build_forcevercode\"></a>\n"
msgstr "`forcevercode: true`<a name=\"build_forcevercode\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   If specified, the package version code in the _AndroidManifest.xml_ is\n"
"    replaced with the version code for the build. See also forceversion.\n"
msgstr "：如果指定，_AndroidManifest.xml_ 中的软件包版本代码将被替换为构建的版本代码。另参见 forceversion。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`binary: URL`<a name=\"build_binary\"></a>\n"
msgstr "`二进制文件: URL`<a name=\"build_binary\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ":   The location of a binary used in verification process for this build.\n"
msgstr ":   此构建验证过程中所使用的二进制文件的位置。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    If specified, F-Droid will verify the output APK file of a build against\n"
"    the one specified. You can use `%v` and `%c` to point to the version name\n"
"    and version code of the current build. To verify the F-Droid client\n"
"    itself you could use:\n"
"    `binary: https://f-droid.org/repo/org.fdroid.fdroid_%c.apk`\n"
msgstr ""
"    如果指定了，F-Droid 将验证输出的 APK 文件和指定的文件。\n"
"    你可以使用  `%v` 和 `%c`来指向当前构建的版本名称和版本代码。\n"
"    为了验证 F-Droid 客户端本身，\n"
"    你可以使用：\n"
"    `binaries: https://f-droid.org/repo/org.fdroid.fdroid_%c.apk`\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "    F-Droid will use the upstream binary if the verification succeeded.\n"
msgstr "    如果验证成功，F-Droid 将使用上游的二进制文件。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`rm: <path1>[,<path2>,...]`<a name=\"build_rm\"></a>\n"
msgstr "`rm: <path1>[,<path2>,...]`<a name=\"build_rm\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Specifies the relative paths of files or directories to delete\n"
"    before the build is started. The paths are relative to the base of the\n"
"    build directory - i.e. the root of the directory structure checked\n"
"    out from the source repository - not necessarily the directory that\n"
"    contains _AndroidManifest.xml_.\n"
msgstr ""
":   指定构建开始前\n"
"    要删除的文件或文件夹的相对路径。\n"
"    这些路径相对于构建目录的基路径 - \n"
"    即从源代码库中检出的目录结构的根目录 - \n"
"    不一定是包含 _AndroidManifest.xml_ 的目录。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Multiple files/directories can be specified by separating them with\n"
"    ','. Directories will be recursively deleted.\n"
msgstr ""
"    可以指定多个文件/目录，方法是用\n"
"    ',' 分隔它们。目录将以递归的方式被删除。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`extlibs: <lib1>[,<lib2>,...]`<a name=\"build_extlibs\"></a>\n"
msgstr "`extlibs: <lib1>[,<lib2>,...]`<a name=\"build_extlibs\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Comma-separated list of external libraries (jar files) from the\n"
"    `build/extlib` library, which will be placed in the `libs` directory\n"
"    of the project.\n"
msgstr "：逗号分隔的 `build/extlib` 中外部库（jar 文件）的列表，将被放置在项目的 `libs` 文件夹下。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`srclibs: [n:]a@r,[n:]b@r1,...`<a name=\"build_srclibs\"></a>\n"
msgstr "`srclibs: [n:]a@r,[n:]b@r1,...`<a name=\"build_srclibs\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Comma-separated list of source libraries or Android projects. Each\n"
"    item is of the form name@rev where name is the predefined source\n"
"    library name and rev is the revision or tag to use in the respective\n"
"    source control.\n"
msgstr "：逗号分隔的源代码库或 Android 项目列表。每个条目为 name@rev 的形式，其中 name 是预定义的源代码库名称，rev 是在各自版本控制中使用的 revision 或标签。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    For Ant projects, you can optionally append a number with a colon at\n"
"    the beginning of a srclib item to automatically place it in\n"
"    _project.properties_ as a library under the specified number. For\n"
"    example, if you specify `1:somelib@1.0`, F-Droid will automatically\n"
"    do the equivalent of the legacy practice\n"
"    `prebuild: echo \"android.library.reference.1=$$somelib$$\" >> project.properties`.\n"
msgstr ""
"    对于 Ant 项目，\n"
"    你可以选择在 srclib 项目的开头加上一个带冒号的数字，\n"
"    以自动将其放在 _project.properties_ 中\n"
"    作为指定编号下的一个库。\n"
"    例如，如果你指定 `1:somelib@1.0`，\n"
"    F-Droid 会自动执行传统做法 `prebuild:echo \"android.library.reference.1=$$somelib$$\">> project.properties`的等效操作。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Each srclib has a metadata file under `srclibs/` in the repository\n"
"    directory, and the source code is stored in `build/srclib/`.\n"
"    [_RepoType_](#RepoType) and [_Repo_](#Repo) are specified in the same way\n"
"    as for apps; _Subdir:_ can be a comma-separated list, for\n"
"    when directories are renamed by upstream; _Update Project:_ updates the\n"
"    projects in the working directory and one level down; _Prepare:_ can\n"
"    be used for any kind of preparation: in particular if you need to\n"
"    update the project with a particular target. You can then also use\n"
"    `$$name$$` in the [`init`](#build_init)/[`prebuild`](#build_prebuild)/[`build`](#build_build)\n"
"    commands to substitute the absolute path to the library directory.\n"
msgstr ""
"    每个 srclib 有一个元数据文件，\n"
"    位于存储库目录中的 `srclibs/` 下，\n"
"    源代码存储在 `build/srclib/` 中。_\n"
"    [_RepoType_](#RepoType)和\n"
"[_Repo_](#Repo)指定方式和应用相同；\n"
"    _Subdir_：目录被上游重命名时，可以是英文逗号分割的列表；\n"
"    _Update Project:_更新工作目录以及下一级目录中的项目；\n"
"    _Prepare：_可用于任何类型的准备，\n"
"    如果你需要指定目录进行更新，\n"
"    接着你也可以用 [`init`](#build_init)/[`prebuild`](#build_prebuild)/[`build`](#build_build)中的`$$name$$`替换库目录的绝对路径。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Currently srclibs are used when upstream uses jar files or\n"
"    pulls dependencies from non-trusted repositories. Because srclibs\n"
"    can't be updated automatically, git submodule is a better choice.\n"
msgstr ""
"    目前 srclib 只在上游使用 jar 文件或从不受信任的存储库中提取依赖关系时使用。\n"
"    因为 srclibs 不能自动更新，\n"
"    git 子模块是一个更好的选择。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`patch: x`<a name=\"build_patch\"></a>\n"
msgstr "`patch: x`<a name=\"build_patch\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Apply patch(es). 'x' names one (or more - comma-separated) files\n"
"    within a directory below the metadata, with the same name as the\n"
"    metadata file but without the extension. Each of these patches is\n"
"    applied to the code in turn.\n"
msgstr ""
":   应用一个或多个补丁。 'x' 指定一个 (或多个 - 用英文逗号分隔) metadata\n"
"    下方目录中的文件，文件名与 metadata 文件相同，区别是没有\n"
"    扩展名。这些补丁中的每一个\n"
"    都被依次应用到代码中。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`prebuild: xxxx`<a name=\"build_prebuild\"></a>\n"
msgstr "`prebuild: xxxx`<a name=\"build_prebuild\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Specifies a shell command (or commands - chain with `&&`) to run\n"
"    before the build takes place. Backslash can be used as an escape\n"
"    character to insert literal commas, or as the last character on a\n"
"    line to join that line with the next. It has no special meaning in\n"
"    other contexts; in particular, literal backslashes should not\n"
"    be escaped.\n"
msgstr ""
":   指定一个 shell 命令（或几个命令 - 用 `&&` 连接）\n"
"    在构建前运行。\n"
"    反斜线可以作为转义字符来插入逗号，\n"
"    或者在行尾连接该行和下一行。\n"
"    在其他情况下，它没有特殊含义；\n"
"    特别是，字面的反斜线不应该被转义。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "    The command runs using bash.\n"
msgstr "    该命令使用 bash 运行。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Note that nothing should be built during this prebuild phase -\n"
"    scanning of the code and building of the source tarball, for\n"
"    example, take place after this. For custom actions that actually\n"
"    build things or produce binaries, use 'build' instead.\n"
msgstr ""
"    请注意，在此预构建阶段不应构建任何内容 -\n"
"    比如，扫描代码和构建 source tarball 在\n"
"    这之后发生。对于实际执行构建或生成二进制文件的自定义操作，\n"
"    请使用 'build'。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    You can use `$$name$$` to substitute the path to a referenced\n"
"    srclib - see the `srclib` directory for details of this.\n"
msgstr ""
"    可以使用 `$$name$$` 将路径替换为引用的 srclib - \n"
"    有关详细信息，请参阅 `srclib` 目录。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    You can use `$$SDK$$` and `$$NDK$$` to substitute the paths to\n"
"    the Android SDK and NDK directories respectively e.g. for when you\n"
"    need to run `android update project` explicitly. The following\n"
"    per-build variables are available likewise: `$$VERSION$$`,\n"
"    `$$VERCODE$$` and `$$COMMIT$$`.\n"
msgstr ""
"    你可以使用 `\\$\\$SDK\\$\\$` 和 `$$NDK$$`分别替换\n"
"    Android SDK 和 NDK 目录路径。比如，当你\n"
"    需要显式运行 `android update project` 时。此外，下列\n"
"    不同构建的变量也可用： `$$VERSION$$`、\n"
"    `$$VERCODE$$` 和 `$$COMMIT$$`\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`scanignore: <path1>[,<path2>,...]`<a name=\"build_scanignore\"></a>\n"
msgstr "`scanignore: <path1>[,<path2>,...]`<a name=\"build_scanignore\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Enables one or more files/paths to be excluded from the scan\n"
"    process. This should only be used where there is a very good reason,\n"
"    and probably accompanied by a comment explaining why it\n"
"    is necessary.\n"
msgstr "：允许从扫描过程中排除一个或多个文件/路径。这应该只在有很好的理由的情况下使用，并且或许可以附加一条评论，解释为什么这是必要的。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    When scanning the source tree for problems, matching files whose\n"
"    relative paths start with any of the paths given here are ignored.\n"
msgstr "    扫描源代码树中的问题时，相对路径以此处给出的任何路径开始的相应文件将被忽略。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`scandelete: <path1>[,<path2>,...]`<a name=\"build_scandelete\"></a>\n"
msgstr "`scandelete: <path1>[,<path2>,...]`<a name=\"build_scandelete\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   When running the scan process, any files that trigger errors - like\n"
"    binaries - will be removed. It acts just like\n"
"    [`scanignore`](#build_scanignore), but instead of ignoring the files,\n"
"    it removes them.\n"
msgstr ""
":   运行扫描过程时，\n"
"    任何触发错误的文件 - 如二进制文件 - 将被删除。\n"
"    它与 [`scanignore`](#build_scanignore)作用一样，\n"
"    但是它不会忽略这些文件，而是删除它们。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Useful when a source code repository includes binaries or other\n"
"    unwanted files which are not needed for the build. Instead of removing\n"
"    them manually via [`rm`](#build_rm), using `scandelete` is easier.\n"
msgstr ""
"    用于当源代码存储库包含二进制文件或其他构建不需要的文件。\n"
"    相比于通过 [`rm`](#build_rm)手动删除它们，\n"
"    使用`scandelete` 更容易。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`build: xxxx`<a name=\"build_build\"></a>\n"
msgstr "`build: xxxx`<a name=\"build_build\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   As for [`prebuild`](#build_prebuild), but runs during the actual build\n"
"    phase (but before the main Ant/Maven build). Use this only for actions that\n"
"    do actual building. Any preparation of the source code should be done\n"
"    using [`init`](#build_init) or [`prebuild`](#build_prebuild).\n"
msgstr ""
":   类似[`prebuild`](#build_prebuild)，但在实际构建阶段期间运行 (不过在主 Ant/Maven 构建前)。 \n"
"    请只对进行实际构建的操作使用它。\n"
"    任何的源码准备都应使用\n"
"    [`init`](#build_init)或 [`prebuild`](#build_prebuild)来完成。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Any building that takes place before `build` will be ignored, as\n"
"    either Ant, mvn or gradle will be executed to clean the build\n"
"    environment right before `build` (or the final build) is run.\n"
msgstr ""
"    在 `build`之前发生的任何构建都将被忽略，\n"
"    因为在运行 `build`（或最终构建）之前 \n"
"    Ant、mvn 或 gradle 将被执行以清理构建环境。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    You can use `$$SDK$$` and `$$NDK$$` to substitute the paths to the\n"
"    Android SDK and NDK directories respectively. The following per-build\n"
"    variables are available likewise: `$$VERSION$$`, `$$VERCODE$$`\n"
"    and `$$COMMIT$$`.\n"
msgstr ""
"    你可以使用 `SDK` 和 `$$NDK$$` 分别替换\n"
"    Android SDK 和 NDK 目录路径。以下\n"
"    不同构建的变量同样可用：`$$VERSION$$`、\n"
"    `$$VERCODE$$` 和 `$$COMMIT$$`。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`buildjni: [yes|no|<dir list>]`<a name=\"build_buildjni\"></a>\n"
msgstr "`buildjni: [yes|no|<dir list>]`<a name=\"build_buildjni\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Enables building of native code via the `ndk-build` script before\n"
"    doing the main Ant build. The value may be a list of directories\n"
"    relative to the main application directory in which to run\n"
"    ndk-build, or 'yes' which corresponds to '.' . Using explicit list\n"
"    may be useful to build multi-component projects.\n"
msgstr ""
":   执行主 Ant 构建前，通过 `ndk-build` 脚本启用本地代码的构建。\n"
"    值可以是由相对于主应用的多个目录组成的列表，\n"
"    在这些目录中运行 ndk-build 命令，或者是\n"
"    对应于 '.' 的 'yes'。\n"
"    使用明确的列表对构建多组件项目很有用。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    The build and scan processes will complain (refuse to build) if this\n"
"    parameter is not defined, but there is a `jni` directory present. If\n"
"    the native code is being built by other means like a Gradle task,\n"
"    you can specify `no` here to avoid that. However, if the native code\n"
"    is actually not required or used, remove the directory instead\n"
"    (using [`rm: jni`](#build_rm) for example). Using `buildjni: no` when the\n"
"    jni code isn't used nor built will result in an error saying that native\n"
"    libraries were expected in the resulting package.\n"
msgstr ""
"    如果此参数未定义，却存在一个 `jni` 目录的话，\n"
"    构建和扫描过程会抱怨 (拒绝进行构建) 。如果\n"
"    本机代码正由 Gradle 任务等其他方式构建，\n"
"    你可以在此处指定 `no` 来避免这种情况。不过，如果实际上本机代码\n"
"    不是必需的或不被使用，那么请删除该目录\n"
"    (比如使用 [`rm: jni`](#build_rm)）。当 jni 代码既未被使用也未被\n"
"    构建时使用 `buildjni:no` 会导致一条错误信息，表示\n"
"    生成的包中预期有本地库。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`ndk: <version>`<a name=\"build_ndk\"></a>\n"
msgstr "`ndk: <version>`<a name=\"build_ndk\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Version of the NDK to use in this build.  The value is the NDK version as a\n"
"    string in either of the two official version schemes, e.g. _r21e_ or\n"
"    _21.4.7075529_.  NDK r10e or later is supported.  This can also be a list of\n"
"    version strings, and all listed versions will be installed.  The\n"
"    `ANDROID_SDK_ROOT` environment variable will be set to the first version in\n"
"    the list.\n"
msgstr "：在本次构建中使用的 NDK 版本。该值是 NDK 的版本，是一个字符串，支持两种官方版本方案，例如 _r21e_ 或 _21.4.7075529_ 。支持 NDK r10e 或更高版本。这也可以是一个版本字符串列表，所有列出的版本都会被安装。`ANDROID_SDK_ROOT` 环境变量将被设置为列表中的第一个版本。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`gradle: <flavour1>[,<flavour2>,...]`<a name=\"build_gradle\"></a>\n"
msgstr "`gradle: <flavour1>[,<flavour2>,...]`<a name=\"build_gradle\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Build with Gradle instead of Ant, specifying what flavours to use.\n"
"    Flavours are case sensitive since the path to the output APK is\n"
"    as well.\n"
msgstr "：用 Gradle 而不是 Ant 进行构建，指定要使用的 flavour。Flavour 是区分大小写的，因为输出 APK 的路径是也是如此。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    If only one flavour is given and it is 'yes', no flavour will be\n"
"    used. Note that for projects with flavours, you must specify at\n"
"    least one valid flavour since 'yes' will build all of\n"
"    them separately.\n"
msgstr ""
"    如果只给定一种 flavour 而且是 'yes' 的话，则没有 flavour 会被\n"
"    使用。请注意，对于有 flavours 的项目，你必须指定至少\n"
"    一种有效的 flavour， 因为 'yes' 会分别\n"
"    构建所有的 flavor。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`maven: yes[@<dir>]`<a name=\"build_maven\"></a>\n"
msgstr "`maven: yes[@<dir>]`<a name=\"build_maven\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Build with Maven instead of Ant. An extra `@<dir>` tells F-Droid\n"
"    to run Maven inside that relative subdirectory. Sometimes it is\n"
"    needed to use `@..` so that builds happen correctly.\n"
msgstr ""
":   用 Maven 而不是 Ant 构建。\n"
"    一个额外的 `@<dir>` 告诉 F-Droid 在该相对子文件夹下运行 Maven。\n"
"    有时需要使用 `@..`才能正确地进行构建。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`preassemble: <task1>[,<task2>,...]`<a name=\"build_preassemble\"></a>\n"
msgstr "`preassemble: <task1>[,<task2>,...]`<a name=\"build_preassemble\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   List of Gradle tasks to be run before the assemble task in a Gradle\n"
"    project build.\n"
msgstr "：在 Gradle 项目构建中，在 assemble 任务之前要运行的 Gradle 任务列表。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`gradleprops: <prop1>[,<prop2>,...]`<a name=\"build_gradleprops\"></a>\n"
msgstr "`gradleprops: <prop1>[,<prop2>,...]`<a name=\"build_gradleprops\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   List of Gradle properties to pass via the command line to Gradle. A\n"
"    property can be of the form `foo` or of the form `key=value`.\n"
msgstr "：要通过命令行传递给 Gradle 的 Gradle 属性列表。属性可以是 `foo` 的形式或 `key=value` 的形式。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    For example: `gradleprops=enableFoo,someSetting=bar` will result in\n"
"    `gradle -PenableFoo -PsomeSetting=bar`.\n"
msgstr "    比如说：`gradleprops=enableFoo,someSetting=bar` 将产生 `gradle -PenableFoo -PsomeSetting=bar`。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`antcommands: <target1>[,<target2>,...]`<a name=\"build_antcommands\"></a>\n"
msgstr "`antcommands: <target1>[,<target2>,...]`<a name=\"build_antcommands\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Specify an alternate set of Ant commands (target) instead of the\n"
"    default 'release'. It can't be given any flags, such as the path to\n"
"    a _build.xml_.\n"
msgstr ""
":   指定另一套 Ant 命令 (target) 而非\n"
"    默认的 'release'。它不能被赋予任何标记， 比如\n"
"    _build.xml_ 的路径。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`output: <glob/to/output.apk>`<a name=\"build_output\"></a>\n"
msgstr "`output: <glob/to/output.apk>`<a name=\"build_output\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Specify a glob path where the resulting unsigned release APK from\n"
"    the build should be. This can be used in combination with build\n"
"    methods like [`gradle: yes`](#build_gradle) or [`maven: yes`](#build_maven),\n"
"    but if no build method is specified, the build is manual. You should run\n"
"    your build commands, such as `make`, in [`build`](#build_build).\n"
msgstr ""
":   指定构建的未签名版本 APK 应在的 glob 路径。\n"
"    这可以和像 [`gradle: yes`](#build_gradle)或 [`maven: yes`](#build_maven)这样的构建方法结合使用，\n"
"    但是如果没有指定构建方法，\n"
"    构建是手动的。\n"
"    你应该在 [`build`](#build_build)中运行构建命令，例如`make`。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`postbuild: xxxx`<a name=\"build_postbuild\"></a>\n"
msgstr "`postbuild: xxxx`<a name=\"build_postbuild\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   As for [`prebuild`](#build_prebuild), but runs after the actual build phase\n"
"    (the main Ant/Maven build).  Use this only for actions that perform some\n"
"    post-processing on the build outputs.\n"
msgstr ""
":   类似[`prebuild`](#build_prebuild)，\n"
"    但在实际构建阶段之后运行 （主 Ant/Maven 构建）。\n"
"    仅将此用于对构建输出执行某些后处理的操作。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    You can use `$$SDK$$` and `$$NDK$$` to substitute the paths to\n"
"    the Android SDK and NDK directories respectively. The following\n"
"    per-build variables are available likewise: `$$VERSION$$`,\n"
"    `$$VERCODE$$` and `$$COMMIT$$`.\n"
msgstr ""
"    你可以使用 `SDK` 和 `$$NDK$$` 分别替换\n"
"    Android SDK 和 NDK 目录路径。以下\n"
"    不同构建的变量同样可用：`$$VERSION$$`、\n"
"    `$$VERCODE$$` 和 `$$COMMIT$$`。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "    The path to the output APK is available with `$$OUT$$`.\n"
msgstr "    使用 `$$OUT$$` 设置输出 APK 文件的路径。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`novcheck: true`<a name=\"build_novcheck\"></a>\n"
msgstr "`novcheck: true`<a name=\"build_novcheck\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   Don't check that the version name and code in the resulting APK are\n"
"    correct by looking at the build output - assume the metadata\n"
"    is correct. This takes away a useful level of sanity checking, and\n"
"    should only be used if the values can't be extracted.\n"
msgstr ""
":   不要通过查看构建输出来检查生成的 APK 的版本名和代码是否正确\n"
"    - 假设元数据是正确的\n"
"    。这样的做法剥夺了有用级别的 sanity 检查，\n"
"    应该只有在无法提取数值的情况下才这么做。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "`antifeatures: <antifeature1>[,<antifeature2>,...]`<a name=\"build_antifeatures\"></a>\n"
msgstr "`antifeatures: <antifeature1>[,<antifeature2>,...]`<a name=\"build_antifeatures\"></a>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
":   List of Anti-Features for this specific build. They are described\n"
"    in [_AntiFeatures_](#AntiFeatures).\n"
msgstr "：这个特定构建的负面特征列表。它们在 [_AntiFeatures_](#AntiFeatures) 中有描述。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_AllowedAPKSigningKeys_<a name=\"AllowedAPKSigningKeys\"></a>"
msgstr "_AllowedAPKSigningKeys_<a name=\"AllowedAPKSigningKeys\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "When making automated binary repositories with `fdroid update`, it is generally easy to find out the expected signing key for the APKs that are gathered.  `AllowedAPKSigningKeys` lets the repo operator set the expected signing keys, then `fdroid update` will check that the APKs are signed by one of those keys.  If not, the mismatched APKs will not be included in the repo.  If `fdroid update --delete-unknown` is specified, the mismatched APKs will be deleted.  Then an automated process can be used to download newer APKs to the repo, and they will only be included if they have a known good signature.  The value is a lower case hex value of the SHA-256 fingerprint of the signing certificate.  This can be fetched using:"
msgstr "当用 `fdroid update` 生成自动二进制存储库时，通常很容易找出所收集的 APK 的预期签名密钥。`AllowedAPKSigningKeys` 让仓库管理员设置预期的签名密钥，然后 `fdroid update` 将检查 APK 是否由这些密钥之一签署。如果不是，不匹配的 APK 将不被包含在存储库中。如果 `fdroid update --delete-unknown` 被指定，不匹配的 APK 将被删除。然后，可以使用一个自动程序将较新的 APK 下载到存储库中，只有当它们有一个已知的良好签名时才会被包含在内。该值是签名证书的 SHA-256 指纹的小写十六进制值。这可以通过以下方式获取："

#. type: Fenced code block
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "apksigner verify --print-certs example.apk | grep SHA-256\n"
msgstr "apksigner verify --print-certs example.apk | grep SHA-256\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Usually, APKs are signed using only one signer.  APKs that require verification by [multiple signers](https://developer.android.com/tools/apksigner#usage-sign) are currently not supported by _AllowedAPKSigningKeys_ (this is quite rare)."
msgstr "APK 文件通常只使用一个签署者签名。    需要 [多名签署者](https://developer.android.com/tools/apksigner#usage-sign)验证的 APK 当前不被 _AllowedAPKSigningKeys_所支持（这相当罕见）。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_AntiFeatures_<a name=\"AntiFeatures\"></a>"
msgstr "_AntiFeatures_<a name=\"AntiFeatures\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "This is optional - if present, it contains a comma-separated list of any of the following values, describing [an anti-feature](../Anti-Features) the application has.  It is a good idea to mention the reasons for the anti-feature(s) in the description:"
msgstr "这是可选的 - 如果存在，它包含一个以英文逗号分隔的列表，列表由下列值中的任意值组成，描述应用具有的 [负面特征](../Anti-Features)。最好在描述中说明具有（一个或多个）负面特征的原因："

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`Ads` - the application contains advertising."
msgstr "`Ads` - 该应用包含广告。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`KnownVuln` - the application has known security vulnerabilities."
msgstr "`KnownVuln` - 该应用有已知的安全漏洞。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`NonFreeAdd` - the application promotes Non-Free add-ons, such that the app is effectively an advert for other Non-Free Software."
msgstr "`NonFreeAdd`- 该应用推广非自由附加组件，因此该应用实际上是其他非自由软件的广告。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`NonFreeAssets` - the application contains and makes use of Non-Free assets. The most common case is apps using artwork - images, sounds, music, etc. - under a license that restricts commercial usage or making derivative works (for example, any Creative Commons license with a \"Non-Commercial\" (NC) or \"No Derivatives\" (ND) restriction)."
msgstr "`NonFreeAssets` - 应用包含并使用非自由资产。最常见情况是应用中使用了在限制商用或进行衍生创作的许可证下授权的艺术作品像是图片、声音、音乐等（比如，任何带 \"Non-Commercial\" (NC) 或 \"No Derivatives\" (ND) 限制的 Creative Commons 许可证）。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`NonFreeDep` - the application depends on a Non-Free application (e.g. Spotify, Whatsapp) - i.e. it requires it to be installed on the device, but does not include it."
msgstr "`NonFreeDep` - 应用依赖于非自由应用（例如 Spotify\\Whatsapp）- 也就是说，这个应用要生效的前提是设备上已经安装了这些非自由应用，但该应用本身并不包含这些应用。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`NonFreeNet` - the application promotes or depends entirely on a proprietary network service."
msgstr "`NonFreeNet` - 此应用推广或完全依赖专有的网络服务。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`NoSourceSince` - Upstream source for this app is no longer available. Either the app went commercial, the repo was dropped, or it has moved to a location currently unknown to us. This usually means there won't be further updates unless the source reappears."
msgstr "`NoSourceSince` - 这个应用的上游源代码不再可用。要么是该应用已经商业化，要么是存储库被放弃，要么是它已经移到了一个我们目前不知道的地方。这通常意味着不会有进一步的更新，除非源代码重新出现。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`NSFW` - the app contains content that the user may not want to be publicized or visible everywhere, comes from \"Not Safe For Work\"."
msgstr "`NSFW` - 应用包含用户可能不希望到处公开或可见的内容，来自网络术语“Not safe for work”。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`TetheredNet` - the application depends entirely on a service which is impossible (or not easy) to replace. Replacement requires changes to the app or service. This Anti-Feature would not be applied if there is a simple configuration option that allows pointing the app to a running instance of an alternative, publicly available, self-hostable server solution."
msgstr "`TetheredNet` - 此应用完全完全依赖不可能（或不易替换）的服务。替换需要对应用或服务进行修改。如果有一个简单的配置选项，允许将应用指向另一个备选的、公开可用的、可自托管的服务器解决方案，那么这个负面特征就不适用。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`Tracking` - user or activity data is tracked or leaks, by default. True if the app or a feature can not be used without collecting and sharing such data, or doing requests to a data collecting network service (regard- less if the service is based on free software, or not). For example, activity-based down-loading of weather data, maps, avatars etc. (data hosting and delivery services), or uploading of crash logs etc."
msgstr "`Tracking` - 默认追踪用户或泄露活动数据。如果应用或某一功能在不收集和分享这些数据或向数据收集网络服务（不管该服务是否基于自由软件）发出请求的情况下就无法使用，则适用该负面特征。例如，基于活动的天气数据、地图、头像等的下载（数据托管和交付服务），或上传崩溃日志等。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`UpstreamNonFree` - the application is or depends on Non-Free software. This does not mean that Non-Free Software is included with the app: Most likely, it has been patched in some way to remove the Non-Free code. However, functionality may be missing."
msgstr "`UpstreamNonFree` - 该应用是或依赖于非自由软件。这并不意味着非自由软件包含在该应用中：最有可能的情形是，已经以某种方式打了补丁以移除非自由代码。然而，部分功能可能会缺失。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<antifeatures>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件(_index.xml_) 中，该字段将被转换为 (`<antifeatures>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Disabled_<a name=\"Disabled\"></a>"
msgstr "_Disabled_<a name=\"Disabled\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "If this field is present, the application does not get put into the public index. This allows metadata to be retained while an application is temporarily disabled from being published. The value should be a description of why the application is disabled. No APKs or source code archives are deleted: to purge an APK see [`disable`](#build_disable) in the _Builds_ section or delete it manually for developer builds. The field is therefore used when an app has outlived it's usefulness, because the source tarball is retained."
msgstr "如果这个字段存在，该应用不会被放入公开索引。这允许在一个应用被暂时禁用时保留元数据。该值应该是对应用被禁用原因的描述。没有 APK 或源代码档案会被删除：要清除APK，请见_Builds_ 部分的[`disable`](#build_disable)，或者手动删除开发者版本。因此，这个字段是在一个应用已经过期的情况下使用的，因为源代码压缩包被保留。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_RequiresRoot_<a name=\"RequiresRoot\"></a>"
msgstr "_RequiresRoot_<a name=\"RequiresRoot\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Set this optional field to `true` if the application requires root privileges to be usable. This lets the client filter it out if the user so desires. Whether root is required or not, it is good to give a paragraph in the description to the conditions on which root may be asked for and the reason for it."
msgstr "如果应用需要 root 权限才能使用，请将此可选字段设置为 `true`。如果用户愿意，可以让客户端过滤掉它。无论是否需要 root 权限，最好在描述中给出一段可能要求 root 权限的条件及其原因。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<requirements>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_)中，该字段将被转换为 (`<requirements>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_ArchivePolicy_<a name=\"ArchivePolicy\"></a>"
msgstr "_ArchivePolicy_（存档政策）<a name=\"ArchivePolicy\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "This determines the policy for moving old versions of an app to the archive repo, if one is configured. The configuration sets a default maximum number of versions kept in the main repo, after which older ones are moved to the archive. This app-specific policy setting can override that."
msgstr "如果配置了一个归档存储库的话，这决定了将应用的旧版本转移到归档存储库的策略。配置设置了一个默认的在主存储库中保留的最大版本数，之后旧版本会被移到归档存储库中。这个特定于应用的策略设置可以覆盖它。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The version specified via [_CurrentVersionCode_](#CurrentVersionCode) is always considered the newest version when deciding which versions to put into the archive.  This means that when _ArchivePolicy_ is set to `1` only the APK corresponding to CVC is kept, which is not necessarily the one with the highest version code."
msgstr "在决定将哪些版本放入存档时，通过 [_CurrentVersionCode_](#CurrentVersionCode)指定的版本始终被视为最新版本。这意味着当_ArchivePolicy_ 设置为 `1` 时，只保留 CVC 对应的 APK，而不一定是版本号最高的那个。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Currently the only supported format is `n`, where `n` is the number of versions to keep. Defaults to `3`. For apps with a list of [_VercodeOperation_](#VercodeOperation) the default is calculated as `3 × number of operations`, e.g. for an app with two operations, for two ABIs, 6 versions will be kept."
msgstr "`n` 是当前唯一受支持的格式， `n`是要保留的版本数。 默认值为 `3`。 对于有[_VercodeOperation_](#VercodeOperation)列表的应用，默认计算方法为`3 x 操作数`。例如， 对于有两个操作的应用，对于两个 ABI，将保留 6 个版本。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_AutoUpdateMode_<a name=\"AutoUpdateMode\"></a>"
msgstr "_AutoUpdateMode_（自动更新模式）<a name=\"AutoUpdateMode\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "This determines the method used for auto-generating new builds when new releases are available - in other words, adding a new Build Version line to the metadata. This happens in conjunction with the [_UpdateCheckMode_](#UpdateCheckMode) functionality - i.e. when an update is detected by that, it is also processed by this."
msgstr "这决定了在有新版本时自动生成新构建的方法 - 换句话说，在元数据中添加新的构建版本行。这与[_UpdateCheckMode_](#UpdateCheckMode)功能共同进行 - 也就是说，当一个更新被检测到时，它也会被此功能处理。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Valid modes are:"
msgstr "有效模式是："

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`None` - Auto-updating is disabled."
msgstr "`None` - 自动更新被禁用。"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`Version` - Auto-updating is enabled."
msgstr "`Version` - 已启用自动更新。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    If [_UpdateCheckMode_](#UpdateCheckMode) is set to `Tags`, this should be\n"
"    set to `Version` without any pattern. The checked tag is used directly.\n"
msgstr ""
"    如 [_UpdateCheckMode_](#UpdateCheckMode)被设为`Tags`，那么这个应设为\n"
"    `Version`，不带任何正则模式。 勾选的标签被直接使用。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    If `UpdateCheckMode` is set to `HTTP`, a pattern should be added\n"
"    after the `Version`. The pattern is used to generate a value\n"
"    (tag name) used for the [`commit:`](#build_commit) property of new build\n"
"    blocks.  It is simply text in which `%v` and `%c` are replaced with the\n"
"    required version name and version code respectively. The resulting\n"
"    string must match an existing tag in the app's repo, which then will be\n"
"    used by F-Droid to build the corresponding version.\n"
msgstr ""
"    如 `UpdateCheckMode` 设为 `HTTP`，\n"
"        那么应在 `Version` 之后添加一个模式。\n"
"        该模式用来生成一个用于新构建块 [`commit:`](#build_commit)属性的值（标签名）。\n"
"        它是简单的文本，\n"
"        其中 `%v` 和 `%c` 分别被替换成所需的版本名称和版本代码。\n"
"        产生的字符串必须与应用存储库中的现有标签相匹配，\n"
"        然后 F-Droid 将使用该标签来构建相应的版本。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    For example, if an app always has a tag `2.7.2` corresponding to\n"
"    version 2.7.2, you would simply specify `Version %v`. If an app\n"
"    always has a tag `ver_1234` for a version with version code 1234,\n"
"    you would specify `Version ver_%c`.\n"
msgstr ""
"    例如，如果一个应用总是有一个标签 `2.7.2` 对应于 2.7.2 版本，\n"
"        你可以简单地指定 `Version %v`。\n"
"        如果一个应用总是有一个标签 `ver_1234` 表示版本代码为 1234 的版本，\n"
"        你可以指定 `Version ver_%c`。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Additionally, a suffix can be added to the version name at this\n"
"    stage, to differentiate F-Droid's build from the original.\n"
"    Continuing the first example above, you would specify that as\n"
"    `Version +-fdroid %v`, where `-fdroid` is the suffix that will be appended\n"
"    to the [`versionName`](#build_versionName) specified in e.g. `build.gradle`\n"
"    when building the APK.\n"
msgstr ""
"    此外，在这个阶段，\n"
"        可以在版本名称中添加一个后缀，\n"
"        以区分 F-Droid 的构建和原始版本。\n"
"        继续上面的第一个例子，你可以将其指定为 `Version +-fdroid %v`，\n"
"        其中 `-fdroid`是构建 APK 时将被附加\n"
"        到比方说`build.gradle`中指定的[`versionName`](#build_versionName)的后缀。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "For apps with a list of [_VercodeOperation_](#VercodeOperation) the number of builds is equal to the number of items in the list."
msgstr "对于带 [_VercodeOperation_](#VercodeOperation)列表的应用， 构建数等于列表中项目数。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_UpdateCheckMode_<a name=\"UpdateCheckMode\"></a>"
msgstr "_UpdateCheckMode_（更新检查模式）<a name=\"UpdateCheckMode\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "This determines the method using for determining when new releases are available - in other words, the updating of the [_CurrentVersion_](#CurrentVersion)  and [_CurrentVersionCode_](#CurrentVersionCode) fields in the metadata by the `fdroid checkupdates` process."
msgstr "这决定了用于确定何时有新版本 - 换句话说，由 `fdroid checkupdates` 进程更新元数据中[_CurrentVersion_](#CurrentVersion)和 [_CurrentVersionCode_](#CurrentVersionCode)字段。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"* `None` - No checking is done because there's no appropriate\n"
"    automated way of doing so. Updates should be checked for manually.\n"
"    Use this, for example, when deploying unstable or patched versions;\n"
"    when builds are done in a directory different to where the\n"
"    _AndroidManifest.xml_ is; if the developers use the Gradle build\n"
"    system and store version info in a separate file; if the developers\n"
"    make a new branch for each release and don't make tags; or if you've\n"
"    changed the package name or version code logic.\n"
"* `Static` - No checking is done - either development has ceased or\n"
"    new versions are not desired. This method is also used when there is\n"
"    no other checking method available and the upstream developer keeps\n"
"    us posted on new versions.\n"
"* `RepoManifest` - At the most recent commit, the _AndroidManifest.xml_\n"
"    and _build.gradle_ files are looked for in the directory where\n"
"    they were found in the most recent build. The appropriateness of\n"
"    this method depends on the development process used by the\n"
"    application's developers. You should not specify this method unless\n"
"    you're sure it's appropriate. For example, some developers bump the\n"
"    version when commencing development instead of when publishing. It\n"
"    will return an error if the _AndroidManifest.xml_ has moved to a\n"
"    different directory or if the package name has changed. The current\n"
"    version that it gives may not be accurate, since not all versions\n"
"    are fit to be published.  Therefore, before building, it is often\n"
"    necessary to check if the current version has been published\n"
"    somewhere by the upstream developers, either by checking for APKs\n"
"    that they distribute or for tags in the source code repository.\n"
msgstr ""
"* `None` - 不进行检查，\n"
"    因为没有恰当的自动检查方法。\n"
"    应该手动检查更新。\n"
"    使用这种方法的情形包括，部署不稳定或 patched 版本；\n"
"    当在不同于 _AndroidManifest.xml_ 所在目录进行构建；\n"
"    如果开发者使用 Gradle 构建系统并在单独文件内存储版本信息；\n"
"    如果开发者未每个新发行都创建一个新分支且不打标签；\n"
"    或者你已更改了包名或版本代码逻辑。\n"
"* `Static` - 不进行检查 - \n"
"    要么开发已经停止或者新版本不令人满意。\n"
"    这一方法在没有其他检查方法可用\n"
"    且上游开发人员让我们随时了解新版本的情况下也被使用。\n"
"`RepoManifest` - 在最近一次提交中，\n"
"    在最近一次构建时发现的目录中寻找 _AndroidManifest.xml_ 和 _build.gradle_ 文件。\n"
"    这种方法是否合适，\n"
"    取决于应用的开发者所使用的开发过程。\n"
"    你不应该指定这种方法除非你确定它是合适的。\n"
"    例如，有些开发者在开始开发时而不是在发布时提高版本。\n"
"    如果 _AndroidManifest.xml_ \n"
"    被移到了不同的目录，\n"
"    或者包的名称发生了变化，它将返回一个错误。\n"
"    它给出的当前版本可能不准确，\n"
"    因为不是所有的版本都适合发布。\n"
"    因此，在构建之前，\n"
"    通常有必要检查当前版本是否已经被上游开发者发布在某个地方，\n"
"    可以通过检查他们发布的 APK 或者源代码存储库中的标签。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    It currently works for every repository type to different extents,\n"
"    except the `srclib` repo type. For `git`, `git-svn` and `hg` repo types, you\n"
"    may use `RepoManifest/yourbranch` as _UpdateCheckMode_ so that \"yourbranch\" would\n"
"    be the branch used in place of the default one. The default values\n"
"    are \"master\" for git, \"default\" for hg and none for git-svn (it\n"
"    stays in the same branch). On the other hand, branch support hasn't\n"
"    been implemented yet in `bzr` and `svn`, but `RepoManifest` may still be\n"
"    used without it.\n"
msgstr ""
"    目前，它在不同程度上适用于除了 `srclib` 存储库类型以外的每种存储库类型。\n"
"    对于 `git`、`git-svn` 和 `hg` 存储库类型，\n"
"    你可以用 `RepoManifest/yourbranch` 作为 _UpdateCheckMode_，\n"
"    这样 \"yourbranch\" 就会被用来代替默认分支。\n"
"    git 的默认值是 \"master\"，hg 的默认值是 \"default\"，\n"
"    git-svn 的默认值是 none（它保持在同一分支）。\n"
"    另一方面，分支支持还没有在 `bzr` 和 `svn` 中实现，\n"
"    但`RepoManifest` 仍然可以在没有它的情况下使用。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"* `Tags` - The _AndroidManifest.xml_ and _build.gradle_ files in all\n"
"    tagged revisions in the source repository are checked, looking for\n"
"    the highest version code.  The appropriateness of this method\n"
"    depends on the development process used by the application's\n"
"    developers. You should not specify this method unless you're sure\n"
"    it's appropriate. It shouldn't be used if the developers like to tag\n"
"    unstable versions or are known to forget to tag releases. Like\n"
"    `RepoManifest`, it will not return the correct value if the\n"
"    _AndroidManifest.xml_ were moved to another directory. Despite these\n"
"    caveats, it is often the favourite _UpdateCheckMode_.\n"
msgstr ""
"`Tags` - 检查源代码存储库中所有被标记的 revision 中的 _AndroidManifest.xml_ 和 _build.gradle_ 文件，寻找最高版本代码。\n"
"    这种方法是否合适，\n"
"    取决于应用的开发者所使用的开发过程。\n"
"    你不应该指定这种方法，除非你确定它是合适的。\n"
"    如果开发者喜欢标记不稳定的版本，\n"
"    或已知忘记标记发布版本，就不应该使用这种方法。\n"
"    像 `RepoManifest` 一样，\n"
"    如果_AndroidManifest.xml_ 被移动到另一个目录，它将不会返回正确的值。\n"
"    尽管有这些注意事项，\n"
"    它往往是最受欢迎的 _UpdateCheckMode_。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    It currently only works for `git`, `hg`, `bzr` and `git-svn` repositories.\n"
"    In the case of the latter, the repo URL must contain the path to the\n"
"    `trunk` and `tags` or else no tags will be found.\n"
msgstr ""
"    目前它只适用于 `git`、`hg`、`bzr` 和 `git-svn`存储库。\n"
"    在后者的情况下，存储库的 URL 必须包含通往`trunk` 和 `tags`的路径，\n"
"    否则将找不到标签。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Optionally append a regex pattern at the end - separated with a\n"
"    space - to only check the tags matching said pattern. Useful when\n"
"    apps tag non-release versions such as `X.X-alpha`, so you can filter\n"
"    them out with something like `.*[0-9]$` which requires tag names to\n"
"    end with a digit.\n"
"    Example: `UpdateCheckMode: Tags .*[0-9]$`\n"
msgstr ""
"    要只检查匹配特定正则表达式的标签，\n"
"        只需在末尾添加相应的正则模式即可，\n"
"        不同模式间用空格隔开 。\n"
"        这在应用标签为非发布版本（如 `X.X-alpha`）时非常有用，\n"
"        你可以用 `.*[0-9]$` 这样的正则表达式来筛掉不是以数字结尾的标签名。\n"
"        示例：`UpdateCheckMode: Tags .*[0-9]$`\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Optionally [_UpdateCheckData_](#UpdateCheckData) can be specified to\n"
"    extract version code and name from repository files you specify (instead of\n"
"    relying on the defaults, which in most cases is `build.gradle` or\n"
"    `AndroidManifest.xml`).\n"
msgstr ""
"    可选地，\n"
"    可以明确 [_UpdateCheckData_](#UpdateCheckData)来从你指定的存储库文件\n"
"    而不是依靠默认值（在大多数情况下是 `build.gradle` 或 `AndroidManifest.xml`）中\n"
"    提取版本代码和名称。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"* `HTTP` - HTTP requests are used to determine the current version\n"
"    code and version name. This is controlled by the\n"
"    [_UpdateCheckData_](#UpdateCheckData) field, which is of the form\n"
"    `urlcode|excode|urlver|exver`.\n"
msgstr ""
"`HTTP` - HTTP 请求被用来确定\n"
"    当前的版本代码和版本名称。\n"
"    这由 [_UpdateCheckData_](#UpdateCheckData)字段控制， \n"
"    它的形式是 `urlcode|excode|urlver|exver`。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Firstly, if `urlcode` is non-empty, the document from that URL is\n"
"    retrieved, and matched against the regular expression `excode`, with\n"
"    the first group becoming the version code.\n"
msgstr "    首先，如果 `urlcode` 不为空，则获取该 URL 中的文档，并与正则表达式 `excode` 匹配，以其中第一个匹配组作为版本代码。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"    Secondly, if `urlver` is non-empty, the document from that URL is\n"
"    retrieved, and matched against the regular expression `exver`, with\n"
"    the first group becoming the version name. The `urlver` field can be\n"
"    set to simply '.' which says to use the same document returned for\n"
"    the version code again, rather than retrieving a different one.\n"
msgstr ""
"    其次，如果 `urlver` 不是空的，\n"
"    则获取该 URL 中的文档，\n"
"    并与正则表达式 `exver` 进行匹配，其中第一组成为版本名。\n"
"    `urlver` 字段可以简单设置为 '.'，\n"
"    表示和版本代码使用同一文件而不是获取另一个。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_VercodeOperation_<a name=\"VercodeOperation\"></a>"
msgstr "_VercodeOperation_（版本代码操作）<a name=\"VercodeOperation\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Operation to be applied to the version code obtained by the defined [_UpdateCheckMode_](#UpdateCheckMode). `%c` will be replaced by the actual version code, and the whole string will be passed to python's `eval` function."
msgstr "对通过定义的 [_UpdateCheckMode_](#UpdateCheckMode)获得的版本代码进行操作。`%c` 将被实际的版本代码替换，整个字符串将被传递给 python 的 `eval` 函数。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Especially useful with apps that we want to compile for different ABIs, but whose version codes don't always have trailing zeros. For example, with multiple _VercodeOperation_ we can track updates and build up to four different versions of every upstream version, say for 4 architectures:"
msgstr "对于想为不同的 ABI 编译，但其版本代码并不总是有拖尾零的应用尤其有用。例如，通过多个 _VercodeOperation_ ，我们能够跟踪更新，并为每个上游版本构建最多四个不同的版本，也即四种架构："

#. type: Fenced code block (yaml)
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"VercodeOperation:\n"
"  - 100 * %c + 1\n"
"  - 100 * %c + 2\n"
"  - 100 * %c + 3\n"
"  - 100 * %c + 4\n"
msgstr ""
"版本代码操作:\n"
"  - 100 * %c + 1\n"
"  - 100 * %c + 2\n"
"  - 100 * %c + 3\n"
"  - 100 * %c + 4\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "So 4 build blocks are copied from above and added as an update with their version code calculated by doing each math operation."
msgstr "从上面复制了四个构建块并添加为一个更新，通过进行数学操作计算它们的版本码。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_UpdateCheckIgnore_<a name=\"UpdateCheckIgnore\"></a>"
msgstr "_UpdateCheckIgnore_（更新检查忽略）<a name=\"UpdateCheckIgnore\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "When checking for updates (via [_UpdateCheckMode_](#UpdateCheckMode)) this can be used to specify a regex which, if matched against the version name, causes that version to be ignored. For example, 'beta' could be specified to ignore version names that include that text."
msgstr "当检查更新时（通过[_UpdateCheckMode_](#UpdateCheckMode)），这可以用来指定一个正则表达式，如果与版本名称相匹配，将导致该版本被忽略。例如，可以指定 \"beta\" 以忽略包含该文本的版本名称。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Only Available with [_UpdateCheckMode_](#UpdateCheckMode) `HTTP`."
msgstr "只在 [_UpdateCheckMode_](#UpdateCheckMode)`HTTP` 中可用。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_UpdateCheckName_<a name=\"UpdateCheckName\"></a>"
msgstr "_UpdateCheckName_<a name=\"UpdateCheckName\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "When checking for updates (via _UpdateCheckMode_) this can be used to specify the package name to search for. Useful when apps have a static package name but change it programmatically in some app flavours, by e.g.  appending \".open\" or \".free\" at the end of the package name."
msgstr "当检查更新时（通过 _UpdateCheckMode_），这可以用来指定要搜索的软件包名称。当应用有一个静态的包名但在某些 flavor 中以编程方式改变它，例如在包名的末尾加上 \".open\" 或 \".free\" 时很有用。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "You can also use `Ignore` to ignore package name searching. This should only be used in some specific cases, for example if the app's `build.gradle` file does not contain the package name."
msgstr "你也可以使用 `Ignore` 来忽略包名搜索。这只应在某些特殊情况下使用，例如，应用的 `build.gradle` 文件不包含包名。"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_UpdateCheckData_<a name=\"UpdateCheckData\"></a>"
msgstr "_UpdateCheckData_（更新检查数据）<a name=\"UpdateCheckData\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Used in conjunction with [_UpdateCheckMode_](#UpdateCheckMode) `Tags` or `HTTP`."
msgstr "与 [_UpdateCheckMode_](#UpdateCheckMode)`Tags` 或 `HTTP` 一起使用。"

#. type: Fenced code block (yaml)
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "UpdateCheckData: <vercode-location>|<RegEx-for-versionCode>|<versionName-location>|<RegEx-for-versionName>\n"
msgstr "UpdateCheckData: <vercode-location>|<RegEx-for-versionCode>|<versionName-location>|<RegEx-for-versionName>\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid ""
"* `vercode-location` - URL (with `UpdateCheckMode: HTTP`) or path/file\n"
"    relative to repo root, leave empty to check the tag name instead (with\n"
"    `UpdateCheckMode: Tags`).\n"
"* `RegEx-for-versionCode` - RegEx to match `versionCode`.\n"
"* `versionName-location` - Same as `vercode-location` just for `versionName`. A `.`\n"
"    means to take `vercode-location`, leave empty to check the tag name instead\n"
"    (only with `UpdateCheckMode: Tags`).\n"
"* `RegEx-for-versionName` - Similar to `RegEx-for-versionCode`, just for `versionName`.\n"
"* RegEx pipe operators are not supported at this time.\n"
msgstr ""
"* `vercode-location` - URL(`UpdateCheckMode: HTTP` 中）\n"
"    或相对于存储库根目录的路径/文件，\n"
"    留空检查标签名（使用 `UpdateCheckMode: Tags`）。\n"
"* `RegEx-for-versionCode` - 匹配 versionCode`的正则表达式。\n"
"* `versionName-location` - 与 `vercode-location` 相同，用于 `versionName`。\n"
"    一个 `.` 表示带 `vercode-location`，\n"
"    留空则检查标签名（仅用于 `UpdateCheckMode: Tags`）。\n"
"* `RegEx-for-versionName` - 类似`RegEx-for-versionCode`，用于 `versionName`。\n"
"* RegEx 管道操作符此刻尚不被支持。\n"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Examples for `UpdateCheckMode: Tags`:"
msgstr "`UpdateCheckMode: Tags`示例："

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "Flutter app with the `pubspec.yaml` in the repo root: `pubspec.yaml|version:\\s.+\\+(\\d+)|.|version:\\s(.+)\\+`"
msgstr "在存储库根目录中含 `pubspec.yaml`的 Flutter 应用： `pubspec.yaml|version:\\s.+\\+(\\d+)|.|version:\\s(.+)\\+`"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "Use the git tag as version name: `app/build.gradle|versionCode\\s(\\d+)||`"
msgstr "将 git 标签用作版本名：`app/build.gradle|versionCode\\s(\\d+)||`"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "Optionally a regex to extract the version name from the tag can be specified: `app/build.gradle|versionCode\\s(\\d+)||Android-([\\d.]+)`"
msgstr "可选地，可以指定从标签中提取版本名的正则表达式：`app/build.gradle|versionCode\\s(\\d+)||Android-([\\d.]+)`"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "If no file for the version code was specified, code and name can be extracted from the tag: `'|\\+(\\d+)||Android-([\\d.]+)'`"
msgstr "如果未指定版本码文件，码和名称可以从 tag: `'|\\+(\\d+)||Android-([\\d.]+)'` 中提取"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "Note: Be sure to use *single* quotes around the entire value if you leave `vercode-location` empty: `UpdateCheckData: '|\\+(\\d+)||Android-([\\d.]+)'`"
msgstr "注意：如果你留空 `vercode-location`确保在整个值前后使用 *单* 引号：`UpdateCheckData: '|\\+(\\d+)||Android-([\\d.]+)'`"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Examples for `UpdateCheckMode: HTTP`:"
msgstr "`UpdateCheckMode: HTTP`示例："

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`https://foo/version.json|\"version_code\":.*\"(.*)\"|.|\"version_name\":.*\\\"(.*)\\\",`"
msgstr "`https://foo/version.json|\"version_code\":.*\"(.*)\"|.|\"version_name\":.*\\\"(.*)\\\",`"

#. type: Bullet: '* '
#: _docs/Build_Metadata_Reference.md
msgid "`https://foo/version_fdroid.txt|versionCode=(.*)|.|versionName=(.*)`"
msgstr "`https://foo/version_fdroid.txt|versionCode=(.*)|.|versionName=(.*)`"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_CurrentVersion_<a name=\"CurrentVersion\"></a>"
msgstr "_CurrentVersion_（当前版本）<a name=\"CurrentVersion\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The [name of the version](https://developer.android.com/guide/topics/manifest/manifest-element.html#vname) that is the recommended release. There may be newer versions of the application than this (e.g. unstable versions), and there will almost certainly be older ones. This should be the one that is recommended for general use. In the event that there is no source code for the current version, or that Non-Free libraries are being used, this would ideally be the latest version that is still free, though it may still be expedient to retain the automatic update check — see [_NoSourceSince_](#NoSourceSince)."
msgstr "推荐的[版本的名称](https://developer.android.com/guide/topics/manifest/manifest-element.html#vname)。应用可能会有更新的版本（例如不稳定的版本），而且几乎肯定会有更老的版本。这应该是被推荐用于一般用途的版本。如果当前版本没有源代码，或者使用的是非自由库，那么最好是仍然自由的最新版本，尽管保留自动更新检查可能仍是权宜之计 - 参见[_NoSourceSince_](#NoSourceSince)。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "This field is normally automatically updated - see [_UpdateCheckMode_](#UpdateCheckMode)."
msgstr "这个字段通常是自动更新的 - 见 [_UpdateCheckMode_](#UpdateCheckMode)。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<marketversion>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<marketversion>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_CurrentVersionCode_<a name=\"CurrentVersionCode\"></a>"
msgstr "_CurrentVersion_（当前版本代码）<a name=\"CurrentVersionCode\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "The [version code](https://developer.android.com/guide/topics/manifest/manifest-element.html#vcode) corresponding to the [_CurrentVersion_](#CurrentVersion) field. Both these fields must be correct and matching although it's the current version code that's used by Android to determine version order and by F-Droid client to determine which version should be recommended."
msgstr "与 [_CurrentVersion_](#CurrentVersion) 字段相对应的[版本代码](https://developer.android.com/guide/topics/manifest/manifest-element.html#vcode)。这两个字段都必须是正确和匹配的，尽管只有当前版本代码被 Android 用来确定版本顺序以及被 F-Droid 客户端用来确定应该推荐哪个版本。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "If not set, clients will recommend the highest version they can, as if the _CurrentVersionCode_ was infinite."
msgstr "如果未设置，客户端将推荐它们能推荐的最高版本，如同 _CurrentVersionCode_ 是无限的。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<marketvercode>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<marketversion>`)。\n"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_NoSourceSince_<a name=\"NoSourceSince\"></a>"
msgstr "_NoSourceSince_<a name=\"NoSourceSince\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "In case we are missing the source code for the [_CurrentVersion_](#CurrentVersion) reported by Upstream, or that Non-Free elements have been introduced, this defines the first version that began to miss source code. Apps that are missing source code for just one or a few versions, but provide source code for newer ones are not to be considered here - this field is intended to illustrate which apps do not currently distribute source code, and since when have they been doing so."
msgstr "如果我们缺少上游报告的 [_CurrentVersion_](#CurrentVersion)的源代码，或者非自由元素已经被引入，这里定义了开始缺少源代码的第一个版本。这里不考虑那些只缺少一个或几个版本的源代码，但提供较新版本的源代码的应用 - 这个字段旨在说明哪些应用目前没有分发源代码，以及它们从什么时候开始这样做。"

#. type: Title #
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "Deprecated or Removed Fields"
msgstr "已废弃或删除的字段"

#. type: Title ###
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "_Provides_<a name=\"Provides\"></a>"
msgstr "_Provides_<a name=\"Provides\"></a>"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
msgid "Comma-separated list of application IDs that this app provides. This field was only ever a stub and was never used for anything.  It was never supported in _index-v1.json_ nor _.yml_ metadata files."
msgstr "此应用提供的应用的 ID 的逗号分隔列表。这个字段只是一个存根，从未用于任何事情。 _index-v1.json_ 和 _ .yml_ 元数据文件中从未支持过它。"

#. type: Plain text
#: _docs/Build_Metadata_Reference.md
#, no-wrap
msgid "This is converted to (`<provides>`) in the XML file (_index.xml_).\n"
msgstr "在 XML 文件 (_index.xml_) 中，该字段将被转换为 (`<provides>`)。\n"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "Build Server Setup"
msgstr "构建服务器设置"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "The F-Droid build server isolates the builds for each package within a clean, isolated and secure throwaway virtual machine environment. Building thousands of apps, especially with automated and/or unattended processes, could be considered a dangerous pastime from a security perspective. This is even more the case when the products of the build are also distributed widely and in a semi-automated (\"you have updates available\") fashion."
msgstr "F-Droid 构建服务器将每个软件包的构建隔离在一个干净、隔离和安全的一次性虚拟机环境中。构建数以千计的应用，特别是使用自动化和/或无人值守的流程，从安全角度来看，可以被认为是一种危险游戏。当构建的产物也是以半自动化（\"你有更新可用\"）的方式广泛传播时，情况就更糟糕了。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "Assume that an upstream source repository is compromised. A small selection of things that an attacker could do in such a situation:"
msgstr "假定上游源代码存储库已被攻击。攻击者在这种情况下可以执行的一小部分操作："

#. type: Bullet: '1.  '
#: _docs/Build_Server_Setup.md
msgid "Use custom build steps to execute virtually anything as the user doing the build."
msgstr "使用自定义的构建步骤，作为进行构建的用户执行几乎任何东西。"

#. type: Bullet: '2.  '
#: _docs/Build_Server_Setup.md
msgid "Access the keystore."
msgstr "访问密钥库。"

#. type: Bullet: '3.  '
#: _docs/Build_Server_Setup.md
msgid "Modify the built APK files or source tarballs for other applications in the repository."
msgstr "修改存储库中其他应用构建的 APK 文件或源代码包。"

#. type: Bullet: '4.  '
#: _docs/Build_Server_Setup.md
msgid "Modify the metadata (which includes build scripts, which again, also includes the ability to execute anything) for other applications in the repository."
msgstr "修改存储库中其他应用的元数据（包括构建脚本，其中还包括执行任何内容的功能）。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "Through complete isolation, the repercussions are at least limited to the application in question. Not only is the build environment fresh for each build, and thrown away afterwards, but it is also totally isolated from the signing environment."
msgstr "通过完全隔离，影响至少局限于有关的应用。构建环境不仅在每次构建时是新鲜的，之后就会被扔掉，而且它也与签名环境完全隔离。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "Aside from security issues, there are some applications which have strange requirements such as old versions of the NDK. It would be impractical (or at least extremely messy) to start modifying and restoring the SDK on a multi-purpose system, but within the confines of a throwaway single-use virtual machine, anything is possible."
msgstr "除了安全问题，还有一些应用有奇怪的要求，比如旧版本的 NDK。在一个多用途系统上开始修改和恢复 SDK 是不切实际的（或者至少是极其混乱的），但是在一个一次性虚拟机的范围内，一切都有可能。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "All this is in addition to the obvious advantage of having a standardised and completely reproducible environment in which builds are made. Additionally, it allows for specialised custom build environments for particular applications."
msgstr "除此以外，还有一个明显的优势，那就是有一个标准化的、完全可重复的环境来进行构建。此外，它还允许为特定的应用提供专门的定制构建环境。"

#. type: Title ##
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "Overview of the setup"
msgstr "设置概述"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "This is how to set up a working build server, starting from a completely clean minimal Debian/stable install.  This HOWTO assumes you have already [setup _fdroidserver_](../Installing_the_Server_and_Repo_Tools). Running the _fdroidserver_ tools directly out of [git](https://gitlab.com/fdroid/fdroidserver)  (e.g. `~/fdroidserver/fdroid build org.adaway`), will likely be the easiest for now since the build server setup scripts are not really ready for proper packaging. Also, it will likely only work on Debian, Ubuntu and other Debian-derivatives since F-Droid only uses Debian in its infrastructure (we welcome porting contributions!)."
msgstr "这是从完全干净的最小 Debian/stable 安装开始如何设置一个有效的构建服务器的方法。 本指南假设你已经[设置了 _fdroidserver_](../Installing_the_Server_and_Repo_Tools)。直接从 [git](https://gitlab.com/fdroid/fdroidserver) 运行 _fdroidserver_ 工具（例如 `~/fdroidserver/fdroid build org.adaway`）可能是目前最容易，因为构建服务器设置脚本尚未真正准备好进行正确的打包。此外，它可能只适用于 Debian、Ubuntu 和其他 Debian 衍生产品，因为 F-Droid 只在其基础设施中使用 Debian（我们欢迎移植贡献！）。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "The base server needs to be at minimum Debian/bullseye, or there will need to be some heavy tweaking. If you run Ubuntu or derivative distro, you can get any packages missing from your version, like _vagrant-cachier_, from this PPA: <https://launchpad.net/~fdroid/+archive/ubuntu/buildserver/>"
msgstr "基础服务器至少需要 Debian/bullseye，否则需要进行一些繁重的调整。如果你运行 Ubuntu 或衍生发行版，你可以从这个 PPA 中获得任何缺少的软件包，比如 _vagrant-cachier_：<https://launchpad.net/~fdroid/+archive/ubuntu/buildserver/>"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "First, install the necessary packages and create a new user to run the whole process here, e.g. _fdroid_. These are only the packages required by all builds, you might need to install additional packages to build apps, for example, _mercurial_ or _subversion_. Once the packages are installed and the _fdroid_ user is created, nothing else in this process should be run using root or _sudo_."
msgstr "首先，安装必要的软件包，并创建一个新的用户运行这里的整个过程，例如，_fdroid_。这些只是所有构建所需的包，你可能需要安装额外的包来构建应用，例如，_mercurial_ 或 _subversion_。一旦软件包被安装，并且 _fdroid_ 用户被创建，这个过程中的任何其他东西都不应该用 root 或 _sudo_ 运行。"

#. type: Fenced code block (bash)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"root:~# apt-get install vagrant git python3-certifi \\\n"
"        python3-libvirt python3-requestbuilder python3-yaml \\\n"
"        python3-clint python3-vagrant python3-paramiko python3-pyasn1 \\\n"
"        python3-pyasn1-modules python3-requests python3-git\n"
"        vagrant-mutate vagrant-libvirt ebtables dnsmasq-base \\\n"
"        libvirt-clients libvirt-daemon-system qemu-kvm qemu-utils\n"
"root:~# adduser --disabled-password fdroid\n"
"root:~# su fdroid\n"
msgstr ""
"root:~# apt-get install vagrant git python3-certifi \\\n"
"        python3-libvirt python3-requestbuilder python3-yaml \\\n"
"        python3-clint python3-vagrant python3-paramiko python3-pyasn1 \\\n"
"        python3-pyasn1-modules python3-requests python3-git\n"
"        vagrant-mutate vagrant-libvirt ebtables dnsmasq-base \\\n"
"        libvirt-clients libvirt-daemon-system qemu-kvm qemu-utils\n"
"root:~# adduser --disabled-password fdroid\n"
"root:~# su fdroid\n"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "Clone source code running as _fdroid_ user:"
msgstr "克隆源代码以 _fdroid_ 用户身份运行："

#. type: Fenced code block (bash)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"fdroid:~$ cd ~\n"
"fdroid:~$ git clone https://gitlab.com/fdroid/fdroidserver.git\n"
msgstr ""
"fdroid:~$ cd ~\n"
"fdroid:~$ git clone https://gitlab.com/fdroid/fdroidserver.git\n"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "You also have to make sure your `ANDROID_HOME` environment variable is [set up](../Installing_the_Server_and_Repo_Tools#building-apps) correctly."
msgstr "你还必须确保你的 `ANDROID_HOME` 环境变量[设置](../Installing_the_Server_and_Repo_Tools#building-apps)正确。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "For your convenience you optionally may add the fdroid executable to your path:"
msgstr "为了方便，你可以选择将 fdroid 可执行文件添加到你的路径中："

#. type: Fenced code block (bash)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "fdroid:~$ echo \"PATH=\\$PATH:$HOME/fdroidserver\" >> ~/.bashrc\n"
msgstr "fdroid:~$ echo \"PATH=\\$PATH:$HOME/fdroidserver\" >> ~/.bashrc\n"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "Get all of the app build metadata from the fdroiddata repo..."
msgstr "从 fdroiddata repo 中获取所有的应用构建元数据..."

#. type: Fenced code block (bash)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"fdroid:~/fdroidserver$ cd ~\n"
"fdroid:~$ git clone https://gitlab.com/fdroid/fdroiddata.git\n"
"fdroid:~$ cp fdroidserver/examples/config.yml fdroiddata/\n"
"fdroid:~$ sed -i \"s@^[# ]*build_server_always.*@build_server_always: true@\" fdroiddata/config.yml\n"
msgstr ""
"fdroid:~/fdroidserver$ cd ~\n"
"fdroid:~$ git clone https://gitlab.com/fdroid/fdroiddata.git\n"
"fdroid:~$ cp fdroidserver/examples/config.yml fdroiddata/\n"
"fdroid:~$ sed -i \"s@^[# ]*build_server_always.*@build_server_always: true@\" fdroiddata/config.yml\n"

#. type: Title ##
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "Setting up a build server"
msgstr "设置一个构建服务器"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "In addition to the basic setup previously described, we ship a Vagrant-compatible Debian/bullseye base box called 'fdroid/bullseye64'."
msgstr "除了前面描述的基本设置之外，我们还提供了一个与 Vagrant 兼容的 Debian/bullseye 基础系统，称为 'fdroid/bullseye64'。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "We are bootstrapping the Debian Vagrant boxes for our buildserver from scratch. Fetching and verifying our pre-build Vagrant boxes is fully automated. (If you are interested in this process or want to bootstrap those by yourself you should look at: [F-Droid Base Box](https://gitlab.com/fdroid/basebox#fdroid_basebox))"
msgstr "我们正在为我们的构建服务器从头引导 Debian Vagrant 盒子。获取和验证我们预先构建的 Vagrant 盒子是完全自动化的。（如果你对这个过程感兴趣或者想自己引导这些盒子，你应该看看：[F-Droid Base Box](https://gitlab.com/fdroid/basebox#fdroid_basebox)）"

#. type: Title ###
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "Creating the F-Droid buildserver box"
msgstr "创建 F-Droid 构建服务器系统"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "Create a config file for Vagrant as `~/fdroidserver/buildserver/Vagrantfile.yaml` which contains:"
msgstr "创建一个 Vagrant 配置文件，位于 `~/fdroidserver/buildserver/Vagrantfile.yaml`，包括内容有："

#. type: Fenced code block
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "vm_provider: libvirt\n"
msgstr "vm_provider: libvirt\n"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "Then the base buildserver image... (downloading the basebox and all the SDK platforms can take long time)."
msgstr "接着是基本构建服务器镜像...（下载 basebox 和所有 SDK platforms 可能需要很长的时间）。"

#. type: Fenced code block (bash)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"fdroid:~$ cd fdroidserver\n"
"fdroid:~/fdroidserver$ ./makebuildserver --verbose\n"
msgstr ""
"fdroid:~$ cd fdroidserver\n"
"fdroid:~/fdroidserver$ ./makebuildserver --verbose\n"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "This will take a long time, use a lot of bandwidth and disk space - most of it spent installing the necessary parts of the Android SDK for all the various platforms. Luckily you only need to do it occasionally. Once you have a working build server image, if the recipes change (e.g. when packages need to be added) you can just run that script again and the existing one will be updated in place."
msgstr "这将需要很长的时间，使用大量的带宽和磁盘空间 - 其中大部分用于安装所有不同平台的 Android SDK 的必要部分。幸运的是，你只需要偶尔这么做。一旦你有了一个工作的构建服务器镜像，如果配方发生变化（例如需要添加软件包时），你只需再次运行该脚本，现有镜像将原地更新。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "Once it's complete you'll have a new base box called 'buildserver' which is what's used for your App build runs. Now you can build packages as you used to, but when you run `fdroid build --verbose --server ...` App build runs will be isolated inside a virtual machine."
msgstr "一旦完成，你就会有一个新的基础系统叫做 'buildserver'，用于你的应用构建运行。现在你可以像以前一样构建软件包，但是当你运行 `fdroid build -- verbose -- server ...` 时应用构建运行将被隔离在一个虚拟机内。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "While the created image has allocated a limited amount of CPU cores and memory, you can edit `~/fdroiddata/builder/Vagrantfile` to modify them dynamically at run time, eg. `libvirt.cpus = 6` and `libvirt.memory = 12288`, but do make sure to not go over the host machines' limits else the VM might get killed."
msgstr "创建的映像分配到的 CPU 核心数和内存有限，但你可以编辑 `~/fdroiddata/builder/Vagrantfile`在运行时动态修改它们。比如，`ibvirt.cpus = 6`和`libvirt.memory = 12288`，但请注意，所设的值不能超过物理主机硬件的上限，否则可能会杀死虚拟机。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "The first time a build is done, a new virtual machine is created using the 'buildserver' box as a base. A snapshot of this clean machine state is saved for use in future builds, to improve performance. You can force discarding of this snapshot and rebuilding from scratch using a switch: `fdroid build --resetserver ...`."
msgstr "第一次构建时，会以“构建服务器”系统为基础创建一个新的虚拟机。这个干净的机器状态的快照被保存下来，以便在未来的构建中使用，从而提高性能。你可以使用选项强制丢弃该快照并从头开始重建：`fdroid build --resetserver ...`。"

#. type: Title ###
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "makebuildserver caching tweaks (optional)"
msgstr "makebuildserver 缓存的调整（可选）"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "The main SDK/NDK downloads will automatically be cached to speed things up the next time, but there's no easy way of doing this for the longer sections which use the SDK's `android` tool to install platforms, add-ons and tools. However, instead of allowing automatic caching, you can supply a pre-populated cache directory which includes not only these downloads, but also .tar.gz files for all the relevant additions. If the provisioning scripts detect these, they will be used in preference to running the Android tools. For example, if you have `buildserver/addons/cache/platforms/android-19.tar.gz` that will be used when installing the android-19 platform, instead of re-downloading it using `android update sdk --no-ui -t android-19`. It is possible to create the cache files of this additions from a local installation of the SDK including these:"
msgstr "主要的 SDK/NDK 下载将被自动缓存，以加快下一次的速度。但对于使用 SDK 的 `android` 工具来安装平台、附加组件和工具的较长部分，则没有简单的方法。然而，你可以提供一个预先填充的缓存目录，其中不仅包括这些下载，还包括所有相关附加组件的 .tar.gz 文件，而不是允许自动缓存。如果配置脚本检测到这些，它们将被优先使用，而不是运行 Android 工具。例如，如果存在 `buildserver/addons/cache/platforms/android-19.tar.gz`，那么在安装 android-19 平台时将会使用它，而不是使用 `android update sdk --no-ui -t android-19` 重新下载。可以从本地安装的 SDK 中创建该添加物的缓存文件，包括这些："

#. type: Fenced code block (bash)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"cd /path/to/android-sdk/platforms\n"
"tar czf android-19.tar.gz android-19\n"
"mv android-19.tar.gz /path/to/buildserver/addons/cache/platforms/\n"
msgstr ""
"cd /path/to/android-sdk/platforms\n"
"tar czf android-19.tar.gz android-19\n"
"mv android-19.tar.gz /path/to/buildserver/addons/cache/platforms/\n"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "If you have already built a buildserver it is also possible to get this files directly from the buildserver:"
msgstr "如果你已经建立了一个构建服务器，也可以直接从构建服务器中获取这些文件："

#. type: Fenced code block (bash)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"vagrant ssh -- -C 'tar -C ~/android-sdk/platforms czf android-19.tar.gz android-19'\n"
"vagrant ssh -- -C 'cat ~/android-sdk/platforms/android-19.tar.gz' > /path/to/fdroidserver/buildserver/cache/platforms/android19.tar.gz\n"
msgstr ""
"vagrant ssh -- -C 'tar -C ~/android-sdk/platforms czf android-19.tar.gz android-19'\n"
"vagrant ssh -- -C 'cat ~/android-sdk/platforms/android-19.tar.gz' > /path/to/fdroidserver/buildserver/cache/platforms/android19.tar.gz\n"

#. type: Title ##
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "Running builds"
msgstr "运行构建"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "When using the buildserver, running `fdroid` directly from a git checkout of _fdroidserver_ will be the easiest.  If you don't already have the _fdroidserver_ tools installed and setup, you will need to do that next: [Installing the Server and Repo Tools](../Installing_the_Server_and_Repo_Tools).  That provides all of the dependencies needed to run _fdroidserver_ from git."
msgstr "当使用构建服务器时，直接从 _fdroidserver_ 的 git 签出运行 `fdroid` 将是最容易的。如果你还没有安装和设置 _fdroidserver_ 工具，接下来你将需要做这个：[安装服务器和存储库工具](../Installing_the_Server_and_Repo_Tools)。这提供了从 git 运行 _fdroidserver_ 所需的所有依赖项。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "Now you are ready to run builds. Test by building the latest fdroid version:"
msgstr "现在你已经准备好运行构建了。通过构建最新的 fdroid 版本进行测试："

#. type: Fenced code block (bash)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"fdroid:~/fdroidserver$ cd ~/fdroiddata\n"
"fdroid:~/fdroiddata$ ~/fdroidserver/fdroid build org.fdroid.fdroid -l --server\n"
msgstr ""
"fdroid:~/fdroidserver$ cd ~/fdroiddata\n"
"fdroid:~/fdroiddata$ ~/fdroidserver/fdroid build org.fdroid.fdroid -l --server\n"

#. type: Title ##
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "Setting up QEMU/KVM/libvirt"
msgstr "设置 QEMU/KVM/libvirt"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "While VirtualBox was used in the past, QEMU/KVM guest VMs via libvirt is still the recommended setup since that is what is used by f-droid.org. In order to make the libvirt image files directly readable by `vagrant package`, _libvirt_'s QEMU needs to be configured to always set the ownership to `libvirt.libvirt`."
msgstr "虽然过去曾使用 VirtualBox，QEMU/KVM guest VMs via libvirt 仍旧是推荐的设置，因为 f-droid 用的就是这个。为了让 libvirt 映像文件可以被 `vagrant package` 直接读取，_libvirt_'的 QEMU 需要被配置成始终将所有权设为 `libvirt.libvirt`。"

#. type: Fenced code block (console)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"root:~# cat << EOF >> /etc/libvirt/qemu.conf\n"
"user = \"libvirt\"\n"
"group = \"libvirt\"\n"
"dynamic_ownership = 1\n"
"EOF\n"
"root:~# service libvirtd restart\n"
msgstr ""
"root:~# cat << EOF >> /etc/libvirt/qemu.conf\n"
"user = \"libvirt\"\n"
"group = \"libvirt\"\n"
"dynamic_ownership = 1\n"
"EOF\n"
"root:~# service libvirtd restart\n"

#. type: Title #####
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "Debian/bullseye and Ubuntu/xenial"
msgstr "Debian/bullseye 和 Ubuntu/xenial"

#. type: Fenced code block (console)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"root:~# adduser fdroid libvirt\n"
"root:~# adduser fdroid libvirt-qemu\n"
msgstr ""
"root:~# adduser fdroid libvirt\n"
"root:~# adduser fdroid libvirt-qemu\n"

#. type: Title #####
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "older Debian and Ubuntu"
msgstr "更旧版本的 Debian 和 Ubuntu"

#. type: Fenced code block (console)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"root:~# adduser fdroid libvirtd\n"
"root:~# adduser fdroid kvm\n"
msgstr ""
"root:~# adduser fdroid libvirtd\n"
"root:~# adduser fdroid kvm\n"

#. type: Title ###
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "Advanced nested KVM Setup:"
msgstr "高级嵌套 KVM 设置："

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "This section is not relevant for using F-Droid in a normal setup. If you want to run `fdroid build --server` flag inside a KVM, this chaper will help you getting started."
msgstr "本节与在正常设置中使用 F-Droid 无关。如果你想在 KVM 中运行 `fdroid build --server` 标志，本章将帮助你开始使用。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "Consider following basic nesting setup:"
msgstr "请考虑以下基本嵌套设置："

#. type: Fenced code block
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"bare metal host (l0)\n"
"\\- F-Droid VM (l1)\n"
"   \\- F-Droid builder VM (l2)\n"
msgstr ""
"bare metal host (l0)\n"
"\\- F-Droid VM (l1)\n"
"   \\- F-Droid builder VM (l2)\n"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "The steps above describe how to setup (l1) and _makebuildserver_ sets up (l2)."
msgstr "上面的步骤描述了如何设置 (l1) 和 _makebuildserver_ 设置 (l2)。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "First of all you'll have to check if you cpu support the _vmx_ (or _svm_ on amd) instruction set. You can use this command to list details about your cpu:"
msgstr "首先，你必须检查你的 cpu 是否支持 _vmx_（或 _svm_amd）指令集。你可以使用这个命令来列出关于你的 cpu 的细节："

#. type: Fenced code block (bash)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "root:~# cat /proc/cpuinfo\n"
msgstr "root:~# cat /proc/cpuinfo\n"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "On (l0) you have to check that nesting is enabled:"
msgstr "在 (l0) 上，你必须检查是否启用了嵌套功能："

#. type: Fenced code block (bash)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "root:~# cat /sys/module/kvm_intel/parameters/nested\n"
msgstr "root:~# cat /sys/module/kvm_intel/parameters/nested\n"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "If it's not enabled you can turn it on by running:"
msgstr "如果它没有被启用，你可以通过运行此命令打开它："

#. type: Fenced code block (bash)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid "echo \"options kvm-intel nested=Y\" > /etc/modprobe.d/kvm-intel.conf\n"
msgstr "echo \"options kvm-intel nested=Y\" > /etc/modprobe.d/kvm-intel.conf\n"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "You'll need to reboot to for this to take effect."
msgstr "你需要重新启动以使之生效。"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "Next you'll need to make sure that your (l1) vm configuration forwards cpu features required for nesting. So open up your configuration for the VM _/etc/libvirt/qemu/my-vm.xml_ and insert a cpu block inside your domain-tag. (_virt-manager_ also provides a user-interface for this operation.)"
msgstr "接下来，你需要确保你的 (l1) 虚拟机配置转发嵌套所需的 cpu 功能。所以打开你的虚拟机配置 _/etc/libvirt/qemu/my-vm.xml_，在你的 domain-tag 里面插入一个 cpu 块。（_virt-manager_ 也为这个操作提供了一个用户接口。）"

#. type: Fenced code block (xml)
#: _docs/Build_Server_Setup.md
#, no-wrap
msgid ""
"<cpu mode='custom' match='exact'>\n"
"    <model fallback='allow'>SandyBridge</model>\n"
"    <vendor>Intel</vendor>\n"
"    <feature policy='require' name='vmx'/>\n"
"</cpu>\n"
msgstr ""
"<cpu mode='custom' match='exact'>\n"
"    <model fallback='allow'>SandyBridge</model>\n"
"    <vendor>Intel</vendor>\n"
"    <feature policy='require' name='vmx'/>\n"
"</cpu>\n"

#. type: Plain text
#: _docs/Build_Server_Setup.md
msgid "The actually required configuration here depends on your cpu. You can find details in [libvirts manual](https://libvirt.org/formatdomain.html#elementsCPU).  The important part is that you forward _vmx_ (or _svm_ on amd) to the guest system."
msgstr "这里实际需要的配置取决于你的 cpu。你可以在 [libvirts 手册](https://libvirt.org/formatdomain.html#elementsCPU)中找到细节。重要的部分是你把 _vmx_（或 _svm_ 在 amd 上）转发给客户系统。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Client_Bug_Reports.md
#, no-wrap
msgid "Client Bug Reports"
msgstr "客户端错误报告"

#. type: Title ###
#: _docs/Client_Bug_Reports.md
#, no-wrap
msgid "What to include in a bug report"
msgstr "错误报告中应包括哪些内容"

#. type: Plain text
#: _docs/Client_Bug_Reports.md
msgid "In order to ensure that the F-Droid developers have the best chance of reproducing your issue and thus fixing it, please include as much of the following information as possible in your bug reports:"
msgstr "为了确保 F-Droid 开发者有最大可能重现你的问题从而修复它，请在你的错误报告中尽可能多地包含以下信息："

#. type: Bullet: '* '
#: _docs/Client_Bug_Reports.md
msgid "F-Droid version (e.g. \"0.88\" or \"0.89-test\")"
msgstr "F-Droid 版本（如 \"0.88\" 或 \"0.89-test\"）"

#. type: Bullet: '* '
#: _docs/Client_Bug_Reports.md
msgid "Android version (e.g. \"Lollipop\" or \"Android 5.0\")"
msgstr "Android 版本（例如 \"Lollipop\" 或 \"Android 5.0\"）"

#. type: Bullet: '* '
#: _docs/Client_Bug_Reports.md
msgid "Device (e.g. \"Nexus 4\")"
msgstr "设备（例如：\"Nexus 4\"）"

#. type: Bullet: '* '
#: _docs/Client_Bug_Reports.md
msgid "Steps to reproduce the bug"
msgstr "重现该错误的步骤"

#. type: Bullet: '* '
#: _docs/Client_Bug_Reports.md
msgid "A logcat from when the crash occured ([Getting logcat messages after crash](../Getting_logcat_messages_after_crash))"
msgstr "崩溃发生时的 logcat（[获取崩溃后的 logcat 信息](../Getting_logcat_messages_after_crash)）"

#. type: Bullet: '* '
#: _docs/Client_Bug_Reports.md
msgid "Whether the bug happens on the previous stable version of F-Droid"
msgstr "该错误是否发生在 F-Droid 之前的稳定版本上"

#. type: Title ###
#: _docs/Client_Bug_Reports.md
#, no-wrap
msgid "Why does an issue say \"waiting on response\" next to it?"
msgstr "为什么一个问题旁边会写着 \"waiting on response\"？"

#. type: Plain text
#: _docs/Client_Bug_Reports.md
msgid "The development team of F-Droid will do their best to reproduce and fix any bugs that are reported. Also, if feature requests are posted, then we will try to engage with the person who requested the feature to see if it is in the best interests of F-Droid as a whole."
msgstr "F-Droid 的开发团队将尽力重现和修复任何被报告的错误。同时，如果功能请求被发布，那么我们将尝试与请求该功能的人接触，看看它是否符合 F-Droid 整体的最佳利益。"

#. type: Plain text
#: _docs/Client_Bug_Reports.md
msgid "Sometimes, we are unable to reproduce a particular bug, and so require more feedback from the original bug reporter (or someone else who is also experiencing the problem). Other times, feature requests do not provide enough detail for us to respond appropriately. In these situations, we will apply the \"waiting-on-response\" label to the issue."
msgstr "有时，我们无法重现一个特定的错误，因此需要从最初的错误报告者（或其他也在经历这个问题的人）那里得到更多的反馈。其他时候，功能请求没有提供足够的细节让我们做出适当的回应。在这种情况下，我们会对该问题贴上 \"waiting-on-response\" 的标签。"

#. type: Plain text
#: _docs/Client_Bug_Reports.md
msgid "If, after a significant amount of time, there is no response, the issue will be closed, and probably labelled with a \"cant-reproduce\" label. If this happens to an issue of yours, feel free to re-open it if you come back and have more information which may help resolve the issue properly."
msgstr "如果在相当长的时间后，没有任何回应，这个问题将被关闭，并可能被贴上 \"cant-reproduce\" 的标签。如果你的问题发生了这种情况，如果你回来并且有更多的信息可以帮助正确解决这个问题，请随时重新打开它。"

#. type: Plain text
#: _docs/Client_Bug_Reports.md
msgid "Currently, there is not a set timeframe for which these issues will be closed (i.e. no response within 4 weeks), but in the future, we may decide to do this. The reason is that as the bug list grows, it becomes harder for us to manage, and harder for new contributors to decide what they could work on."
msgstr "目前，没有一个固定的时间框架，这些问题将被关闭（即 4 周内没有回应），但在未来，我们可能决定这样做。原因是，随着错误列表的增长，它对我们来说变得更难管理，对新的贡献者来说，也更难决定他们可以做什么工作。"

#. type: Title ###
#: _docs/Client_Bug_Reports.md
#, no-wrap
msgid "Where to file bug report"
msgstr "在哪里提交错误报告"

#. type: Plain text
#: _docs/Client_Bug_Reports.md
msgid "[F-Droid issue tracker](https://f-droid.org/issues/) specifically [F-Droid client section](https://gitlab.com/fdroid/fdroidclient/issues)"
msgstr "[F-Droid 问题跟踪器](https://f-droid.org/issues/)，特别是 [F-Droid 客户端部分](https://gitlab.com/fdroid/fdroidclient/issues)"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Code_of_Conduct.md
#, no-wrap
msgid "Code of Conduct"
msgstr "行为准则"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "The F-Droid Project, the producers of the F-Droid software and f-droid.org repository, have adopted a code of conduct for participants to its issue trackers, forum, IRC channels and other modes of communication within the project."
msgstr "F-Droid 项目，F-Droid 软件和 f-droid.org 存储库的制作方，已采纳以下的行为准则来对其问题跟踪器、论坛、IRC 频道和项目内使用其他交流途径的参与人员进行约束。"

#. type: Title ##
#: _docs/Code_of_Conduct.md
#, no-wrap
msgid "1. Be respectful"
msgstr "1. 要有礼貌"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "In a project the size of F-Droid, inevitably there will be people with whom you may disagree, or find it difficult to cooperate. Accept that, but even so, remain respectful. Disagreement is no excuse for poor behaviour or personal attacks, and a community in which people feel threatened is not a healthy community."
msgstr "在 F-Droid 这种规模的项目中，很难避免遇到与你意见不和，或者难以合作的人。请接受这一事实，并保持礼貌。意见不一致并不是糟糕举止或者人身攻击的借口，而且让人感觉受到威胁显然不是健康的社区氛围。"

#. type: Title ##
#: _docs/Code_of_Conduct.md
#, no-wrap
msgid "2. Assume good faith"
msgstr "2. 善意推定"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "F-Droid Contributors have many ways of reaching our common goal of distributing free software which may differ from your ways. Assume that other people are working towards this goal."
msgstr "F-Droid 贡献者有很多方法来达到我们发布自由软件的共同目标，这可能与你的方法不同。请始终假设其他人都在为这一目标而付诸努力。"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "Note that many of our Contributors are not native English speakers or may have different cultural backgrounds."
msgstr "请注意，我们的许多贡献者不是以英语为母语的人，或者可能有不同的文化背景。"

#. type: Title ##
#: _docs/Code_of_Conduct.md
#, no-wrap
msgid "3. Be collaborative"
msgstr "3. 保持合作"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "F-Droid is a large and complex project; there is always more to learn within F-Droid. It's good to ask for help when you need it. Similarly, offers for help should be seen in the context of our shared goal of improving F-Droid."
msgstr "F-Droid 是一个庞大而复杂的项目，这里永远会有需要学习的新知识。当你需要帮助的时候，主动向他人求助是一个好的选择。类似地，他人所提供的帮助应该放在改进 F-Droid 这一共同目标的上下文中理解。"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "When you make something for the benefit of the project, be willing to explain to others how it works, so that they can build on your work to make it even better."
msgstr "当你做了有益于项目的事情时，也请不要吝啬向他人解释其原理，这样他人才能够基于你的工作做出进一步的改进。"

#. type: Title ##
#: _docs/Code_of_Conduct.md
#, no-wrap
msgid "4. Try to be concise"
msgstr "4. 言简意赅"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "Keep in mind that what you write once will be read by hundreds of persons. Writing a short message means people can understand the conversation as efficiently as possible. When a long explanation is necessary, consider adding a summary."
msgstr "请时刻留心你所写的内容，它会被成百上千的人阅读。书写简短的邮件意味着人们可以尽可能高效地理解一次对话。如果必须写出详细的解释，那么请尝试增加一些总结。"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "Try to bring new arguments to a conversation so that each post adds something unique to the thread, keeping in mind that the rest of the thread still contains the other messages with arguments that have already been made."
msgstr "尽量为对话带来新的论点，使每个帖子都能为主题增加一些独特的内容，同时要记住，主题的其余部分仍然包含其他已经提出论点的信息。"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "Try to stay on topic, especially in discussions that are already fairly large."
msgstr "请尽量扣紧主题，尤其是在讨论宽泛话题的情况下更需注意。"

#. type: Title ##
#: _docs/Code_of_Conduct.md
#, no-wrap
msgid "5. Be open"
msgstr "5. 保持开放"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "Most ways of communication used within F-Droid allow for public and private communication. As per paragraph three of the social contract, you should preferably use public methods of communication for F-Droid-related messages, unless posting something sensitive."
msgstr "F-Droid 中使用的大多数通信方式都允许公共和私人通信。根据社会契约的第三段，除非发布敏感信息，否则你最好对 F-Droid 相关的信息使用公开的交流方式。"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "This applies to messages for help or F-Droid-related support, too; not only is a public support request much more likely to result in an answer to your question, it also makes sure that any inadvertent mistakes made by people answering your question will be more easily detected and corrected."
msgstr "这也适用于寻求帮助或 F-Droid 相关支持的信息；不仅公开的支持请求更有可能导致对你的问题的回答，它还能确保回答你问题的人所犯的任何不经意的错误将更容易被发现和纠正。"

#. type: Title ##
#: _docs/Code_of_Conduct.md
#, no-wrap
msgid "6. In case of problems"
msgstr "6. 遇到问题"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "While this code of conduct should be adhered to by participants, we recognize that sometimes people may have a bad day, or be unaware of some of the guidelines in this code of conduct. When that happens, you may reply to them and point out this code of conduct. Such messages may be in public or in private, whatever is most appropriate. However, regardless of whether the message is public or not, it should still adhere to the relevant parts of this code of conduct; in particular, it should not be abusive or disrespectful. Assume good faith; it is more likely that participants are unaware of their bad behaviour than that they intentionally try to degrade the quality of the discussion."
msgstr "虽然参与者们都应该遵守这一份行为准则，但我们承认人们有时候会遭遇不顺，或者对这份准则中的某一部分不清楚。如果遇到这种情况，你可以尝试回复他们并向其指出这份行为准则。只要符合时宜，这样的交流无论通过公共或者私人渠道均可。然而，不论是通过公共还是私人渠道，消息的内容应当紧扣行为准则中的相关部分。特别地，侮辱和不尊重的言辞应当杜绝。时刻假设别人心怀善意；参与者更有可能并未意识到自己的失当行为，而不是故意降低讨论质量。"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "Serious or persistent offenders will be temporarily or permanently banned from communicating through F-Droid's systems. Complaints should be made (in private) to the administrators of the F-Droid communication forum in question.  It is also possible to report issues on our [admin issue tracker](https://gitlab.com/fdroid/admin/issues/)."
msgstr "严重冒犯他人或屡教不改者，会视情况被 F-Droid 的通信系统临时或者永久封禁。相关的控诉应当（私下）发送给相应的 F-Droid 交流论坛管理员。也可以在我们的[管理问题追踪器](https://gitlab.com/fdroid/admin/issues/)上报告问题。"

#. type: Plain text
#: _docs/Code_of_Conduct.md
msgid "(_Based on the [Debian Code of Conduct](https://www.debian.org/code_of_conduct), Version 1.0 [ratified](https://www.debian.org/vote/2014/vote_002) on April 28th, 2014._)"
msgstr "（_基于[ Debian 行为准则](https://www.debian.org/code_of_conduct)，1.0 版[批准](https://www.debian.org/vote/2014/vote_002)于 2014 年 4 月 28 日。_）"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Deploying_the_Website.md
#, no-wrap
msgid "Deploying the Website"
msgstr "部署网站"

#. type: Plain text
#: _docs/Deploying_the_Website.md
msgid "The F-Droid website is built using [Jekyll](https://jekyllrb.com/) and [gitlab-ci](https://about.gitlab.com/features/gitlab-ci-cd/).  The whole website now works using a standard git [\"fork\" workflow](https://docs.gitlab.com/ce/workflow/forking_workflow.html)  that is well supported by GitLab, and well known from services like GitHub.  For all of the pages and information about apps and packages distributed by _f-droid.org_, those pages are generated using our [jekyll-fdroid](https://gitlab.com/fdroid/jekyll-fdroid) plugin, which takes the content from the [_f-droid.org_ index file](https://f-droid.org/repo/index-v1.jar)."
msgstr "F-Droid 网站是使用 [Jekyll](https://jekyllrb.com/)和 [gitlab-ci](https://about.gitlab.com/features/gitlab-ci-cd/)构建的。整个网站现在使用标准的 git[“复刻”工作流程](https://docs.gitlab.com/ce/workflow/forking_workflow.html)工作，GitLab 很好地支持该工作流程，并且由 GitHub 等服务众所周知。对于 _f-droid.org_ 分发的所有页面和有关应用和软件包的信息，这些页面是使用我们的 [jekyll-fdroid](https://gitlab.com/fdroid/jekyll-fdroid) 插件生成的，该插件从 [_f-droid.org_ 索引文件](https://f-droid.org/repo/index-v1.jar)获取内容。"

#. type: Title ###
#: _docs/Deploying_the_Website.md
#, no-wrap
msgid "Staging on development forks"
msgstr "开发复刻上的暂存"

#. type: Plain text
#: _docs/Deploying_the_Website.md
msgid "All development forks of [fdroid-website](https://gitlab.com/fdroid/fdroid-website)  automatically have a staging server setup and maintained by the _gitlab-ci_ configuration.  This automatically deploys the content of the fork's _master_ branch to [GitLab Pages](https://pages.gitlab.io/).  For example, _nicoalt_'s git fork is at <https://gitlab.com/nicoalt/fdroid-website>, and the _master_ branch from that is automatically deployed to <https://nicoalt.gitlab.io/fdroid-website>."
msgstr "[fdroid-website](https://gitlab.com/fdroid/fdroid-website) 的所有开发分支都会自动设置一个临时服务器，并由 _gitlab-ci_ 配置维护。这会自动将分支的 _master_ 分支的内容部署到 [GitLab Pages](https://pages.gitlab.io/)。例如，_nicoalt_ 的 git 分支是在 <https://gitlab.com/nicoalt/fdroid-website>，并且 _master_ 分支自动的部署到 <https://nicoalt.gitlab.io/fdroid-website>。"

#. type: Title ###
#: _docs/Deploying_the_Website.md
#, no-wrap
msgid "Staging of the official website"
msgstr "官方网站的暂存"

#. type: Plain text
#: _docs/Deploying_the_Website.md
msgid "Like with forks, the _master_ branch of the main git repo for the website, <https://gitlab.com/fdroid/fdroid-website>, is automatically deployed to <https://fdroid.gitlab.io/fdroid-website>.  That is the place to review the current state of the website before tagging a release."
msgstr "和复刻一样，网站主 git 存储库的 _master_ 分支，<https://gitlab.com/fdroid/fdroid-website>，会自动部署到 <https://fdroid.gitlab.io/fdroid-website>。这是一个在标记发布前查看网站当前状态的地方。"

#. type: Title ###
#: _docs/Deploying_the_Website.md
#, no-wrap
msgid "Deploying to https://f-droid.org"
msgstr "部署到 https://f-droid.org"

#. type: Plain text
#: _docs/Deploying_the_Website.md
msgid "When an update to the website is tested and ready to go, a release manager creates a PGP-signed release tag in the main git repo.  The deploy server monitors the main git repo for new tags.  When it sees a new tag, it first checks the PGP signature on the git tag using a manually configured GnuPG keyring that contains only the public keys of the PGP keys that are allowed to tag website releases."
msgstr "当网站的更新经过测试并准备就绪时，发布管理员会在主 git 存储库中创建一个有 PGP 签名的发布标签。部署服务器监控主 git 存储库中的新标签。当它看到一个新标签时，它首先使用手动配置的 GnuPG 密钥环检查 git 标签上的 PGP 签名，该密钥环只包含允许标记网站发布的PGP 密钥的公钥。"

#. type: Plain text
#: _docs/Deploying_the_Website.md
msgid "After the git tag is verified, the `f-droid.org` target in [.gitlab-ci.yml](https://gitlab.com/fdroid/fdroid-website/blob/master/.gitlab-ci.yml)  is run to generate the actual files for the site.  Those files are then copied into place on the _f-droid.org_ servers."
msgstr "git 标签验证后，运行 [.gitlab-ci.yml](https://gitlab.com/fdroid/fdroid-website/blob/master/.gitlab-ci.yml) 中的 `f-droid.org` 目标以生成站点的实际文件。然后将这些文件复制到 _f-droid.org_ 服务器上。"

#. type: Plain text
#: _docs/Deploying_the_Website.md
msgid "The deploy tags use a \"semantic versioning\" naming scheme:"
msgstr "部署标签使用了一个“语义版本”命名方案："

#. type: Bullet: '* '
#: _docs/Deploying_the_Website.md
msgid "_\\<major>.\\<minor>_"
msgstr "_\\<major>.\\<minor>_"

#. type: Bullet: '* '
#: _docs/Deploying_the_Website.md
msgid "_\\<minor>_ is incremented on each deployment"
msgstr "_\\<minor>_ 在每次部署时都会递增"

#. type: Bullet: '* '
#: _docs/Deploying_the_Website.md
msgid "_\\<major>_ is only incremented when there are major changes"
msgstr "_\\<major>_ 只在有重大变化时递增"

#. type: Yaml Front Matter Hash Value: title
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "FAQ - App Developers"
msgstr "常见问题 - 应用开发者"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "How do I get my app included?"
msgstr "如何让我的应用被收录？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Please check the [inclusion policy](../Inclusion_Policy) to make sure your app is suitable for inclusion in the official F-Droid repo.  The quickest way to get an app included is to make a merge request to _fdroiddata_, following [these instructions](https://gitlab.com/fdroid/fdroiddata/blob/master/CONTRIBUTING.md#merge-requests).  There's also a [Submitting to F-Droid Quick Start Guide](../Submitting_to_F-Droid_Quick_Start_Guide).  Requests for packaging can be posted in the [Requests for Packaging](https://gitlab.com/fdroid/rfp/issues)  tracker."
msgstr "请检查[收录政策](../Inclusion_Policy)，以确保你的应用适合收录在官方 F-Droid 存储库中。最快的方法是按照[这些说明](https://gitlab.com/fdroid/fdroiddata/blob/master/CONTRIBUTING.md#merge-requests)向 _fdroiddata_ 提出合并请求，使应用被收录。还有一个[提交给 F-Droid 的快速入门指南](../Submitting_to_F-Droid_Quick_Start_Guide)。打包请求可以在[打包请求](https://gitlab.com/fdroid/rfp/issues)跟踪器中发布。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "You can also [set up your own repo](#Can_I_run_my_own_app_repo)  and distribute apps yourself, outside of the F-Droid.org repo."
msgstr "你也可以[建立你自己的存储库](#Can_I_run_my_own_app_repo)并在 F-Droid.org 存储库之外自己发布应用。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "How do I change the description and add meta information like screenshots?"
msgstr "如何修改描述和添加元信息如屏幕截图？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "There are three locations we pull metadata from:"
msgstr "我们从三个地方提取元数据："

#. type: Bullet: '* '
#: _docs/FAQ_-_App_Developers.md
msgid "upstream app repo, following the [fastlane](https://github.com/fastlane/fastlane) or [Triple-T play plugin](https://github.com/Triple-T/gradle-play-publisher) structure"
msgstr "上游应用存储库，遵循 [fastlane](https://github.com/fastlane/fastlane) 或 [Triple-T play plugin](https://github.com/Triple-T/gradle-play-publisher) 结构"

#. type: Bullet: '* '
#: _docs/FAQ_-_App_Developers.md
msgid "F-Droid's own [metadata repository](https://gitlab.com/fdroid/fdroiddata/blob/master/metadata)"
msgstr "F-Droid 自己的[元数据存储库](https://gitlab.com/fdroid/fdroiddata/blob/master/metadata)"

#. type: Bullet: '* '
#: _docs/FAQ_-_App_Developers.md
msgid "F-Droid's own `repo` staging area that gets published on the public F-Droid server"
msgstr "F-Droid 自己发布在公开的 F-Droid 服务器上的 `repo` 暂存区"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "While you cannot edit the last one, merge requests to the metadata repository updating the description are quite welcome. Screenshots on the other hand are currently only used from upstream repository."
msgstr "虽然你不能编辑最后一条，但我们非常欢迎对元数据存储库的合并请求，以更新描述。另一方面，截图目前只能从上游仓库使用。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "We hope to pull in more stuff (e.g. changelogs) directly from upstream in the future, giving app developers more control of how their app is shown in F-Droid.  However, we will always keep a minimal, authoritative metadata repo of our own."
msgstr "我们希望在未来直接从上游拉入更多的东西（比如更新日志），让应用开发者对他们的应用如何在 F-Droid 中显示有更多的控制。然而，我们将始终保持我们自己的最小的、权威的元数据存储库。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "How do I license my app?"
msgstr "我如何许可我的应用？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "There are, broadly, two categories: copyleft and permissive, with the GPLv3 and the Apache 2.0 being the most popular respectively. Choose the former if you insist that derivatives have the same licence and the latter if you permit any kind of re-use."
msgstr "大体上有两类：copyleft 和宽松许可，GPLv3 和 Apache 2.0 分别是其中最流行的。如果你坚持要求衍生产品拥有相同的许可，请选择前者；如果你允许任何形式的重复使用，请选择后者。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "The overall licence must be compatible with the licence of the components. However we will grant some flexibility when it comes to assets and resources; so if you have, for example, some music under a Creative Commons non-commercial licence (i.e. a Non-Free licence), then we will accept it. The important thing is to include copyright info for assets as well as source code, in the file headers and/or the README. A copy of the licences in the root of the repo is helpful (LICENSE or COPYING files). Also make a note of the copyright and licenses pertaining to external resources or programs and if it does connect to a free service, consider using the Affero GPL. See the [Inclusion Policy](../Inclusion_Policy) for more."
msgstr "整体许可证必须与组件的许可证兼容。然而，当涉及到资产和资源时，我们会给予一定的灵活性；因此，如果你有，例如，一些使用知识共享非商业许可（即非自由许可）的音乐，那么我们会接受它。重要的是，在文件头和/或 README 中包括资产和源代码的版权信息。在存储库的根路径下有一份许可证的副本是很有意义的（LICENSE 或 COPYING 文件）。也要注意与外部资源或程序有关的版权和许可证，如果它确实连接到一个自由服务，考虑使用 Affero GPL。更多信息请参见[收录政策](../Inclusion_Policy)。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "How are donations handled?"
msgstr "捐赠是如何处理的？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "On the web site and in the F-Droid client, we provide links to donate to your project. Ideally you should have a dedicated page explaining how and why to donate your project, so we can link directly to it. Remember that most users will probably access this straight from the F-Droid client on an Android device. You should also have this information accessible from within your application."
msgstr "在网站和 F-Droid 客户端中，我们提供捐赠给你项目的链接。理想情况下，你应该有一个专门的页面，解释如何以及为什么捐赠你的项目，以便我们可以直接链接到它。请记住，大多数用户可能会直接从 Android 设备上的 F-Droid 客户端访问它。你还应该使此信息可以从应用中访问。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "We have fields in our metadata for Bitcoin, Litecoin, OpenCollective and Liberapay donations. Be sure to contact us if there is a change to any of those or if you stop accepting them; if you accept new methods you can contact us about that too."
msgstr "我们的元数据中有比特币、莱特币、Flattr 和 Liberapay 捐款的字段。如果其中任何一个有变化，或者你停止接受它们，请务必联系我们；如果你接受新的方法，你也可以联系我们。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "If your app is in our repo but we are missing any of the above information, please make sure we know about it."
msgstr "如果你的应用在我们的存储库中，但我们缺少上述任何信息，请确保我们知道它。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "Will my app be built from source?"
msgstr "我的应用将从源代码开始构建吗？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Yes. In all but a very few cases (for technical or historical reasons), we build all applications directly from the source code. This guarantees that the source code is available for the version people have installed.  While we're not suggesting that *your* source code is incomplete, not published or out of date, this happens a lot."
msgstr "是的，除了极少数情况（由于技术或历史原因），我们直接从源代码中构建所有应用。这保证了人们所安装的版本的源代码是可用的。虽然我们并不是说*你的*源代码不完整、没有发布或已经过时，但是这种情况经常发生。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "What about versioning?"
msgstr "版本控制呢？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Android is aware of two version information, the versionName (a user-facing string) and the versionCode (an integer that gets compared to determine what actually IS an update). For additional information, please see the [Android Developer Documentation](https://developer.android.com/studio/publish/versioning.html).  Please make sure not to have contradicting information (e.g. mismatching _AndroidManifest.xml_ and build.gradle)."
msgstr "Android 知道两个版本信息，versionName（面向用户的字符串）和 versionCode（一个整数，用于进行比较以确定什么是更新）。有关其他信息，请参阅 [Android 开发人员文档](https://developer.android.com/studio/publish/versioning.html)。 请确保没有相互矛盾的信息（例如，不匹配的 _AndroidManifest.xml_ 和 build.gradle）。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "We try to build only what you would consider to be releases. These should have matching version names and, more importantly, matching version codes to releases you build yourself, and be built from the same code. Obviously this task is easier if your source code history is clear - for example, if releases are tagged or otherwise labeled. If you tag release, please ensure you keep the same tagging scheme, e.g. if you start using a \"v\" prefix, keep using that."
msgstr "我们尽量只建立你认为是发布版本的东西。这些版本应该有相匹配的版本名称，更重要的是，与你自己构建的版本代码相匹配，并且是由相同的代码构建的。显然，如果你的源代码历史是清晰的，这项工作就更容易了 - 例如，如果发布版本被标记或以其他方式标记。如果你对发布版本进行了标记，请确保你保持相同的标记方案，例如，如果你开始使用 \"v\" 前缀，请一直使用。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "We try not to build from a random repository head version."
msgstr "我们尽量不从一个随机的存储库 head 版本进行构建。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "Do I need to tell you when I update?"
msgstr "我更新时需要告诉你吗？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "We will [detect](../Build_Metadata_Reference#UpdateCheckMode) new releases of your app and update our metadata accordingly, which will then cause us to check the code and add new builds to our system. Tags help greatly for adding new versions, but do remember to push the tags to the origin repo each time. Of course, if you move source code to a different website, you should tell us. There are currently some issues around detecting new versions when the _AndroidManifest.xml_ is moved so if there is some urgency, you can let us know if that happens."
msgstr "我们将[检测](../Build_Metadata_Reference#UpdateCheckMode)应用的新版本并相应地更新我们的元数据，这将使我们检查代码并向系统添加新版本。标记对添加新版本有很大帮助，但请记住每次都要将标记推送到源存储库。当然，如果你将源代码移动到其他网站，则应告诉我们。目前，当 _AndroidManifest.xml_ 移动时，检测新版本存在一些问题，因此，如果有紧急情况，你可以告知我们是否会发生这种情况。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Some app developers submit merge requests to us with all the relevant build data when they release. You don't need to do this, but it can speed things up. Historically, as a small community project, we have been slower to process updates than we'd like to be, but this situation is improving all the time."
msgstr "一些应用开发者在发布时向我们提交合并请求，并附上所有相关的构建数据。你不需要这样做，但它可以加快事情的进展。从历史上看，作为一个小型社区项目，我们处理更新的速度比我们希望的要慢，但这种情况一直在改善。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Our update checks are dumb and just scrape build files: We do not run any build code, so do not use time-based versioning or any other sort of calculating your version at build time (e.g. moving them to multiple subversions that get concatenated at build or even having complex function calls to do this)."
msgstr "我们的更新检查是愚蠢的，只是抓取构建文件：我们不运行任何构建代码，所以不使用基于时间的版本管理或任何其他类型的在构建时计算你的版本（例如，将它们移动到多个子版本，在构建时被串联起来，甚至有复杂的函数调用来做这个）。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "I've published a new release. Why is it not in the repository?"
msgstr "我已经发布了一个新版本。为什么它不在存储库中？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "When we detect a new release, it may take a few days to make it into the repository as the build process [has several steps](https://gitlab.com/fdroid/wiki/-/wikis/FAQ#how-long-does-it-take-for-my-app-to-show-up-on-website-and-client) and runs only once a day. Before the build has completed, the monitor page for your app will list it in [F-Droid Monitor - Need updating](https://monitor.f-droid.org/builds/needsupdate). As long as the text under *Versions* stating \"The current (recommended) version is *xxx* (version code *yyy*)\" shows the version numbers corresponding to your latest release, we detected it and the APK should be available soon. Just give it some time."
msgstr "当我们检测到新版本时，可能需要几天时间它才能进入存储库，因为构建过程[分几步](https://gitlab.com/fdroid/wiki/-/wikis/FAQ#how-long-does-it-take-for-my-app-to-show-up-on-website-and-client)，且每天只运行一次。在构建完成之前，您应用的监控页面将在 [F-Droid Monitor - Need updating](https://monitor.f-droid.org/builds/needsupdate) 中列出它。只要 *版本* 下注明\"当前（推荐）版本为 *xxx*（版本代码 *yyy*）\"的文本显示与你的最新版本对应的版本号，我们检测到它，APK 应该很快就会发布。只要给它一些时间。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Another reason could be that the app failed to build. You can watch the build process on [F-Droid Monitor - Running](https://monitor.f-droid.org/builds/running) and the previous cycle in [Build](https://monitor.f-droid.org/builds/build)."
msgstr "另一个原因可能是应用构建失败。你可以在 [F-Droid Monitor - Running](https://monitor.f-droid.org/builds/running) 中查看构建过程，在 [Build](https://monitor.f-droid) 中查看前一周期。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "What about signing?"
msgstr "签名呢？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Packages built by F-Droid are signed by F-Droid, so all apps in the [official F-Droid repo](https://f-droid.org/repo) are signed by F-Droid keys. F-Droid will generate a new key for each app that is included. All of the different APKs built from different versions of an app will be signed by the same app key. But do note: if an app is also distributed in an APK signed by the developer, like in the Google Play Store, then the F-Droid APK will have a different signature."
msgstr "由 F-Droid 构建的软件包由 F-Droid 签名，因此[官方 F-Droid 存储库](https://f-droid.org/repo)中的所有应用都由 F-Droid 密钥签名。F-Droid 将为每个包含的应用生成一个新的密钥。所有由不同版本的应用构建的不同 APK 将由同一个应用密钥签署。但是请注意：如果一个应用也由开发者签名的 APK 发布，比如在 Google Play 商店，那么 F-Droid APK 将有不同的签名。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "The Android OS requires that for an app to be upgraded in place, it bears the same signature as the currently installed version. This protects against inadvertent installation of an untrusted or unwanted upgrade, and also protects the app's private data, which can only be accessed by that application (or an application that has been granted root access)."
msgstr "Android 操作系统要求，一个应用要想在原地升级，它的签名必须与当前安装的版本相同。这可以防止无意中安装一个不受信任或不想要的升级，也可以保护应用的私有数据，这些数据只能由该应用（或被授予根权限的应用）访问。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "This situation presents a *minor* inconvenience to users who want to switch from a version signed by one party to a version signed by another. For example, if a user is running a version they installed via F-Droid, and later wish to switch to a version you sign and distribute yourself via another channel, they would have to take the additional step of uninstalling and reinstalling the app. On its own this is not even enough to qualify as a minor inconvenience - however, the consequences of the uninstall are that the app's private data is removed (again, this is for security) so the user will probably want to export that first, and re-import it afterwards."
msgstr "这种情况会给想要从一方签名的版本切换到另一方签名的版本的用户带来*一些*不便。例如，如果用户正在运行他们通过 F-Droid 安装的版本，并且稍后希望切换到你签名并通过另一个渠道自行分发的版本，则他们必须执行卸载并重新安装该应用的额外步骤。就其本身而言，这甚至不足以构成轻微的不便 - 但是，卸载的后果是该应用的私人数据被删除（再次，这是为了安全起见），因此用户可能希望首先导出它，然后重新导入它。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "We also support reproducible builds, so we can build a version from source and check against your official release. If they match (ignoring the signature) we can then publish your official APK with your signature used. This is a tedious task, since we have to standardize on the build parameters and tools, but it should be worth it in the long run. We also try to verify our own builds and get a lot of binary differences, see [our verification server results](https://verification.f-droid.org/).  However, things will improve over time."
msgstr "我们还支持可重复构建，因此我们可以从源代码构建版本，并对比你的官方版本进行检查。如果它们匹配（忽略签名），我们可以发布你的官方 APK，并使用你的签名。这是一项繁琐的任务，因为我们必须对构建参数和工具进行标准化，但从长远来看，这应该是值得的。我们还尝试验证我们自己的构建并得到了很多二进制差异，请参阅[我们的验证服务器结果](https://verification.f-droid.org/)。 但是，随着时间的推移，情况会有所改善。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "Can APKs signed by my key be included?"
msgstr "由我的密钥签署的 APK 能否被包括在内？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Yes, for [reproducible builds](../Reproducible_Builds) F-Droid will include your signed APKs in the official F-Droid repo after they were verified as being so. If this fails (e.g. your app can't be built in a reproducible way or when you want to distribute an app with closed-source components or API keys etc.), you can put any APK in your own \"[F-Droid binary repo](../Setup_an_F-Droid_App_Repo)\", and people can add your repo to their F-Droid client in order to get your APKs."
msgstr "是的，对于[可重复构建](../Reproducible_Builds)，在验证过它们的确可重复构建后，F-Droid会将你签过名的 APK 文件包含在官方 F-Droid 存储库中。如果失败了（比如你的应用不能以可重复的方式进行构建或者当你想要分发带闭源部件或 API 密钥等东西的应用时），你可以在你自己的\"[F-Droid 二进制文件存储库](../Setup_an_F-Droid_App_Repo)\"中放置任意 APK 文件，想获得你的 APK 的人可以将你的存储库添加到 F-Droid 客户端中。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "Are reproducible builds required?"
msgstr "可重复构建是必需的吗？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "No. But we do consider them best practice and hope you'll consider trying to make your app reproducible. See our [inclusion how-to](../Inclusion_How-To) for more information."
msgstr "不。但我们认为它们是最佳实践并希望你会考虑试着让你的应用可重构。参阅我们的[收录指南](../Inclusion_How-To)了解更多信息。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "How can I handle \"fsck error in packed object\" for my app?"
msgstr "我怎样处理我的应用出现的 \"fsck error in packed object\"？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "In order to ensure that our _buildserver_ gets the exact same commits as you put into _git_, [`git fsck`](https://git-scm.com/docs/git-fsck#_fsck_messages) is enabled by default whenever new commits are fetched.  Enabling _git fsck_ [ensures](https://web.archive.org/web/20230407012910/https://groups.google.com/g/binary-transparency/c/f-BI4o8HZW0)  that the commits [match](https://git-scm.com/docs/git-fsck#_discussion) their SHA1 checksum.  Sometimes, _git_ repos have corrupt but usable commits in them that cannot be changed since the whole history is based on the corrupt commit.  For those cases, we have the [_skipList_](https://git-scm.com/docs/git-fsck#Documentation/git-fsck.txt-fsckskipList)  functionality in [_fdroiddata_](https://gitlab.com/fdroid/fdroiddata/-/merge_requests/14014/diffs)"
msgstr "为了确保我们的 _构建服务器_ 得到和你在 _git_中的输入完全相同的提交，无论何时获取新代码提交，我们都默认启用[`git fsck`](https://git-scm.com/docs/git-fsck#_fsck_messages)。  启用 _git fsck_ [确保](https://web.archive.org/web/20230407012910/https://groups.google.com/g/binary-transparency/c/f-BI4o8HZW0)  代码提交 [匹配](https://git-scm.com/docs/git-fsck#_discussion) 它们的SHA1校验和 。  有时， _git_ 仓库中有损坏且不稳定的提交，这些提交无法被更改，因为整个历史是以损坏的提交为基础的。  对于这些情况，我们有 [_skipList_](https://git-scm.com/docs/git-fsck#Documentation/git-fsck.txt-fsckskipList)  功能，它位于 [_fdroiddata_](https://gitlab.com/fdroid/fdroiddata/-/merge_requests/14014/diffs)"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "Can I run my own F-Droid package repository?<a name=\"Can_I_run_my_own_app_repo\"></a>"
msgstr "我可以运行我自己的 F-Droid 软件包存储库吗？ <a name=\"Can_I_run_my_own_app_repo\"></a>"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Yes! You can also setup and run your own F-Droid repository of apps and other packages.  If you also release your own app via other app stores, like Google Play, we recommend that you also include those releases in your own binary repo, for among other reasons, this will provide a source of APKs for [reproducible builds](../Reproducible_Builds).  This repository can be a \"[simple binary repo](../Setup_an_F-Droid_App_Repo)\", which does not use the _fdroidserver_ build system, or you could host your own mirror of the full F-Droid.org repo."
msgstr "是的！你也可以设置并运行你自己的 F-Droid 应用和其他软件包的仓库。如果你也通过其他应用商店发布你自己的应用，比如 Google Play，我们建议你也将这些发布的应用包含在你自己的二进制版本中，因为除其他原因外，这将为[可重复构建](../Reproducible_Builds)提供一个 APK 来源。这个仓库可以是一个“[简单的二进制存储库](../Setup_an_F-Droid_App_Repo)”，它不使用 _fdroidserver_ 构建系统，你也可以托管你自己的完整 F-Droid.org 存储库镜像。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "Can I see who's installing my app?"
msgstr "我可以看到谁在安装我的应用吗？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "No. While information and metrics about installations would be interesting and useful to you, it would also require us to track and monitor our users, something we won't do. We don't have any information about what apps or versions people install, whether they keep them installed, what other software or OS version they're running, or indeed anything else, so we can't pass that information on to you."
msgstr "不行。虽然有关安装的信息和指标对你来说是有趣和有用的，但这也需要我们跟踪和监测我们的用户，而我们不会这么做的。我们没有任何关于人们安装什么应用或版本，他们是否保持安装，他们正在运行什么其他软件或操作系统版本的信息，或者其他任何信息，所以我们不能将这些信息传递给你。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "Can I track users from my app?"
msgstr "我可以从我的应用中跟踪用户吗？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "You can, but if you include any kind of tracking or analytics in your application (even sending crash reports) this must be something that the user explicitly opts **in** to - i.e. you ask them on first run, before sending anything anywhere, or there's a preference that defaults to OFF.  In all other cases, we may still include the app, but it will be flagged with our 'Tracking' Anti-Feature, which means users will only ever see the app if they choose to view such apps."
msgstr "你可以，但如果你在你的应用中包含任何类型的跟踪或分析（甚至是发送崩溃报告），这必须是用户明确选择**同意**的东西 - 即你在第一次运行时询问他们，在发送任何东西之前，或有一个偏好设置，默认为关闭。在所有其他情况下，我们仍然可能包括该应用，但它将被标记为我们的“跟踪”负面特征，这意味着用户只有在选择查看此类应用时才会看到该应用。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Additionally, note that third party analytics libraries that come in the form of proprietary software (for example, Google Analytics or Flurry)  are not acceptable here."
msgstr "此外，请注意，专有软件的第三方分析库（例如，Google Analytics 或 Flurry）在此不被接受。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "Can I include advertising?"
msgstr "我可以包括广告吗？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Yes, but:"
msgstr "可以，但是："

#. type: Bullet: '1.  '
#: _docs/FAQ_-_App_Developers.md
msgid "Many users don't like ads and find them intrusive. We flag applications that include ads, so people know what they're getting.  They can choose whether or not these apps will be shown to them."
msgstr "许多用户不喜欢广告，认为它们具有干扰性。我们对包含广告的应用进行标记，因此人们知道他们将得到什么。他们可以选择是否向他们显示这些应用。"

#. type: Bullet: '2.  '
#: _docs/FAQ_-_App_Developers.md
msgid "Frequently incorporating ads into an app is done by including proprietary software in the form of a binary library (jar file).  Obviously this would make your app ineligible for inclusion."
msgstr "将广告纳入一个应用通常是通过包括二进制库（jar 文件）形式的专有软件来完成的。显然，这将使你的应用无法被收录。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "Which libraries and dependencies are good to use?"
msgstr "哪些库和依赖可以使用？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "To be FLOSS, your entire app has to be, including dependencies. If you use Non-Free/proprietary libraries, we cannot build your app and thus it cannot be included in our mainline repository (see \"Can I run my own app repo?\" in that case). Unfortunately that rules out any libraries that are part of the \"Google repository\" from the SDK manager (e.g.  play-services, fabric, firebase) -- only the \"Android support repository\" is allowed."
msgstr "要做到 FLOSS，你的整个应用都必须是 FLOSS，包括依赖项。如果你使用非自由/专有库，我们无法构建你的应用，因此它不能包含在我们的主存储库中（在这种情况下，请参阅\"我可以运行自己的应用存储库吗？\"）。不幸的是，这排除了 SDK 管理器中属于 \"Google repository\" 的任何库（例如 play-services， fabric， firebase） - 只允许使用 \"Android support repository\"。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "For external resources, please restrain yourself to \"well known repositories\", e.g. Maven Central or OSS Sonatype (see complete listing in the \"srclib\" section of [Build Metadata Reference](../Build_Metadata_Reference)). Please note that sometimes these repos also host user-repos as well.  Those are not part of the trusted repository list."
msgstr "对于外部资源，请约束自己使用“众所周知的存储库”，例如 MavenCentral 或 OSS Sonatype（请参阅[构建元数据参考](../Build_Metadata_Reference)的 \"srclib\" 部分中的完整列表）。请注意，有时这些存储库也托管用户存储库。这些不是受信任的存储库列表的一部分。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "If you require dependencies that are not available through those repositories, please do not use binary jar files directly, but provide an easy way to build them from source: e.g. by providing a \"pre-build\" script, by including them to your actual build process (gradle task) and including the library source in your project (hard or by submodule)."
msgstr "如果你需要的依赖项不能通过这些存储库获得，请不要直接使用二进制 jar 文件，而是提供一种简单的方法从源代码构建它们：例如，提供一个 \"pre-build\" 脚本，将它们纳入你的实际构建过程（gradle 任务），或在你的项目中包括库源代码（硬包含或通过子模块）。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Replacements for known \"usual suspects\":"
msgstr "已知的 \"usual suspects\" 的替代品："

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Note, that all of following are just subjective popularity-based suggestions; there may be other FOSS projects better suited for your needs."
msgstr "请注意，以下这些只是基于流行度的主观建议；可能有其他 FOSS 项目更适合你的需要。"

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "Crittercism, BugSense — ACRA, Bugmenot, Sentry"
msgstr "Crittercism, BugSense — ACRA, Bugmenot, Sentry"

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "Google Analytics — Piwik"
msgstr "Google Analytics — Piwik"

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "Google Maps — OpenStreetMap, e.g. through [mapsforge](http://www.mapsforge.org), [osmdroid](http://osmdroid.org) or [maplibre](https://maplibre.org/)"
msgstr "Google Maps — OpenStreetMap, 比如通过 [mapsforge](http://www.mapsforge.org)、 [osmdroid](http://osmdroid.org) 或 [maplibre](https://maplibre.org/)"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "Aren't Google's SDK and libraries free, open source software?"
msgstr "Google 的 SDK 和库不是自由开源软件吗？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "While much of Android is free open source software, much of it is not at all.  The Android SDK binaries is made available by Google under a proprietary license but almost all of the source code for the Android SDK is available under the Apache license.  Google APIs, used for building apps using Google Services like Maps, GCM, etc, are free to the extent that the library comes pre-installed on the device.  Almost all of the Google libraries, like Play Services, Google Admob, and GCM, are proprietary and cannot be included in the main F-Droid repository."
msgstr "虽然 Android 大部分是自由开源软件，但也有很多部分根本不是。Android SDK 的二进制文件是由 Google 在专有许可证下提供的，但几乎所有 Android SDK 的源代码都是在 Apache 许可证下提供的。用于构建使用 Google Services（如 Maps, GCM 等）的应用的 Google API 是自由的，只要该库预装在设备上。几乎所有的 Google 库，如 Play Services, Google Admob 和GCM，都是专有的，不能包含在 F-Droid 主存储库中。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "Which build system to use?"
msgstr "使用哪种构建系统？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "We have good support for \"ant\" and \"gradle\" based builds, while \"maven\" was only used for a short period of time and for dependencies. For other build systems, you might have to provide us some detailed information on how to handle that, so we can setup the app correctly or maybe even incorporate them into our server tools."
msgstr "我们对基于 \"ant\" 和 \"gradle\" 的构建有很好的支持，而 \"maven\" 只在短时间内使用，并且用于依赖关系。对于其他构建系统，你可能需要向我们提供一些有关如何处理此问题的详细信息，以便我们可以正确设置应用，甚至可以将它们合并到我们的服务器工具中。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Special note on Cordova/Phonegap/HTML-Apps:"
msgstr "关于 Cordova/Phonegap/HTML-Apps 的特别说明："

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "We cannot build cordova apps directly, but recent version allows you to export the platform-specific code that can be build standalone using \"gradle\". So for now we require this code to be present and up-to-date in the source repository."
msgstr "我们无法直接构建 cordova 应用，但最新版本允许你导出特定于平台的代码，这些代码可以使用 \"gradle\" 独立构建。因此，现在我们要求此代码在源代码存储库中存在并且是最新的。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "How do I get my app removed?"
msgstr "如何让我的应用被删除？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "As a best practice our packaging team usually makes sure we have consent from upstream developers, before adding apps to the official f-droid.org repository.  Should you for whatever reason want us to remove your app from the official f-droid.org repository, please ask our packaging team to do so.  The probably fastest way to get your request processed is to open an issue on our data [issue tracker](https://gitlab.com/fdroid/fdroiddata/-/issues).  You can also get in contact with our team on our [other communication channels]({{ site.baseurl }}/about/#contact)."
msgstr "作为最佳实践，我们的打包团队在将应用添加到官方的 f-droid.org 存储库之前，通常会确保已经获得上游开发人员的同意。 如果您出于任何原因希望我们从官方的 f-droid.org 存储库中删除您的应用，请直接向我们的打包团队提出要求。让您的请求得到最快处理的方式可能是在我们的 data [问题跟踪器](https://gitlab.com/fdroid/fdroiddata/-/issues)上新开一个问题。您也可以通过我们的[其他沟通渠道]({{ site.baseurl }}/about/#contact)与我们的团队取得联系。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "How could my app be removed?"
msgstr "什么情况下我的应用会被删除？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Any changes to your app that result in a violation of our [inclusion policy](../Inclusion_Policy) will get your app removed or archived.  E.g. you could use a license for future versions that prohibits anyone from distributing it, or you could introduce proprietary binaries into your source code. Both of those things will ensure that those future versions do not appear in our repository, but you would have to go a lot further (e.g.  serious security flaws in the previous versions, combined with unpublished source code and an uncooperative attitude) for us to actually remove the whole application."
msgstr "任何违反我们[收录政策](../Inclusion_Policy)的应用更改将使你的应用被删除或存档。 例如，你可以为未来的版本使用一个许可证，禁止任何人分发它，或者你可以在你的源代码中引入专有的二进制文件。这两件事都能确保那些未来的版本不会出现在我们的存储库中，但这离我们把你的应用从存储库中删除还远不够（如以前的版本有严重的安全缺陷，再加上未公布的源代码和不合作的态度）。"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "In some rare cases we also have to comply with [take-down requests](../Take-Down_Requests) in accordance with our other policies.  Generally speaking we recommend steering clear of trademark and copyright infringements."
msgstr "在一些罕见的情况下，我们还必须依照我们的其他政策遵守[下架请求](../Take-Down_Requests)。 一般来说，我们建议避开商标和版权侵权。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "I see apps on the big stores that are blatant copies. Wouldn't it be better if I made my app closed source?"
msgstr "我看到一些大商店里的应用是公然的复制。我将我的应用闭源更好不是吗？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Firstly, it depends on the license: unless you apply a copyleft licence like the GPLv3, other people can do whatever they like with the source code (though they may be required to rebrand it). If your app is GPLv3 and no source code is published by the plagiarists; their versions obviously include proprietary ad libraries, or any sign of your authorship was simply removed, those copies are breaking the law and you should [demand Google](https://www.google.com/android_dmca.html) to remove them from their app store. You may threaten them with DMCA or other local laws if you wish. If all else fails, before going proprietary, balance the loss and confusion to the users and maintainers of the free app against the feeling of justice that you'll get by seeing those illegal clones lose the few cents in ad revenue that they would have got. In the longer run we want to improve donations via F-Droid so you can be supported financially and we already support Bitcoin, Litecoin, OpenCollective and Liberapay as well as any other payment method that you can suggest via a website."
msgstr "首先，这取决于许可证：除非你应用了像 GPLv3 这样的自由复制许可证，否则其他人可以随意使用源代码（尽管他们可能被要求重新命名）。如果你的应用是 GPLv3，而剽窃者没有公布源代码；他们的版本显然包括专有的广告库，或者任何你的作者的标志被简单地删除，这些副本是违法的，你应该[要求谷歌](https://www.google.com/android_dmca.html)从他们的应用商店删除它们。如果你愿意，你可以用 DMCA 或其他当地法律威胁他们。如果所有其他方法都失败了，在进行专有化之前，请平衡一下自由应用的用户和维护者的损失和混乱与你看到那些非法克隆的人失去他们本来可以得到的几美分广告收入而获得的正义感。从长远来看，我们希望改进通过 F-Droid 捐赠，这样你就可以得到经济上的支持，我们已经支持比特币、莱特币、OpenCollective 和 Liberapay 以及其他任何你可以通过网站建议的支付方式。"

#. type: Title ###
#: _docs/FAQ_-_App_Developers.md
#, no-wrap
msgid "How is the F-Droid client git workflow structured?"
msgstr "F-Droid 客户端的 git 工作流是如何构成的？"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "`git` allows tons of flexibility in the workflow of how people work together, so it is important to clearly define the workflow of this community so that people know what to expect. The `git` workflow the F-Droid client app uses is relatively simple and based on the very common workflow established by github.com, gitlab.com and others like it.  Here's a break down of what that means:"
msgstr "`git` 允许人们在工作流程上有很大的灵活性，所以明确定义这个社区的工作流程是很重要的，这样人们就知道该期待什么。F-Droid 客户端应用使用的 `git` 工作流程相对简单，基于由 github.com、gitlab.com 和其他类似网站建立的非常常见的工作流程。这是对这一工作流程的详细解释："

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "all development work happens in the `master` branch"
msgstr "所有的开发工作都在 `master` 分支中进行"

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "code is submitted for inclusion via Merge Requests (MRs)"
msgstr "代码通过合并请求 (MR) 提交"

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "releases happen in a short-lived, stable release branch per major release (e.g. `stable-0.95`, `stable-0.96`, `stable-0.97`, etc.)"
msgstr "发布在每个主要版本的短期稳定发布分支（例如，`stable-0.95`，`stable-0.96`，`stable-0.97`，等等）中进行"

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "the work that goes into the stable release branch must be tightly focused and as small as possible to keep the release cycle as short as possible"
msgstr "进入稳定发布分支的工作必须十分集中，并尽可能小，以保持尽可能短的发布周期"

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "the `master` branch must never be merged with any stable release branch"
msgstr "`master` 分支绝不能与任何稳定发布分支合并"

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "stable release branches must never be merged with the `master` branch"
msgstr "稳定发布分支决不能与 `master` 分支合并"

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "Merge Requests for a stable release branch can include commits from `master`"
msgstr "稳定发布分支的合并请求可以包括来自 `master` 的提交"

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "not all commits that are included in a stable release branch are required to be in `master`"
msgstr "并非所有包含在稳定发布分支中的提交都需要包含在 `master` 中"

#. type: Bullet: '-   '
#: _docs/FAQ_-_App_Developers.md
msgid "what you do in your git forks is up to you, but the final merge request should not include merge commits"
msgstr "你在你的 git 复刻中做什么由你决定，但最终的合并请求不应该包含合并提交"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "Here is the discussion from the meeting where we nailed this down: <https://web.archive.org/web/20171220230923/https://botbot.me/freenode/fdroid-dev/2015-08-04/?msg=46407489&page=1>"
msgstr "以下是我们在会议上的讨论，在讨论中我们把这个问题确定下来：<https://web.archive.org/web/20171220230923/https://botbot.me/freenode/fdroid-dev/2015-08-04/?msg=46407489&page=1>"

#. type: Plain text
#: _docs/FAQ_-_App_Developers.md
msgid "This article includes a good discussion of \"feature branches\" versus \"release branches\" and short-lived vs. long-lived branches: <http://blogs.atlassian.com/2013/11/the-essence-of-branch-based-workflows/>"
msgstr "这篇文章包括对\"特性分支\"与\"发布分支\"以及短期与长期分支的良好讨论：<http://blogs.atlassian.com/2013/11/the-essence-of-branch-based-workflows/>"

#. type: Yaml Front Matter Hash Value: title
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "FAQ - Client"
msgstr "FAQ - 客户端"

#. type: Title ###
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "The client shows a newer version. Why didn't it notify me of an update?"
msgstr "客户端显示有新版本了。为什么之前没通知我这个更新？"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Assuming you have update notifications switched on (in Preferences) this probably means the newer version is not *recommended* for your device."
msgstr "如果你已经在设置中开启更新通知，这可能意味着我们*不建议*在你的设备上使用这个新版本。"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "In the list of versions in the client, the *recommended version* is identified by a '\\*'. This is the version which is closest to the *current version* &ndash; the version that the developers of the application publish to Google Play or their website, or tag in their source code repository. There may be newer versions than this in the list &ndash; they could be, for example, test or beta versions. You can install these, but update notifications are not shown because the Version Code (Android's scheme for version numbering) is greater than the _CurrentVersionCode_."
msgstr "在客户端的版本列表中，*推荐的版本*是由 '\\*' 标识的。这是最接近*当前版本* &ndash; 应用开发人员发布到 Google Play 或他们的网站，或在他们的源代码库中标记的版本 &ndash; 的版本。列表中可能有比这更新的版本 &ndash; 它们可能是，例如，测试或 beta 版本。你可以安装这些版本，但不会显示更新通知，因为版本代码（Android 的版本编号方案）大于 _CurrentVersionCode_。"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "For third-party repositories, it may also be the case that the maintainers neglected to update the current version in their repository's metadata."
msgstr "对于第三方存储库，也有可能是维护者忘记更新他们存储库元数据中的当前版本。"

#. type: Title ###
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "Why does F-Droid need these permissions?"
msgstr "为什么 F-Droid 需要这些权限？"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "F-Droid is an app store, that means it is already entirely responsible for finding, downloading and installing apps. That means it already has all permissions, in effect. For example, a malicious app store with no permissions could modify every app as it installs it, granting itself all permissions via those modified apps. This is why it is so important that an app store is Free Software and publicly audited. F-Droid is both. That said, F-Droid declares the permissions it actually uses so that it is honest and transparent about what it is doing."
msgstr "F-Droid 是一个应用商店，这意味着它已经完全负责寻找、下载和安装应用。这意味着它实际上已经拥有了所有权限。例如，一个没有权限的恶意应用商店可以在安装时修改每一个应用，并通过这些修改的应用授予自己所有的权限。一个应用商店应该是自由软件并被公开审核的重要性正在于此。F-Droid 满足这两个条件。也就是说，F-Droid 声明了它实际使用的权限，因此它对自己正在做的事情是诚实和透明的。"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Here are the permissions that F-Droid current uses:"
msgstr "以下是 F-Droid 当前使用的权限："

#. type: Plain text
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "<dl><dt>\n"
msgstr "<dl><dt>\n"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Download apps from f-droid.org and other app repositories:"
msgstr "从 f-droid.org 和其他应用存储库下载应用："

#. type: Plain text
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#INTERNET\" target=\"_blank\">android.permission.INTERNET</a></tt></dd><dt>\n"
msgstr "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#INTERNET\" target=\"_blank\">android.permission.INTERNET</a></tt></dd><dt>\n"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Start itself automatically at boot time so that it can receive updates:"
msgstr "在开机时自动启动，以便它能接收更新："

#. type: Plain text
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#RECEIVE_BOOT_COMPLETED\" target=\"_blank\">android.permission.RECEIVE_BOOT_COMPLETED</a></tt></dd><dt>\n"
msgstr "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#RECEIVE_BOOT_COMPLETED\" target=\"_blank\">android.permission.RECEIVE_BOOT_COMPLETED</a></tt></dd><dt>\n"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "For the nearby service to get current Wi-Fi status, and prompt the user to enable Wi-Fi when swapping:"
msgstr "用于让 nearby 服务获得当前的 Wi-Fi 状态，并提示用户在交换应用时开启 Wi-Fi："

#. type: Plain text
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid ""
"</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#ACCESS_COARSE_LOCATION\" target=\"_blank\">android.permission.ACCESS_COARSE_LOCATION</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#ACCESS_NETWORK_STATE\" target=\"_blank\">android.permission.ACCESS_NETWORK_STATE</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#CHANGE_NETWORK_STATE\" target=\"_blank\">android.permission.CHANGE_NETWORK_STATE</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#CHANGE_WIFI_MULTICAST_STATE\" target=\"_blank\">android.permission.CHANGE_WIFI_MULTICAST_STATE</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#CHANGE_WIFI_STATE\" target=\"_blank\">android.permission.CHANGE_WIFI_STATE</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#ACCESS_WIFI_STATE\" target=\"_blank\">android.permission.ACCESS_WIFI_STATE</a></tt></dd><dt>\n"
msgstr ""
"</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#ACCESS_COARSE_LOCATION\" target=\"_blank\">android.permission.ACCESS_COARSE_LOCATION</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#ACCESS_NETWORK_STATE\" target=\"_blank\">android.permission.ACCESS_NETWORK_STATE</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#CHANGE_NETWORK_STATE\" target=\"_blank\">android.permission.CHANGE_NETWORK_STATE</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#CHANGE_WIFI_MULTICAST_STATE\" target=\"_blank\">android.permission.CHANGE_WIFI_MULTICAST_STATE</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#CHANGE_WIFI_STATE\" target=\"_blank\">android.permission.CHANGE_WIFI_STATE</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#ACCESS_WIFI_STATE\" target=\"_blank\">android.permission.ACCESS_WIFI_STATE</a></tt></dd><dt>\n"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "For the nearby service to see the Bluetooth state, and prompt the user to enable Bluetooth when swapping:"
msgstr "用于让 nearby 服务查看蓝牙状态，并提示用户在交换应用时启用蓝牙："

#. type: Plain text
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid ""
"</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#BLUETOOTH\" target=\"_blank\">android.permission.BLUETOOTH</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#BLUETOOTH_ADMIN\" target=\"_blank\">android.permission.BLUETOOTH_ADMIN</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#BLUETOOTH_CONNECT\" target=\"_blank\">android.permission.BLUETOOTH_CONNECT</a></tt></dd><dt>\n"
msgstr ""
"</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#BLUETOOTH\" target=\"_blank\">android.permission.BLUETOOTH</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#BLUETOOTH_ADMIN\" target=\"_blank\">android.permission.BLUETOOTH_ADMIN</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#BLUETOOTH_CONNECT\" target=\"_blank\">android.permission.BLUETOOTH_CONNECT</a></tt></dd><dt>\n"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Exchange repository information via the Repo Details screen, and to optionally assist nearby swap connection:"
msgstr "通过存储库详情屏幕交换存储库信息，并可选地辅助 nearby 交换连接："

#. type: Plain text
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#NFC\" target=\"_blank\">android.permission.NFC</a></tt></dd><dt>\n"
msgstr "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#NFC\" target=\"_blank\">android.permission.NFC</a></tt></dd><dt>\n"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Allow the user to enable Wi-Fi AP Hotspot mode from the nearby service:"
msgstr "允许用户从 nearby 服务开启 Wi-Fi AP 热点模式："

#. type: Plain text
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#WRITE_SETTINGS\" target=\"_blank\">android.permission.WRITE_SETTINGS</a></tt></dd><dt>\n"
msgstr "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#WRITE_SETTINGS\" target=\"_blank\">android.permission.WRITE_SETTINGS</a></tt></dd><dt>\n"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Allows the nearby service to stay running as long as the user leaves it running:"
msgstr "允许 nearby 服务保持运行，只要用户使其保持运行状态："

#. type: Plain text
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#WAKE_LOCK\" target=\"_blank\">android.permission.WAKE_LOCK</a></tt></dd><dt>\n"
msgstr "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#WAKE_LOCK\" target=\"_blank\">android.permission.WAKE_LOCK</a></tt></dd><dt>\n"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Find and use compatible repositories and mirrors on external storage:"
msgstr "发现并使用外部存储中兼容的存储库和镜像："

#. type: Plain text
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid ""
"</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#READ_EXTERNAL_STORAGE\" target=\"_blank\">android.permission.READ_EXTERNAL_STORAGE</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#MANAGE_EXTERNAL_STORAGE\" target=\"_blank\">android.permission.MANAGE_EXTERNAL_STORAGE</a></tt></dd><dt>\n"
msgstr ""
"</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#READ_EXTERNAL_STORAGE\" target=\"_blank\">android.permission.READ_EXTERNAL_STORAGE</a></tt><br/>\n"
"<tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#MANAGE_EXTERNAL_STORAGE\" target=\"_blank\">android.permission.MANAGE_EXTERNAL_STORAGE</a></tt></dd><dt>\n"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Detect when a USB thumb drive has been inserted, so it can be scanned to find compatible repositories and mirrors:"
msgstr "检测何时插入了 USB 盘以对其进行扫描来发现兼容的存储库和镜像："

#. type: Plain text
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#USB_PERMISSION\" target=\"_blank\">android.permission.USB_PERMISSION</a></tt></dd><dt>\n"
msgstr "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#USB_PERMISSION\" target=\"_blank\">android.permission.USB_PERMISSION</a></tt></dd><dt>\n"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Temporarily store and use downloaded files on external storage:"
msgstr "临时保存并使用外部存储上的已下载文件："

#. type: Plain text
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#WRITE_EXTERNAL_STORAGE\" target=\"_blank\">android.permission.WRITE_EXTERNAL_STORAGE</a></tt></dd></dl>\n"
msgstr "</dt><dd><tt><a href=\"https://developer.android.com/reference/android/Manifest.permission.html#WRITE_EXTERNAL_STORAGE\" target=\"_blank\">android.permission.WRITE_EXTERNAL_STORAGE</a></tt></dd></dl>\n"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "F-Droid [Privileged Extension](https://gitlab.com/fdroid/privileged-extension/) is also relevant here, although it falls outside of the Android system of declaring permissions. Privileged Extension is installed with [`priv-app`](https://source.android.com/docs/core/permissions/perms-allowlist) permissions, which gives F-Droid system-level access privileges to Android. The use of Privileged Extension improves security by allowing automatic app updates as well as letting the user leave the \"Unknown Sources\" setting off. Privileged Extension is designed on the principals of \"least privilege\", so that elevated powers are only granted where they are absolutely needed, and those powers are limited as much as possible.  In order to make it possible outside reviewers to confirm that, we have made Privileged Extension as simple and small as possible."
msgstr "F-Droid [特权扩展](https://gitlab.com/fdroid/privileged-extension/) 在此处同样相关，尽管它不属于 Android 的权限声明体系。安装特权扩展授予其 [`priv-app`](https://source.android.com/docs/core/permissions/perms-allowlist)权限 , 这给予 F-Droid 对 Android 的系统级访问特权。 特权扩展对安全性的改进是通过允许自动应用更新，以及确保用户手机上 \"未知来源\" 设置处于关闭状态实现的。特权扩展按照“最小特权”原则进行设计，只有在绝对需要时才授予提升的权限，而且这些权限尽可能受到限制。  为了使外部审阅者有可能确认这一点，我们已经让特权扩展尽可能地小巧和简单。"

#. type: Title ###
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "What is expert mode?"
msgstr "什么是专家模式？"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Enabling the 'Expert Mode' setting in Preferences will make the client display additional information which is probably not useful to most people. This includes things like package IDs and signature hashes. Some extra configuration options also appear."
msgstr "在\"设置\"中启用\"专家模式\"设置将使客户端显示对大多数人而言可能无用的额外信息。这包括 package ID 和签名哈希等内容。一些额外的配置选项也会出现。"

#. type: Title ###
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "I can download apps, but then \"Install\" is disabled. Why?"
msgstr "我可以下载应用，但随后\"安装\"被禁用。为什么？"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Some users have apps such as Twilight installed, which draw directly to the screen regardless of what app is shown. For security reasons, Android wisely doesn't allow apps to be installed when such apps are running. If it did, then people could create apps that draw a fake \"Install\" button over the top of the real one, resulting in users installing unwanted apps. The solution is to disable such apps before installing via F-Droid."
msgstr "某些用户安装了 Twilight 等应用，这些应用可以直接在其他应用上方绘制图形。出于安全原因，Android 明智地不允许在此类应用运行时安装应用。若非如此，此类应用可能会绘制一个假的\"安装\"按钮来覆盖真正的按钮，导致用户安装不需要的应用。在通过 F-Droid 安装应用之前禁用此类应用即可解决问题。"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "See [Issue 151](https://gitlab.com/fdroid/fdroidclient/issues/151) or [this Google+ comment](https://plus.google.com/116713673773180618201/posts/UvW3tgSgdUp)  for more details."
msgstr "有关更多详细信息，请参阅 [Issue 151](https://gitlab.com/fdroid/fdroidclient/issues/151) 或 [此 Google+ 评论](https://plus.google.com/116713673773180618201/posts/UvW3tgSgdUp)。"

#. type: Title ###
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "Why doesn't the client show the number of installs/downloads for each app?"
msgstr "为什么客户端不显示每个应用的安装/下载次数？"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "To show how many people had installed an app, we would have to be spying on them - in other words, keeping track of what apps people install and uninstall on their devices, and sending that data back to ourselves. We don't do that, and we're not going to do it."
msgstr "为了显示有多少人安装了一个应用，我们必须对用户进行监视——换句话说，跟踪人们在自己的设备上安装和卸载应用的行为并获取相关数据。我们现在不这样做，将来也不会这样做。"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Theoretically, the number of downloads is available via our web server logs. However, this would be a meaningless figure because:"
msgstr "理论上，下载次数可以通过我们的 Web 服务器日志获得。然而，这将是一个毫无意义的数字，因为："

#. type: Bullet: '1.  '
#: _docs/FAQ_-_Client.md
msgid "I might download an app, and decide not to install it"
msgstr "我可能会下载一个应用，然后决定不安装它"

#. type: Bullet: '2.  '
#: _docs/FAQ_-_Client.md
msgid "I might download and install it, then uninstall it immediately because I don't like it"
msgstr "我可能会下载并安装一个应用，然后立即卸载掉，因为我并不喜欢它"

#. type: Bullet: '3.  '
#: _docs/FAQ_-_Client.md
msgid "I might download my app 1,000,000 times to make it look popular"
msgstr "我可能会下载一百万次我的应用，让它看起来广受欢迎"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Additionally, on a technical level, we don't even track that information. While the back-end server does track hits on each APK, these are actually served up by multiple front-end servers that cache.  This means one counted hit could represent one download, or a million.  Theoretically we could resolve this, but we are not interested enough to do so."
msgstr "此外，在技术层面上，我们甚至不跟踪这些信息。虽然后端服务器确实跟踪每个 APK 的点击量，但这些实际上是由多个前端服务器提供的缓存。 这意味着一次点击可能代表一次下载，或百万次。 理论上我们可以解决这个问题，但我们对此没有足够的兴趣。"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Finally, even assuming any of this information were available, what does it actually mean? Are you going to use an app just because lots of others do, or ignore it because few others have discovered it yet? Is this a sensible way to decide whether something is useful to you or not? Perhaps you should just try it."
msgstr "最后，即使假设有任何这些信息，它实际上意味着什么？你要使用一个应用，只是因为有很多人这样做，或者忽略它，因为很少有人发现它？这是决定一个东西对你是否有用的明智方法吗？也许你应该尝试一下。"

#. type: Title ###
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "How can I send or setup the F-Droid app using NFC or Android Beam?"
msgstr "如何使用 NFC 或 Android Beam 发送或设置 F-Droid 应用？"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "Starting with v1.20, the F-Droid client does not support these features anymore as the underlying code has been removed from the Android 14 SDK after being deprecated since Android 10. More info [here](https://www.xda-developers.com/android-beam-permanent-removal-android-14/)."
msgstr "自 v1.20 版本起，F-Droid 客户端不再支持这些功能，因相关底层代码自 Android 10 起已被废弃，而 Android 14 SDK 则已经删除了这些代码。更多信息见 [此处](https://www.xda-developers.com/android-beam-permanent-removal-android-14/)。"

#. type: Title ###
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "How can I send apps via Bluetooth or WiFi?"
msgstr "如何通过蓝牙或 Wi-Fi 发送应用？"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "This is done using the 'Nearby' Tab in F-Droid (previously called 'Swap').  See [here](../../tutorials/swap) for a walkthrough."
msgstr "这是使用 F-Droid 中的\"附近\" 选项卡（以前称为\"交换\"）完成的。 请参阅[此处](../../tutorials/swap)进行演练。"

#. type: Title ###
#: _docs/FAQ_-_Client.md
#, no-wrap
msgid "What is the security model that F-Droid uses?"
msgstr "F-Droid 使用的安全模式是什么？"

#. type: Plain text
#: _docs/FAQ_-_Client.md
msgid "The F-Droid security model started out with HTTPS connections and signed metadata. It has been evolving, inspired by [Debian](https://wiki.debian.org/SecureApt), [The Update Framework](https://github.com/theupdateframework/tuf/blob/develop/docs/tuf-spec.txt), and other things. You can read about details here: [Security Model](../Security_Model)."
msgstr "F-Droid 安全模型从 HTTPS 连接和签名元数据开始。它一直在发展，灵感来自 [Debian](https://wiki.debian.org/SecureApt)，[更新框架](https://github.com/theupdateframework/tuf/blob/develop/docs/tuf-spec.txt) 等。你可以在此处阅读详细信息：[安全模型](../Security_Model)。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/FAQ_-_General.md
#, no-wrap
msgid "FAQ - General"
msgstr "常见问题 - 常规"

#. type: Title ###
#: _docs/FAQ_-_General.md
#, no-wrap
msgid "Where should I ask questions?"
msgstr "我应该在哪里问问题？"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "We welcome all questions and have a few places to reach out to the F-Droid community:"
msgstr "我们欢迎所有问题，以下是联系 F-Droid 社区的途径："

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "using the [forum or chat rooms](https://f-droid.org/about/#contact)"
msgstr "使用[论坛或聊天室](https://f-droid.org/about/#contact)"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "[issue tracker](https://gitlab.com/fdroid/fdroidclient/issues) for the Android app itself (aka client)"
msgstr "适用于 Android 应用本身（又名客户端）的[问题跟踪器](https://gitlab.com/fdroid/fdroidclient/issues)"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "[issue tracker](https://gitlab.com/fdroid/fdroidserver/issues) for the developer tools (aka server)"
msgstr "适用于开发者工具（又名服务器）的[问题跟踪器](https://gitlab.com/fdroid/fdroidserver/issues)"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "[issue tracker](https://gitlab.com/fdroid/rfp/issues) for packaging new apps"
msgstr "适用于新应用打包的[问题跟踪器](https://gitlab.com/fdroid/rfp/issues)"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "[issue tracker](https://gitlab.com/fdroid/fdroiddata/issues) for issues with published apps"
msgstr "针对已发布的应用的[问题跟踪器](https://gitlab.com/fdroid/fdroiddata/issues)"

#. type: Title ###
#: _docs/FAQ_-_General.md
#, no-wrap
msgid "Why isn't my favourite app included?"
msgstr "为什么我喜欢的应用没有被收录？"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "Some common reasons:"
msgstr "一些常见的原因："

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "It's not [Free Software](https://www.gnu.org/philosophy/free-sw.html);"
msgstr "它不是 [自由软件](https://www.gnu.org/philosophy/free-sw.html);"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "We're trying to include it, but there's a problem with it that we're trying to resolve. Check the open [merge requests](https://gitlab.com/fdroid/fdroiddata/-/merge_requests);"
msgstr "我们正试图将其收录，但是遇到了问题，我们正在努力解决。请查看未关闭的[合并请求](https://gitlab.com/fdroid/fdroiddata/-/merge_requests);"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "It's on our radar, but we haven't got to it yet. Search the [issues](https://gitlab.com/fdroid/rfp/-/issues);"
msgstr "它已进入我们的视线，但我们还没有行动。搜索[问题](https://gitlab.com/fdroid/rfp/-/issues);"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "We don't know about it. See the [Inclusion Policy](../Inclusion_Policy)."
msgstr "我们还不知道有这个应用。请参阅 [收录政策](../Inclusion_Policy)。"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "Otherwise if you think that an app respects the Inclusion Policy and actually nobody is talking about it in the forum, you can try to be the first to do it: See the [Inclusion How-To](../Inclusion_How-To)."
msgstr "如果你认为某个应用符合收录政策但又不符合以上情况，并且确实还没有人在论坛中谈论它，则可以尝试成为首位提议将其收录的人：请参阅[收录指南](../Inclusion_How-To)。"

#. type: Title ###
#: _docs/FAQ_-_General.md
#, no-wrap
msgid "How can I keep track of new apps?"
msgstr "我怎样才能及时获取新应用的消息？"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "There are several ways of keeping up with new apps that are added:"
msgstr "有几种方法可以了解新添加的应用的消息："

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "The website sidebar shows the three most recent updates, as well as the three most recent additions"
msgstr "网站侧边栏显示最新的三个应用更新，以及最新添加的三款应用"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "In the client, the \"Latest\" tab shows all the apps updated during the last two months that have good [descriptions and graphics](../All_About_Descriptions_Graphics_and_Screenshots)"
msgstr "在客户端中，“最新”选项卡显示所有过去两个月内更新过的拥有良好[描述和图像](../All_About_Descriptions_Graphics_and_Screenshots)的应用"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "If you don't mind a detailed and potentially noisy stream of information that also includes updates and other changes, you could subscribe to [this feed](https://gitlab.com/fdroid/fdroiddata/commits/master.atom)"
msgstr "如果你不介意包含更新和其他更改信息的详细但可能嘈杂的信息流，则可以订阅[此源](https://gitlab.com/fdroid/fdroiddata/commits/master.atom)"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "In TWIF posts we talk about new apps and other news, you could subscribe to [this feed](https://f-droid.org/feed.xml)."
msgstr "在每周新闻中，我们谈论新应用和其他新闻，你可以订阅[这个源](https://f-droid.org/feed.xml)。"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "We don't yet have a dedicated and user-friendly feed you can subscribe to for new additions, but we welcome contributions to make this work better."
msgstr "我们还没有一个专门的、用户友好的源以供订阅新的内容，但我们欢迎大家投稿，使之更好。"

#. type: Title ###
#: _docs/FAQ_-_General.md
#, no-wrap
msgid "Is your building and signing process secure?"
msgstr "你的构建和签名过程是否安全？"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "The building and signing is done in an secure **offline** (i.e.  inaccessible from the internet) environment. Every package is built in a completely fresh isolated virtual machine environment which is discarded once the build is complete. Additionally, that build environment is completely separated from the signing environment."
msgstr "构建和签名是在安全的 **离线**（即无法从互联网访问的）环境中完成的。每个包都在一个全新的隔离虚拟机环境中构建，一旦构建完成该环境就会被废弃。此外，该构建环境与签名环境完全分离。"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "So yes, as far as we know, it's secure. However, as with everything else on the site, bear in mind this is a small community project which you are warned to use at your own risk. As with apps you get from elsewhere, including Google Play, you should exercise caution regarding the permissions they request when you install them. If in doubt, don't install."
msgstr "因此，就我们所知，它是安全的。但是，与网站上的其他所有内容一样，请记住这是一个小型社区项目，使用时要自担风险。与你从其他地方（包括 Google Play）所获得的应用一样，安装时应谨慎对待它们请求的权限。如果有疑问，请不要安装。"

#. type: Title ###
#: _docs/FAQ_-_General.md
#, no-wrap
msgid "Why isn't F-Droid on Google Play?"
msgstr "为什么 F-Droid 未在 Google Play 上架 ？"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "Pick your favourite reason (both are true and valid):"
msgstr "选择你最喜欢的理由（两者都是真实有效的）:"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "We don't use proprietary software: Google Play is proprietary software;"
msgstr "我们不使用专有软件，而 Google Play 属于专有软件;"

#. type: Bullet: '-   '
#: _docs/FAQ_-_General.md
msgid "F-Droid, as an app that \"competes\" with Google Play, is against their [Terms of Service (paragraph 4.5)](https://play.google.com/about/developer-distribution-agreement.html)."
msgstr "F-Droid 作为与 Google Play “竞争”的应用，违反了他们的 [服务条款(第 4.5 款)](https://play.google.com/about/developer-distribution-agreement.html)。"

#. type: Title ###
#: _docs/FAQ_-_General.md
#, no-wrap
msgid "How can I report bugs or request features?"
msgstr "如何报告 Bug 或提议添加功能？"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "Use the [issue tracker](https://gitlab.com/fdroid/fdroidclient/issues)  or email <team@f-droid.org>. You can also discuss them in the [forum or chat rooms](https://f-droid.org/about/#contact)."
msgstr "使用 [问题跟踪器](https://gitlab.com/fdroid/fdroidclient/issues) 或发送电子邮件至 <team@f-droid.org>。你也可以在[论坛或聊天室](https://f-droid.org/about/#contact)讨论它们。"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "If you do not already have an account, or do not want to create one, you can use our reusable account.  The issue tracker works better if reporters use an account that will receive notifications.  Issue reports are usually a conversation, not just a single report."
msgstr "如果你还没有账户，或者不想创建账户，你可以使用我们的可复用账户。 如果报告者使用一个能收到通知的账户，问题追踪器的效果会更好。 问题报告通常是交流和讨论，而非一次单向的报告。"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "That said, the account username is _fdroid-anyone_ and the password is _fdroid does not track_."
msgstr "可复用账户的用户名是 _fdroid-anyone_，密码是 _fdroid does not track_。"

#. type: Plain text
#: _docs/FAQ_-_General.md
msgid "Please note that we will have to remove this account, in case it gets abused."
msgstr "请注意，如账户被滥用，我们将不得不删除它。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Feeds.md
#, no-wrap
msgid "Feeds"
msgstr "源"

#. type: Title ###
#: _docs/Feeds.md
#, no-wrap
msgid "News"
msgstr "新闻"

#. type: Plain text
#: _docs/Feeds.md
msgid "Sometimes there is a newsworthy item (submissions welcome!) or client release and details get posted on the blog: <https://f-droid.org/news/>."
msgstr "我们的博客<https://f-droid.org/news/>上有时会发布具有新闻价值的项目（欢迎提交！）或客户端发行版本及其详细信息。"

#. type: Title ###
#: _docs/Feeds.md
#, no-wrap
msgid "Builds"
msgstr "构建"

#. type: Plain text
#: _docs/Feeds.md
msgid "Find out the build status of the APKs on: <https://monitor.f-droid.org/builds>."
msgstr "了解 APK 的构建状态：<https://monitor.f-droid.org/builds>。"

#. type: Title ###
#: _docs/Feeds.md _docs/Repository_Style_Guide.md
#, no-wrap
msgid "Source Code"
msgstr "源代码"

#. type: Plain text
#: _docs/Feeds.md
msgid "If you have an account on GitLab you can watch the F-Droid repos, or subscribe to atom feeds for them. A feed including actions from all fdroid repositories is available at <https://gitlab.com/fdroid.atom>."
msgstr "如果你在 GitLab 上有一个帐户，你可以关注 F-Droid 存储库，或为它们订阅 Atom feed。 <https://gitlab.com/fdroid.atom> 提供了一个包含来自所有 F-Droid 存储库的操作的 源。"

#. type: Title ###
#: _docs/Feeds.md
#, no-wrap
msgid "Forums"
msgstr "论坛"

#. type: Plain text
#: _docs/Feeds.md
msgid "You can subscribe to new [forum](https://forum.f-droid.org/) posts and threads via the following URLs:"
msgstr "你可以通过以下 URL 订阅新的 [forum](https://forum.f-droid.org/) 帖子和主题："

#. type: Bullet: '* '
#: _docs/Feeds.md
msgid "<https://forum.f-droid.org/posts.rss>"
msgstr "<https://forum.f-droid.org/posts.rss>"

#. type: Bullet: '* '
#: _docs/Feeds.md
msgid "<https://forum.f-droid.org/latest.rss>"
msgstr "<https://forum.f-droid.org/latest.rss>"

#. type: Title ###
#: _docs/Feeds.md
#, no-wrap
msgid "Bugs and Suggestions"
msgstr "Bug 和建议"

#. type: Plain text
#: _docs/Feeds.md
msgid "<https://gitlab.com/fdroid/fdroidclient/issues>, <https://gitlab.com/fdroid/fdroidserver/issues>, <https://gitlab.com/fdroid/fdroiddata/issues>: All expose RSS feeds, and also email notifications if desired."
msgstr "<https://gitlab.com/fdroid/fdroidclient/issues>、<https://gitlab.com/fdroid/fdroidserver/issues>、<https://gitlab.com/fdroid/fdroiddata/issues>：所有内容都公开 RSS 源，如果需要，还可以通过电子邮件通知。"

#. type: Title ###
#: _docs/Feeds.md
#, no-wrap
msgid "Matrix"
msgstr "Matrix"

#. type: Plain text
#: _docs/Feeds.md
msgid "The room can be previewed without an account on https://matrix.to/#/#fdroid:f-droid.org or https://matrix.to/#/#fdroid-dev:f-droid.org"
msgstr "不需要帐户即可在 https://matrix.to/#/#fdroid:f-droid.org 或 https://matrix.to/#/#fdroid-dev:f-droid.org 上预览房间"

#. type: Title ###
#: _docs/Feeds.md
#, no-wrap
msgid "IRC"
msgstr "IRC"

#. type: Plain text
#: _docs/Feeds.md
msgid "Old IRC logs are available at <https://botbot.me/freenode/fdroid/> and <https://botbot.me/freenode/fdroid-dev/>."
msgstr "旧的 IRC 日志可在 <https://botbot.me/freenode/fdroid/> 和 <https://botbot.me/freenode/fdroid-dev/> 查阅。"

#. type: Title ##
#: _docs/Feeds.md
#, no-wrap
msgid "OPML import to a feed reader"
msgstr "OPML 导入到源阅读器"

#. type: Plain text
#: _docs/Feeds.md
msgid "For importing into your favourite news reader, save the following text as feeds.opml and add/remove feeds your are interested in."
msgstr "要导入到你喜欢的新闻阅读器中，请将以下文本另存为 feeds.opml，并添加/删除你感兴趣的源。"

#. type: Plain text
#: _docs/Feeds.md
msgid "On Android we have [Feeder]({{ site.baseurl }}/packages/com.nononsenseapps.feeder/), [Handy News Reader]({{ site.baseurl }}/packages/ru.yanus171.feedexfork/), [Antennapod](https://f-droid.org/repository/browse/?fdfilter=de.danoeh.antennapod&fdid=de.danoeh.antennapod), [FreshRSS]({{ site.baseurl }}/packages/fr.chenry.android.freshrss/), [Flym DecSync]({{ site.baseurl }}/packages/org.decsync.flym/) and many more. On the desktop you could use the Akregator for KDE, Liferea for Gnome or [http://newsbeuter.org newsbeuter] which is nice if you like working in a terminal."
msgstr "在 Android 上，我们有 [Feeder]({{ site.baseurl }}/packages/com.nononsenseapps.feeder/)、[Handy News Reader]({{ site.baseurl }}/packages/ru.yanus171.feedexfork/)、[Antennapod](https://f-droid.org/repository/browse/?fdfilter=de.danoeh.antennapod&fdid=de.danoeh.antennapod)、 [FreshRSS]({{ site.baseurl }}/packages/fr.chenry.android.freshrss/)、 [Flym DecSync]({{ site.baseurl }}/packages/org.decsync.flym/) 和许多其他应用。在桌面上，你可以使用 Akregator for KDE、Liferea for Gnome 或 [http://newsbeuter.org newsbeuter]，它对喜欢在终端工作的用户而言很好。"

#. type: Fenced code block (xml)
#: _docs/Feeds.md
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<opml version=\"1.0\">\n"
"  <head>\n"
"    <title>F-Droid related feeds</title>\n"
"  </head>\n"
"  <body>\n"
"    <outline title=\"F-Droid\">\n"
"      <outline type=\"rss\" title=\"News and Reviews\" xmlUrl=\"https://f-droid.org/feed\" htmlUrl=\"https://f-droid.org/news-and-reviews/\"/>\n"
"      <outline type=\"rss\" title=\"Latest Builds\" xmlUrl=\"https://f-droid.org/wiki/api.php?action=feedcontributions&amp;user=Robot&amp;feedformat=atom\" htmlUrl=\"https://f-droid.org/wiki/page/Special:Contributions/Robot\"/>\n"
"    </outline>\n"
"  </body>\n"
"</opml>\n"
msgstr ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<opml version=\"1.0\">\n"
"  <head>\n"
"    <title>F-Droid 相关的 feed</title>\n"
"  </head>\n"
"  <body>\n"
"    <outline title=\"F-Droid\">\n"
"      <outline type=\"rss\" title=\"新闻和评论\" xmlUrl=\"https://f-droid.org/feed\" htmlUrl=\"https://f-droid.org/news-and-reviews/\"/>\n"
"      <outline type=\"rss\" title=\"最新的构建\" xmlUrl=\"https://f-droid.org/wiki/api.php?action=feedcontributions&amp;user=Robot&amp;feedformat=atom\" htmlUrl=\"https://f-droid.org/wiki/page/Special:Contributions/Robot\"/>\n"
"    </outline>\n"
"  </body>\n"
"</opml>\n"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "Get F-Droid"
msgstr "获取 F-Droid"

#. type: Title ##
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "Install F-Droid"
msgstr "安装 F-Droid"

#. type: Plain text
#: _docs/Get_F-Droid.md
msgid "To install F-Droid, choose one of those 4 options:"
msgstr "选择下列四种选项之一安装 F-Droid："

#. type: Bullet: '* '
#: _docs/Get_F-Droid.md
msgid "Easy options:"
msgstr "简便选项："

#. type: Bullet: '   * '
#: _docs/Get_F-Droid.md
msgid "[Option 1. Buy a phone with pre-installed F-Droid.](#option-1-buy-a-phone-with-pre-installed-f-droid)"
msgstr "[选项1：购买预装了 F-Droid 的手机](#option-1-buy-a-phone-with-pre-installed-f-droid)"

#. type: Bullet: '   * '
#: _docs/Get_F-Droid.md
msgid "[Option 2. Download and install F-Droid APK.](#option-2-download-and-install-f-droid-apk)"
msgstr "[选项2：下载并安装 F-Droid APK.](#option-2-download-and-install-f-droid-apk)"

#. type: Title ##
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "Advanced options"
msgstr "高级选项"

#. type: Bullet: '   * '
#: _docs/Get_F-Droid.md
msgid "[Option 3. Install an Android ROM with built-in F-Droid.](#option-3-install-an-android-rom-with-built-in-f-droid)"
msgstr "[选项3：安装内置 F-Droid 的安卓 ROM.](#option-3-install-an-android-rom-with-built-in-f-droid)"

#. type: Bullet: '   * '
#: _docs/Get_F-Droid.md
msgid "[Option 4. Flash F-Droid OTA.](#option-4-flash-f-droid-ota)"
msgstr "[选项4：刷入 F-Droid OTA.](#option-4-flash-f-droid-ota)"

#. type: Bullet: '   * '
#: _docs/Get_F-Droid.md
msgid "[Option 5. Install F-Droid using `adb`.](#option-5-install-f-droid-using-adb)"
msgstr "[选项5：用 `adb`安装 F-Droid.](#option-5-install-f-droid-using-adb)"

#. type: Plain text
#: _docs/Get_F-Droid.md
msgid "What is the difference between easy and advanced options?"
msgstr "简便和高级选项间区别何在？"

#. type: Bullet: '* '
#: _docs/Get_F-Droid.md
msgid "If you do not have technical background or interest, do not need advanced features, or if you are not sure which option to choose, for you to get a better experience, it is suggested to consider choosing one of those [easy options](#easy-options) down below. So that you get a faster and easier start with F-Droid. While keeping in mind that you will get less advanced features."
msgstr "如果你没有技术背景或兴趣，不需要高级特性，或者如果不确定选哪个选项，那么为了您获得更佳体验，建议考虑选择下方 [简便选项](#easy-options) 中的一个。这样你可以更快更容易地开始使用 F-Droid。不过请记住您获得的高级特性会较少。"

#. type: Bullet: '* '
#: _docs/Get_F-Droid.md
msgid "If you do have technical background or interest, and need advanced features, for you to get a better experience, it is suggested to consider choosing one of those [advanced options](#advanced-options) down below. So that after the initial longer learning curve, you benefit from more advanced features."
msgstr "如果你有技术背景或兴趣，且需要高级特性，为了您有更佳体验，建议考虑选择下方 [高级选项](#advanced-options) 中的一个。这样在最开始较长的学习曲线后，您将获益于更多的高级特性。"

#. type: Title ##
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "Easy options"
msgstr "简便选项"

#. type: Title ###
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "Option 1. Buy a phone with pre-installed F-Droid."
msgstr "选项1：购买预装了 F-Droid 的手机。"

#. type: Bullet: '* '
#: _docs/Get_F-Droid.md
msgid "__CalyxOS__ - Calyx Institute is an privacy research NGO in the USA.  Some of their [membership plans](https://members.calyxinstitute.org/enroll/membership/phone) come with a phone where F-Droid is pre-installed."
msgstr "__CalyxOS__ - Calyx Institute 是一家位于美国的隐私研究非盈利机构。  该机构的某些 [成员计划](https://members.calyxinstitute.org/enroll/membership/phone) 、包括预装了 F-Droid 的手机。"

#. type: Bullet: '* '
#: _docs/Get_F-Droid.md
msgid "__ShiftOS-Light__ - Shift Phone is a German phone vendor specializing in sustainable electronics.  With some [manual steps](https://www.shiftphones.com/hilfe_faqs/was-ist-shiftos-l/) their [SHIFT5mq](https://shop.shiftphones.com/shift5me.html) and [SHIFT6mq model](https://shop.shiftphones.com/shift6mq.htm) can be updated to ShiftOS-Light.  F-Droid is pre-installed on ShiftOS-Light."
msgstr "__ShiftOS-Light__ - Shift Phone 是一家专攻可持续电子设备的德国手机厂商。  经由一些 [手动步骤](https://www.shiftphones.com/hilfe_faqs/was-ist-shiftos-l/)，该厂商的 [SHIFT5mq](https://shop.shiftphones.com/shift5me.html) 和 [SHIFT6mq model](https://shop.shiftphones.com/shift6mq.htm) 可以更新到 ShiftOS-Light。  F-Droid 是ShiftOS-Light 系统的预装应用。"

#. type: Title ###
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "Option 2. Download and install F-Droid APK."
msgstr "选项2：下载并安装 F-Droid APK。"

#. type: Plain text
#: _docs/Get_F-Droid.md
msgid "This option is quick and easy. After installation, F-Droid will automatically notify you when updates are available. But for each and every individual app update, Android will prompt you for confirmation. Some users prefer this option because they have more control over which apps are presently allowed to update or not."
msgstr "此选项快速且容易。安装后，F-Droid 会在更新可用时自动提示你。但对每一个单独的应用更新，Android 系统都会提示进行确认。 某些用户偏好此选项，因用户在允许哪些应用现在可以或不可以更新上有更大控制权。"

#. type: Plain text
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "**Summarize steps to install F-Droid APK:**\n"
msgstr "**概述安装 F-Droid APK 的步骤：**\n"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "Download [this official F-Droid.apk](https://f-droid.org/F-Droid.apk) file"
msgstr "下载 [官方 F-Droid.apk](https://f-droid.org/F-Droid.apk) 文件"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "Install the `F-Droid.apk` file you downloaded above"
msgstr "安装你上一步下载的 `F-Droid.apk`文件"

#. type: Plain text
#: _docs/Get_F-Droid.md
msgid "Below is the same steps as above. But with details if you are interested in those."
msgstr "以下步骤和上方步骤本质上并无不同。区别在于更加详细，如果你对细节感兴趣，可以看一看。"

#. type: Plain text
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "**Details steps for newcomers to install F-Droid APK:**\n"
msgstr "**新手如何安装 F-Droid APK 的详细步骤：**\n"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "[Tap on this link](https://f-droid.org/F-Droid.apk) to both download and start the installation of the official F-Droid APK."
msgstr "[轻按此链接](https://f-droid.org/F-Droid.apk) 下载并启动安装官方的 F-Droid APK 文件。"

#. type: Bullet: '    * '
#: _docs/Get_F-Droid.md
msgid "Alternatively, if somehow your internet browser force you to download this `F-Droid.apk` file without automatically starting its installation, double check that this file is stored into your Android devise internal storage. So that it automatically has the appropriation permissions. Do not store this file into an external storage. Then using your Android file Manager, tap on the `F-Droid.apk` file."
msgstr "或者，要是你的浏览器强制你下载 `F-Droid.apk` 文件但没有自动开始安装它，请仔细检查确保该文件被储存到 Android 设备的内部存储中，以便其自动拥有恰当的权限。不要将此文件保存在外部存储中。接着使用 Android 文件管理器，轻按 `F-Droid.apk` 文件。"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "When Android prompts, allow the installation from Unknown Sources"
msgstr "当 Android 系统提示时，允许来自未知来源的安装"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "When prompts, tap on `Install` F-Droid"
msgstr "系统提示时，轻按 `安装` F-Droid"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "When prompts, tap on `Open` F-Droid"
msgstr "当提示时，轻按 `打开` F-Droid"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "The first time F-Droid is open, it will automatically download the F-Droid repository. Wait. Depending on the speed of your internet connection, wait 2 to 10 minutes."
msgstr "第一次打开 F-Droid 时，应用会自动下载 F-Droid 存储库。请稍候片刻。根据你的互联网连接速度不同，可能需要等待 2 到 10 分钟。"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "F-Droid will automatically display its catalog of apps. To search for apps, tap on the search button."
msgstr "F-Droid 会自动展示应用目录。要搜索应用，请轻按搜素按钮。"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "When Android prompts, allow the F-Droid to install apps from Unknown Sources."
msgstr "当 Android 系统提示时，允许 F-Droid 安装来自未知来源的应用。"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "Optionally, for stronger security, denied the Android internet browser or Android file manager to install apps from Unknown Sources. In the future, F-Droid APK will still be able to install and update any F-Droid apps to your liking."
msgstr "（可选）为了增强安全性，在完成初始安装后拒绝 Android 浏览器或 Android 文件管理器安装来自未知来源的应用。F-Droid APK 仍能如你所愿安装并更新任何 F-Droid 应用。"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "Done. You successfully install F-Droid APK."
msgstr "完毕。您成功安装了 F-Droid APK。"

#. type: Title ####
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "Option 3. Install an Android ROM with built-in F-Droid."
msgstr "选项3：安装内置 F-Droid 的安卓 ROM。"

#. type: Plain text
#: _docs/Get_F-Droid.md
msgid "If you're planning on flashing a custom ROM, these ROMs might be interesting for you because they come with F-Droid built-in and ready to use:"
msgstr "如果你正计划刷入自定义 ROM，你可能对这些 ROM 感兴趣，因它们内置了 F-Droid，开箱可用："

#. type: Bullet: '- '
#: _docs/Get_F-Droid.md
msgid "__CalyxOS__ - https://calyxos.org"
msgstr "__CalyxOS__ - https://calyxos.org"

#. type: Bullet: '- '
#: _docs/Get_F-Droid.md
msgid "__DivestOS__ - https://divestos.org"
msgstr "__DivestOS__ - https://divestos.org"

#. type: Bullet: '- '
#: _docs/Get_F-Droid.md
msgid "__LineageOS for MicroG__ - https://lineage.microg.org"
msgstr "__LineageOS for MicroG__ - https://lineage.microg.org"

#. type: Title ####
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "Option 4. Flash F-Droid OTA."
msgstr "选项4：刷入 F-Droid OTA。"

#. type: Plain text
#: _docs/Get_F-Droid.md
msgid "On Android version 12 or more recent, Flash F-Droid OTA is both **not** needed and **not** supported. [Read more](https://f-droid.org/2024/02/08/twif.html#f-droid-core)."
msgstr "在 Android 12 或更新版本的系统上，刷入 F-Droid OTA 既 **没有** 必要也 **不被** 支持。[了解详情](https://f-droid.org/2024/02/08/twif.html#f-droid-core)。"

#. type: Plain text
#: _docs/Get_F-Droid.md
msgid "On Android version 11 or older. When you intend on flashing a ROM which doesn't come preloaded with F-Droid we recommend to flash F-Droid privileged extension OTA. This option works great with [LineageOS](https://lineageos.org/) for example."
msgstr "在 Android 11 及更早系统上，当你打算刷入未预置 F-Droid 的 ROM 时，我们推荐刷入 F-Droid 特权扩展 OTA。此选项与 [LineageOS](https://lineageos.org/) 系统配合得很好。"

#. type: Plain text
#: _docs/Get_F-Droid.md
#, no-wrap
msgid ""
"1. download the latest [F-Droid privileged extension\n"
"  OTA](https://f-droid.org/packages/org.fdroid.fdroid.privileged.ota/#suggested).\n"
"2. boot your phone into recovery mode\n"
"3. side-load / install the OTA zip file to your phone, the same way you would\n"
"  install a custom ROM. (eg. with `adb`, `heimdall`, etc.)\n"
msgstr ""
"1. 下载最新的 [F-Droid 特权扩展\n"
"  OTA](https://f-droid.org/packages/org.fdroid.fdroid.privileged.ota/#suggested).\n"
"2. 启动手机进入恢复模式\n"
"3. 侧加载/安装 OTA zip 文件到手机，和你\n"
"安装定制 ROM 的方法一样 (如，用 `adb`、 `heimdall`等)\n"

#. type: Title ####
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "Option 5. Install F-Droid using `adb`."
msgstr "选项5：用 `adb` 安装 F-Droid."

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "Enable [_Developer options_](https://developer.android.com/studio/debug/dev-options#enable) on your phone"
msgstr "在手机上启用 [_开发者选项_](https://developer.android.com/studio/debug/dev-options#enable)"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "In _Developer options_ enable _USB debugging_"
msgstr "在 _开发者选项_中启用 _USB 调试_"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "On your computer download \"Android Debugging Bridge\" (adb)"
msgstr "在计算机上下载 \"Android Debugging Bridge\" (adb)"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "Make sure your phone is connected via USB and visible in the output of: `adb devices -l`"
msgstr "确保通过 USB 连接手机到计算机，且可以在 `adb devices -l`输出中看到它"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "Push fdroid to your phone: `adb push \"/path/to/F-Droid.apk\" /data/local/tmp/F-Droid.apk`"
msgstr "将 fdroid 推送到手机：`adb push \"/path/to/F-Droid.apk\" /data/local/tmp/F-Droid.apk`"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "Install F-Droid: `adb shell pm install -i \"org.fdroid.fdroid\" -r /data/local/tmp/F-Droid.apk`"
msgstr "安装 F-Droid：`adb shell pm install -i \"org.fdroid.fdroid\" -r /data/local/tmp/F-Droid.apk`"

#. type: Bullet: '1. '
#: _docs/Get_F-Droid.md
msgid "Remove the old file: `adb shell rm /data/local/tmp/F-Droid.apk`"
msgstr "删除旧文件： `adb shell rm /data/local/tmp/F-Droid.apk`"

#. type: Plain text
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "**Note:** This method also works for installing apps if _Google Advanced Protection Program_ is enabled, which would otherwise result in the following error:\n"
msgstr "**注意：** 也可以使用此方法来安装应用， 但需要开启_Google 高级保护项目_。否则，可能会导致下列错误：\n"

#. type: Plain text
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "> `INSTALL_FAILED_VERIFICATION_FAILURE: Install not allowed for file:///data/app/[…].tmp`\n"
msgstr "> `INSTALL_FAILED_VERIFICATION_FAILURE: Install not allowed for file:///data/app/[…].tmp`\n"

#. type: Title ##
#: _docs/Get_F-Droid.md
#, no-wrap
msgid "Disclaimer"
msgstr "免责声明"

#. type: Plain text
#: _docs/Get_F-Droid.md
msgid "The intent of this present documentation page is helping users getting kick-started. Not an official endorsement of any products, vendors, etc."
msgstr "当前文档页面的意图时帮助用户快速开始使用 F-Droid，并非对任何产品、厂商等的官方背书。"

#. type: Plain text
#: _docs/Get_F-Droid.md
msgid "F-Droid and its contributors might or might not be affiliated with any of the ROMs, Device Vendors, etc. listed above. The listing is neither complete nor are any of the linked projects officially endorsed by F-Droid. We reserve the right to change the listing above as our team sees fit. An official policy on criteria to get listed here is still in the works, see [admin#352](https://gitlab.com/fdroid/admin/-/issues/352) for more information.  If you think something on this listing is incorrect or missing please let us know: [team@f-droid.org](mailto:team@f-droid.org)"
msgstr "F-Droid 及其贡献者可能与上面列出的任何 ROM、设备供应商有关联，也可能没有。该清单不完整，且所链接的项目中没有一个获得 F-Droid 的官方背书。我们保留在我们团队认为合适的情况下更改上述列表的权利。关于纳入此清单标准的官方政策仍在制定中，请访问 [admin#352](https://gitlab.com/fdroid/admin/-/issues/352) 了解更多信息。如果你认为此列表中的某些内容不正确或不完整，请告诉我们：[team@f-droid.org](mailto:team@f-droid.org)"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Getting_logcat_messages_after_crash.md
#, no-wrap
msgid "Getting _logcat_ messages after crash"
msgstr "崩溃后获得 _logcat_ 消息"

#. type: Title ###
#: _docs/Getting_logcat_messages_after_crash.md
#, no-wrap
msgid "What is _logcat_?"
msgstr "什么是 _logcat_？"

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
msgid "As an app runs, and particularly when it crashes, it sends some information to the Android system to help diagnose what caused the problem. If the F-Droid developers have access to this information, it provides lots of really good information to help find out what went wrong. This is in comparison to a generic error message such as \"F-Droid crashed\"."
msgstr "当应用运行时，尤其是崩溃时，它会向 Android 系统发送一些信息以帮助诊断导致问题的原因。获得这些信息的访问权将为 F-Droid 开发人员定位问题的工作提供很多便利。这比起“F-Droid 崩溃”之类的一般错误信息要好得多。"

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
msgid "Many apps will automatically send crash report to the developer, but F-Droid does not. This is not a technical limitation, but rather a philosophical one. We try to connect to the internet only when necessary to perform what you asked us to: download and install apps. The downside of this is that we require a little bit of help from our users when they tell us about crashes. This article explains how to obtain _logcat_ files, which are the most important pieces of information you can provide to help us investigate and fix any bugs."
msgstr "许多会自动向开发人员发送崩溃报告，但 F-Droid 不会。这并非技术限制，而是哲学限制。我们仅在必要时尝试连接到互联网，以执行你要求的任务：下载并安装应用。这样做的缺点是，当用户告诉向我们报告崩溃时，我们需要用户提供一些帮助。 _logcat_ 文件是你可以提供的最重要的信息，它可以帮助我们调查和修复任何 Bug，本文将介绍如何获取该文件。"

#. type: Title ###
#: _docs/Getting_logcat_messages_after_crash.md
#, no-wrap
msgid "How to find _logcat_ messages"
msgstr "如何找到 _logcat_ 消息"

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
msgid "There are two ways to get a _logcat_ message. The usual way will be to install an app on your device which knows how to access the _logcat_ information. Another way is to install the Android SDK on your computer and get the _logcat_ messages over USB or WiFi."
msgstr "有两种方法可以获取 _logcat_ 消息。通常的方法是在你的设备上安装一个应用，该应用知道如何访问 _logcat_ 信息。另一种方法是在你的计算机上安装 Android SDK 并通过 USB 或 Wi-Fi 获取 _logcat_ 消息。"

#. type: Title ####
#: _docs/Getting_logcat_messages_after_crash.md
#, no-wrap
msgid "Using an app on your device"
msgstr "在你的设备上使用应用"

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
msgid "For those who don't want to install software on their computers in order to get the _logcat_ messages, you can download an app such as:"
msgstr "对于那些不想在他们的计算机上安装软件以获取 _logcat_ 消息的人，则可以下载一个应用，例如："

#. type: Bullet: '* '
#: _docs/Getting_logcat_messages_after_crash.md
msgid "[aLogCat](https://f-droid.org/packages/org.jtb.alogcat/)"
msgstr "[aLogCat](https://f-droid.org/packages/org.jtb.alogcat/)"

#. type: Bullet: '* '
#: _docs/Getting_logcat_messages_after_crash.md
msgid "[Logcat Reader](https://f-droid.org/packages/com.dp.logcatapp/)"
msgstr "[Logcat Reader](https://f-droid.org/packages/com.dp.logcatapp/)"

#. type: Bullet: '* '
#: _docs/Getting_logcat_messages_after_crash.md
msgid "[Logs](https://f-droid.org/packages/com.tananaev.logcat/)"
msgstr "[Logs](https://f-droid.org/packages/com.tananaev.logcat/)"

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
msgid "The general idea is to open the app, ask it to start recording _logcat_ messages, and then try and cause F-Droid to crash. Once it crashes, the _logcat_ app will save the error messages. These messages can then be copied and pasted in the [F-Droid issue tracker](https://gitlab.com/fdroid/fdroidclient/issues)."
msgstr "一般的方法是打开应用，让它开始记录 _logcat_ 消息，然后尝试使 F-Droid 崩溃。一旦崩溃，_logcat_ 应用将保存错误消息。然后可以将这些消息复制并粘贴到 [F-Droid 问题跟踪器](https://gitlab.com/fdroid/fdroidclient/issues) 中。"

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
msgid "On Debian-ish things, try `apt-get install pidcat`, it has colorization and tab completion even!"
msgstr "在 Debian 风格的系统上，尝试 `apt-get install pidcat`，它甚至有着色和标签完成功能！"

#. type: Title ####
#: _docs/Getting_logcat_messages_after_crash.md
#, no-wrap
msgid "Using the Android SDK"
msgstr "使用 Android SDK"

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
msgid "If you have the [Android SDK](https://developer.android.com/sdk/index.html) installed on your computer, then you will be able to use the [adb](https://developer.android.com/tools/help/adb.html) (command line) or [DDMS](https://developer.android.com/tools/debugging/ddms.html) (graphical app) tools when your phone is plugged in via USB and has “Debugging” enabled from the Android settings."
msgstr "如果你在计算机上安装了 [Android SDK](https://developer.android.com/sdk/index.html)，并在 Android 设置中启用了“调试”，那么当你的手机通过 USB 连接计算机时，你将能够使用 [adb](https://developer.android. com/tools/help/adb.html)（命令行）或 [DDMS](https://developer.android.com/tools/debugging/ddms.html)（图形应用）工具。"

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
msgid "Once you have the SDK installed, and are able to use the adb tool, then run the following command:"
msgstr "安装 SDK 并能够使用 adb 工具后，运行以下命令："

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
#, no-wrap
msgid "    adb logcat\n"
msgstr "    adb logcat\n"

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
msgid "Depending on how many apps you have installed/running, it might be a little bit noisy. If you don't want to post all of that noise online (there is a slight chance that it contains information you don't want on the internet - if apps are logging private information to the log), then you can filter to only error messages with:"
msgstr "根据你所安装/运行的应用的数量，它可能会包含一些无关信息。如果你不想把所有这些无关信息发布到网上（如果应用将私人信息记录到日志中，它可能包含你不希望在发布互联网上的信息），那么你可以通过执行以下命令来过滤掉无关信息:"

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
#, no-wrap
msgid "    adb logcat *:E\n"
msgstr "    adb logcat *:E\n"

#. type: Plain text
#: _docs/Getting_logcat_messages_after_crash.md
msgid "This information can then be posted to a GitLab issue to help developers diagnose the issue. When posting to GitLab, surround the log in three backticks (```) before, and three backticks after to format it correctly."
msgstr "然后你可以将此信息发布到 GitLab 问题以帮助开发人员诊断问题。发布到 GitLab 时，将日志前后用三个反引号 (```) 括起来，以将它正确地格式化。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/How_to_Help.md
#, no-wrap
msgid "How to Help"
msgstr "如何提供帮助"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "The project is entirely developed and maintained by volunteers. You can help in the following ways:"
msgstr "该项目完全由志愿者开发和维护。你也可以参与其中，方式如下："

#. type: Title ###
#: _docs/How_to_Help.md
#, no-wrap
msgid "Follow our work"
msgstr "关注我们的工作"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "The [Feeds](../Feeds) page lists the various sites that we work on."
msgstr "[Feeds](../Feeds) 页面列出了我们正在工作中的各个网站。"

#. type: Title ###
#: _docs/How_to_Help.md
#, no-wrap
msgid "Report problems"
msgstr "报告问题"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "If you experience problems with the site or client software, you can report them in the [issue tracker](https://gitlab.com/u/fdroid), discuss them in the [forum or chat rooms](https://f-droid.org/about/#contact)."
msgstr "如果你遇到站点或客户端软件的问题，你可以在 [问题跟踪器](https://gitlab.com/u/fdroid)中进行报告，在 [论坛或聊天室](https://f-droid.org/about/#contact) q讨论它们。"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "Take a look at the [Repository Maintenance](https://monitor.f-droid.org/builds)  page to see how you can help keeping apps and their metadata up to date."
msgstr "看一眼 [存储库维护](https://monitor.f-droid.org/builds)   页面了解你怎样能帮助保持应用和它们的元数据为最新。"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "If you are reporting an issue with the client, [check out these pointers](../Client_Bug_Reports) to make sure we have the best chance of reproducing and fixing your issue."
msgstr "如果你要报告客户端的问题，请[查看这些提示](../Client_Bug_Reports) ，以尽可能帮助我们复现并修复你的问题。"

#. type: Title ###
#: _docs/How_to_Help.md
#, no-wrap
msgid "Submit applications"
msgstr "提交应用"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "If you see an application missing from the repository that fits with the [Inclusion Policy](../Inclusion_Policy)), then [you can add that application](../Submitting_to_F-Droid_Quick_Start_Guide)  via a merge request.  Otherwise, to make a simple request, go to the dedicated [Requests for Packaging](https://gitlab.com/fdroid/rfp/issues)  tracker."
msgstr "如果你发现一个符合[收录政策](../Inclusion_Policy)的应用不在存储库中，则可以通过合并请求[添加该应用](../Submitting_to_F-Droid_Quick_Start_Guide)。或者转到专用的[打包请求](https://gitlab.com/fdroid/rfp/issues)跟踪器提出一个简单的请求。"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "Metadata may already be found there but it can always be improved. Often developers don't mark their releases well: you can ask them to use tags via an issue on their tracker, which will allow us to use an automatic check for new versions (and you can suggest a donation method while you're about it!). Another common task is the comparison of included libraries with official versions."
msgstr "元数据可能已经存在，但尚需改进。开发人员通常不会很仔细地标记他们的发布：你可以通过跟踪器上的问题要求他们使用标签，这将允许我们自动检查新版本（而且你可以提议捐赠方法 ！）。另一个常见任务是将包含的库与官方版本进行比较。"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "If you have the technical skills required, you can also put together the relevant metadata and submit a merge request to the git repository, which should speed up the inclusion of the application. See the [sticky thread](https://f-droid.org/forums/topic/adding-apps-with-git/)  at the top of that forum for more information."
msgstr "如果你具备所需的技术技能，还可以将相关元数据放在一起并向 git 代码库提交合并请求，这应该会加快应用的收录速度。请参阅该论坛顶部的 [置顶帖](https://f-droid.org/forums/topic/adding-apps-with-git/)了解更多信息。"

#. type: Title ###
#: _docs/How_to_Help.md
#, no-wrap
msgid "Update apps"
msgstr "更新应用"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "The procedure for updating apps is similar to adding new apps: changes are applied to the metadata in the fdroiddata git repository. You'll need to already be familiar with adding new apps. Even though it should take much less time to update an app one should still be cautious.  Follow the steps in the [update guide](../How_to_update_an_app)  to minimize the risk of messing up and don't be afraid to ask for help!"
msgstr "更新应用的流程类似于添加新应用：更改 fdroiddata git 代码库中应用的元数据。你需要已经熟知如何添加新应用。即使更新应用所需的时间要少得多，但仍应谨慎。请按照[更新指南](../How_to_update_an_app)中的步骤操作，以最大程度地降低出错的风险，不要害怕寻求帮助！"

#. type: Title ###
#: _docs/How_to_Help.md
#, no-wrap
msgid "Add information about no longer maintained apps"
msgstr "添加不再维护的应用的信息"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "At the beginning of the app's description in metadata (provided Description is held on our end), insert a paragraph saying"
msgstr "在元数据中应用描述的开头（前提是描述保存在我们的元数据里），插入一段话说明"

#. type: Fenced code block
#: _docs/How_to_Help.md
#, no-wrap
msgid "NOTE: This app is no longer maintained.\n"
msgstr "注意：这个应用已不再维护。\n"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "Optionally link \"no longer maintained\" to where that statement is found (if not directly on the app's Readme/Website). Or add \"(its repo has been archived)\" – whichever fits. If the repo is gone altogether, instead remove the entries for `RepoType` and `RepoURL`, and at the very end of the metadata YAML add a line saying `NoSourceSince: 0.1.2` (where 0.1.2 should be the versionName of the last build available) – this will automatically translate into an Anti-Feature and thus be displayed prominently.  In the end make that an MR."
msgstr "可以考虑将“不再维护”链接到该声明所在的位置（如果不是就在应用的 Readme/网站上）。或者添加“（其存储库已存档）” - 或者其他恰当的说明。如果存储库完全消失了，请删除 `RepoType` 和 `RepoURL` 的条目，并在元数据 YAML 的末尾添加一行 `NoSourceSince: 0.1.2`（其中 0.1.2 应为最后一个可用版本的 versionName） – 这将自动转换为负面特征，从而突出显示。 最后，提交合并请求。"

#. type: Title ###
#: _docs/How_to_Help.md
#, no-wrap
msgid "Translate"
msgstr "翻译"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "The client application is available in many languages, but if yours is not included, or if it needs updating or improving, follow [these instructions](https://hosted.weblate.org/engage/f-droid/)."
msgstr "客户端应用有多种语言版本，但如果其中不包括你的语言或者需要更新或改进，请参照[这些说明](https://hosted.weblate.org/engage/f-droid/)进行操作。"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "The web site and some app descriptions (if the original developer does not supply their own description) can also be translated through Weblate."
msgstr "此网站和一些应用描述（如果原始开发者不提供自己的描述）也可通过 Weblate 进行翻译。"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "There's a [dedicated forum section](https://forum.f-droid.org/c/translation)  for discussions about translation."
msgstr "有一个[专用论坛板块](https://forum.f-droid.org/c/translation)用于讨论翻译问题。"

#. type: Title ###
#: _docs/How_to_Help.md
#, no-wrap
msgid "Help with development"
msgstr "帮助开发"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "There are three git repositories hosted at GitLab, as follows:"
msgstr "在 GitLab 上有如下 3 个 git 存储库："

#. type: Bullet: '-   '
#: _docs/How_to_Help.md
msgid "Android client application - <https://gitlab.com/fdroid/fdroidclient> Issues suitable for new contributors are tagged [help-wanted](https://gitlab.com/fdroid/fdroidclient/issues?label_name=help-wanted)"
msgstr "Android 客户端应用 - <https://gitlab.com/fdroid/fdroidclient> 适合新贡献者的问题已被打上 [help-wanted](https://gitlab.com/fdroid/fdroidclient/issues?label_name=help-wanted) 的标签"

#. type: Bullet: '-   '
#: _docs/How_to_Help.md
msgid "Server tools, for the tools for running a repository and building/installing applications locally - <https://gitlab.com/fdroid/fdroidserver>"
msgstr "服务器工具，用于在本地运行存储库和构建/安装应用的工具 - <https://gitlab.com/fdroid/fdroidserver>"

#. type: Bullet: '-   '
#: _docs/How_to_Help.md
msgid "Metadata files for applications in the main F-Droid repository - <https://gitlab.com/fdroid/fdroiddata>"
msgstr "F-Droid 主存储库中的应用元数据文件 - <https://gitlab.com/fdroid/fdroiddata>"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "The easiest way to contribute to development is to make clones of these projects and submit merge requests. If you are making large changes, it would be good to discuss them on IRC or in the forum first, to ensure they fit with the direction of the project, and do not clash with or duplicate work already in development."
msgstr "为开发做出贡献的最简单方法是克隆这些项目并提交合并请求。如果你要进行较大幅度的修改，最好先在 IRC 或论坛上讨论它们，以确保它们符合项目的方向，并且不会与已经在开发中的工作发生冲突或重复。"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "For working with the server project, it's a good idea to read [the docs](http://f-droid.org/docs/) and learn our [git workflow](https://f-droid.org/wiki/page/git_workflow)."
msgstr "为了让服务器项目能处理好工作，最好阅读[文档](http://f-droid.org/docs/)并学习我们的 [git 工作流程](https://f-droid.org/wiki/page/git_workflow)。"

#. type: Title ###
#: _docs/How_to_Help.md
#, no-wrap
msgid "Help with Infrastructure"
msgstr "为基础设施提供帮助"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "F-Droid provides multiple servers (builders, web portal, download areas...) which need regular maintenance, Ansible-based deployment, and hardware management.  Further information can be found by asking on [Matrix](https://matrix.to/#/#fdroid-dev:f-droid.org), [IRC](https://webchat.oftc.net/?randomnick=1&channels=fdroid&prompt=1) (#fdroid-dev on OFTC) or team@f-droid.org."
msgstr "F-Droid 提供多个服务器（构建器、网页门户、下载区...），需要定期维护，基于Ansible 的部署和硬件管理。可以通过在 [Matrix](https://matrix.to/#/#fdroid-dev:f-droid.org)，[IRC](https://webchat.oftc.net/?randomnick=1&channels=fdroid&prompt=1) (OFTC 上的 #fdroid-dev 频道)上提问，或发邮件到 team@f-droid.org 以获取更多信息。"

#. type: Title ###
#: _docs/How_to_Help.md
#, no-wrap
msgid "Design"
msgstr "设计"

#. type: Plain text
#: _docs/How_to_Help.md
msgid "We'd love any contributions to make the project prettier and easier to use. If you are good at writing we are working on improving the [Home page](https://f-droid.org/wiki/page/Home_page). If you can design mockups the client developers could use your help. Post them to the issue tracker for [client](https://gitlab.com/fdroid/fdroidclient/issues) or the [website](https://gitlab.com/fdroid/fdroid-website/issues)."
msgstr "我们欢迎任何使此项目更美观易用的贡献。如果你擅长写作，我们正在努力改进[主页](https://f-droid.org/wiki/page/Home_page)。如果你可以设计版面，则会对客户端开发人员很有帮助。请将你的贡献发布到[客户端](https://gitlab.com/fdroid/fdroidclient/issues)或[网站](https://gitlab.com/fdroid/fdroid-website/issues)的问题跟踪器。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/How_to_update_an_app.md
#, no-wrap
msgid "How to update an app"
msgstr "如何更新应用"

#. type: Plain text
#: _docs/How_to_update_an_app.md
msgid "What I would like to read here would be:"
msgstr "我想在这里获悉的是:"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "\"What is where, and why?\" - a brief guide through the infrastructure and workflow / scripts."
msgstr "“什么地方，为什么？” —— 基础结构和工作流程/脚本的简要指南。"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "Howto \"update the metadata on gitlab.com/fdroid/fdroiddata\"."
msgstr "如何\"更新 gitlab.com/fdroid/fdroiddata 上的元数据\"。"

#. type: Plain text
#: _docs/How_to_update_an_app.md
msgid "Target group would be developer/release-manager of the apps **and** for the \"external interested user\" who just notices that there is a new version of an app - but not yet in F-Droid system available. \"What would I do to trigger the update?\""
msgstr "目标群体是应用的开发者/发布者**以及**的\"外部感兴趣的用户\"他们刚刚注意到有一个新版本的应用，但 F-Droid 系统尚未提供。 “我将如何触发更新？”"

#. type: Plain text
#: _docs/How_to_update_an_app.md
msgid "@Tverrbjelke: (If s.o. briefs me, I would spend some of my time writing that down. love F-Droid, and hate to see such simple and needed issue is not yet ready. :-) )"
msgstr "@Tverrbjelke: （如果s.o.向我简要介绍，我会花一些时间写下来，我喜欢 F-Droid，但讨厌看到如此简单和必要的问题还没有准备好。:-)）"

#. type: Plain text
#: _docs/How_to_update_an_app.md
msgid "@daithib8: Assuming everything is setup and the user is familiar with building via fdroid … (these instructions take a terminal-based approach. You can manage with a web browser, but it takes quite a while to learn the layout of the common source code websites. For complicated apps that rebase code and use many branches, I'll often visit the source code site too)."
msgstr "@daithib8：假设一切都设置好了，并且用户熟悉通过 F-Droid 构建……（这些说明采用基于终端的方法。你可以使用 Web 浏览器进行管理，但了解常见源代码网站的布局需要相当长的时间。对于重新设置代码基础并使用多个分支的复杂应用，我也会经常访问源代码网站）。"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "Take a note of the current version according to the developer &ndash; a clue is often written above the _CurrentVersion_ in the metadata. To visit Google Play quickly to get the version name there, install w3m and add this function `gplay() { w3m play.google.com/store/apps/details/?id=\"$@\" ;}` to your bashrc. Then you can just do `gplay package-name`. If you find that the version is greater than the _CurrentVersion_ in the metadata, update it right away (unless there are any beta or test builds currently activated)"
msgstr "根据开发人员记下当前版本＆ndash;线索通常写在元数据中的 _CurrentVersion_ 上方。要快速访问 Google Play 以获取版本名称，请安装 w3m 并添加此功能 `gplay() { w3m play.google.com/store/apps/details/?id=\"$@\" ;}`到你的 bashrc。然后你就可以做 `gplay package-name`。如果你发现版本大于元数据中的 _CurrentVersion_，请立即更新（除非当前激活了任何 Beta 或测试版本）"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "If the _CurrentVersion_ in the metadata (especially in the case of the update check mode RepoManifest) is greater than on Google Play or the download page, you may not need to update and can just add a dummy build version e.g `Build Version:1.2,34,!not published by the developer,subdir=main`"
msgstr "如果元数据中的 _CurrentVersion_（特别是在更新检查模式 RepoManifest 的情况下）大于 Google Play 或下载页面上的版本，你可能不需要更新，只需添加一个虚拟构建版本即可，如 `Build Version:1.2,34,!not published by the developer,subdir=main`"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "Clone the source code repository if you don't have it already by building an already existing version (which you can quit once the build is under way)"
msgstr "如果你还没有通过构建现有版本来克隆源代码存储库（一旦构建开始，你可以退出）"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "Change in to the repo: `pushd build/package-name`"
msgstr "更改到存储库中: `pushd build/package-name`"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "`la` to remind onesself of the VCS type.  Let's assume it's Mercurial (with which I am barely familiar)"
msgstr "`la` 提醒自己 VCS 类型。让我们假设它是 Mercurial（我几乎不熟悉它）"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "`hg revert -a; hg pull; hg up` to get the latest code from the repo. Take a note of the new tags"
msgstr "`hg revert -a; hg pull; hg up`以获取最新代码。记下新的 tag"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "`hg log |less` and read the single line descriptions back to the previous version to get a quick idea of the latest changes and find the revision or tag corresponding to the current version noted earlier"
msgstr "`hg log |less` 并将单行描述读回上一版本以快速了解最新更改并找到与前面提到的当前版本相对应的修订或标签"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "` hg up \"tag\"` to switch to the tag or revision (to make sure you are auditing exactly what will be built)"
msgstr "` hg up \"tag\"` 切换到标签或修订版（以确保你正在审核将要构建的内容）"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "`hg log -p` e.g. libs | _build.xml_ | _AndroidManifest.xml_ | _project.properties_ | res/raw | assets | _.gitmodules_ | _.classpath_ to take a closer look at the changes in some of the important files (as far as updating is concerned). If new jars (or new versions of old ones) are found then they must be verified to see they were found from canonical sources and are free with source code;the first thing to try is to open the jar to see the class names (`unzip -l`) and visit e.g.  <http://central.maven.org/maven2/io/netty/> where you will find checksums to compare with. Take a note of jars such as bugsense or ACRA which are used for bug reports"
msgstr "`hg log -p` 例如 libs | _build.xml_ | _AndroidManifest.xml_ | _project.properties_ | res/raw | assets | _.gitmodules_ | _.classpath_ 仔细查看一些重要文件的变化（就更新而言）。如果找到新 jar（或旧 jar 的新版本），则必须对其进行验证，以查看它们是从规范来源中找到的，并且自由开源；首先要尝试打开 jar 以查看类名（`unzip -l`) 并访问例如 <http://central.maven.org/maven2/io/netty/> 在这里你可以找到校验和进行比较。记下用于错误报告的 jar，例如 bugsense 或 ACRA"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "If you find proprietary files add a dummy build version to the metadata with a few words about the reason, add _NoSourceSince_ to the bottom and a line to the description beginning with Status: to the description explaining the reason that the app can't be updated"
msgstr "如果你发现私有文件在元数据中添加了一个虚拟构建版本，并在元数据中添加了一些关于原因的词，请在底部添加 _NoSourceSince_ 并在描述中添加一行以 Status: 开头的说明应用无法更新"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "`find . -type f -executable` to locate any scripts and things. Note that ant will also execute anything it finds in _build.xml_ and custom_rules.xml!"
msgstr "`find . -type f -executable` 来定位任何脚本和事物。请注意，ant 还会执行它在 _build.xml_ 和 custom_rules.xml 中找到的任何内容！"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "`$find . -name '\\*' | xargs file --mime | grep executable|shared-lib` to see if any prebuilts are around. These would often be detected by fdroid anyway and would usually be located in res/raw/ , assets/ or jni/."
msgstr "`$find .-name '\\*'| xargs file --mime | grep executable|shared-lib` 来看看周围是否有预编译器。这些通常会被 F-Droid 检测到，并且通常位于res/raw/ , assets/ 或jni/。"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "Open some files in your editor, like the README, licenses, possibly files in res/xml that would contain changelogs, project.properties; run `git submodule` if applicable. All these will give clues about what might need changing from the previous build. It's very possible that no info will be given about Android libraries so you'll have to look for other clues, in the commit log for instance. If all else fails: `cd ../srclibs/ActionLibrary` and checkout out the latest code to find a suitable commit."
msgstr "在你的编辑器中打开一些文件，比如 README、许可证，可能是 res/xml 中包含变更日志、project.properties 的文件；如果适用，运行 `git submodule`。所有这些都将提供有关可能需要从以前的构建中更改哪些内容的线索。很可能不会提供有关 Android 库的信息，因此你必须寻找其他线索，例如在提交日志中。如果一切都失败了： `cd ../srclibs/ActionLibrary` 并检查最新的代码以找到合适的提交。"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "Write a patch if necessary although sed in the metadata is usually the better option: `mkdir ../../metadata/package-name; hg diff > ../../metadata/package-name.diff`"
msgstr "必要时编写补丁，尽管元数据中的 sed 通常是更好的选择： `mkdir ../../metadata/package-name; hg diff > ../../metadata/package-name.diff`"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "`popd; vi metadata/package-name.txt` to add a new Build Version"
msgstr "`popd; vi metadata/package-name.txt`添加一个新的构建版本"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "Test with `fdroid build -p package-name -t -l -v | less` (use the completion script in fdroidserver) N.B --install doesn't currently warn if version names/codes are different from the metadata. Also proguard isn't enabled (since it is a debug build); neither will it warn you if it hasn't been installed for some reason."
msgstr "用`fdroid build -p package-name -t -l -v | less`（使用 fdroidserver 中的完成脚本） 请注意， --install 目前不会在版本名称/代码与元数据不同时发出警告。此外，proguard 也没有启用（因为它是一个调试构建）；如果由于某种原因没有安装，它也不会警告你。"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "Sign with a debug key `jarsigner -keystore \\~/.android/debug.keystore -digestalg SHA1 -sigalg SHA1withRSA tmp/com.seawolfsanctuary.keepingtracks_20130727.apk androiddebugkey`"
msgstr "用调试密钥签名 `jarsigner -keystore\\~/.android/debug.keystore -digestalg SHA1 -sigalg SHA1withRSA tmp/com.seawolfsanctuary.keepingtracks_20130727.apk androiddebugkey`"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "`adb install tmp/com.seawolfsanctuary.keepingtracks_20130727.apk -a` and have look at the result. Look at the about screen in particular.  If bug report libraries are in use verify that crash reporting is optional (the Android Manifest can help here). If crash reporting is on by default the app needs an anti-feature. Same thing applies to ads."
msgstr "`adb install tmp/com.seawolfsanctuary.keepingtracks_20130727.apk -a`并看看结果。特别是看一下“关于”屏幕。 如果使用了错误报告库，请确认崩溃报告是可选的（Android Manifest 在这里可以提供帮助）。如果崩溃报告是默认打开的，那么该应用需要一个负面特征。广告同理。"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "Add any info for the next time above AutoUpdateMode, and see if the update check mode needs any tweaking."
msgstr "在 AutoUpdateMode 上方添加下一次的任何信息，并查看更新检查模式是否需要任何调整。"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "Have a quick look at the description and URLs to see if anything needs updating"
msgstr "快速查看描述和网址，看看是否有任何需要更新的内容"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "Commit new srclibs and extlibs `git commit build/extlibs/volley/\\*` and include a source.txt if a jar is from a new location"
msgstr "提交新的 srclibs 和 extlibs `git commit build/extlibs/volley/*` 并且如果 jar 来自新的位置，则包括 source.txt"

#. type: Bullet: '-   '
#: _docs/How_to_update_an_app.md
msgid "If there is nothing special, commit directly with the commitupdates script. If not, include as much info as you can in the body of the git commit"
msgstr "如果没有什么特别的，直接用 commitupdates 脚本提交。如果没有，请在 git commit 的正文中包含尽可能多的信息"

#. type: Plain text
#: _docs/How_to_update_an_app.md
msgid "That's a lot of things to do, but experience shows that it's a good idea to be vigilant and of course the process gets faster with time... Good luck!"
msgstr "要做的事情很多，但经验表明，保持警惕是个好主意，当然，随着时间的推移，这个过程会越来越快...... 祝你好运!"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Importing_Applications.md
#, no-wrap
msgid "Importing Applications"
msgstr "导入应用"

#. type: Plain text
#: _docs/Importing_Applications.md
msgid "To help with starting work on including a new application, use `fdroid import` to set up a new template project. It has two modes of operation, starting with a cloned git repo:"
msgstr "为了开始新应用的收录工作，请使用 `fdroid import` 设置新的模板项目。它有两种操作模式，从克隆的 git 代码库开始："

#. type: Fenced code block (bash)
#: _docs/Importing_Applications.md
#, no-wrap
msgid ""
"git clone https://gitlab.com/fdroid/fdroidclient\n"
"cd fdroidclient\n"
"fdroid import\n"
msgstr ""
"git clone https://gitlab.com/fdroid/fdroidclient\n"
"cd fdroidclient\n"
"fdroid import\n"

#. type: Plain text
#: _docs/Importing_Applications.md
msgid "Or starting with a URL to a project page:"
msgstr "或者从项目页面的 URL 开始："

#. type: Fenced code block (bash)
#: _docs/Importing_Applications.md
#, no-wrap
msgid "fdroid import --url=http://address.of.project\n"
msgstr "fdroid import --url=http://address.of.project\n"

#. type: Plain text
#: _docs/Importing_Applications.md
msgid "When a URL is specified using the `--url=` flag, `fdroid import` will use that URL to find out information about the project, and if it finds a git repo, it will also clone that. For this to work, the URL must point to a project format that the script understands. Currently this is limited to one of the following:"
msgstr "当使用`--url=`标志指定一个 URL 时，`fdroid import` 将使用这个 URL 来查找项目的信息，如果找到一个 git 代码库就会克隆它。为了使其发挥作用，URL 必须指向脚本所理解的项目格式。目前，这只限于以下格式之一:"

#. type: Bullet: '1.  '
#: _docs/Importing_Applications.md
msgid "GitLab - `https://gitlab.com/<PROJECTNAME>/<REPONAME>`"
msgstr "GitLab - `https://gitlab.com/<PROJECTNAME>/<REPONAME>`"

#. type: Bullet: '3.  '
#: _docs/Importing_Applications.md
msgid "GitHub - `https://github.com/<USER>/<PROJECT>`"
msgstr "GitHub - `https://github.com/<USER>/<PROJECT>`"

#. type: Bullet: '4.  '
#: _docs/Importing_Applications.md
msgid "Bitbucket - `https://bitbucket.org/<USER>/<PROJECT>/`"
msgstr "Bitbucket - `https://bitbucket.org/<USER>/<PROJECT>/`"

#. type: Bullet: '5.  '
#: _docs/Importing_Applications.md
msgid "NotABug - `https://notabug.org/<USER>/<PROJECT>`"
msgstr "NotABug - `https://notabug.org/<USER>/<PROJECT>`"

#. type: Bullet: '6.  '
#: _docs/Importing_Applications.md
msgid "Git - `git://<REPO>` or `https://<REPO>`"
msgstr "GitHub - `https://github.com/<USER>/<PROJECT>`"

#. type: Plain text
#: _docs/Importing_Applications.md
msgid "Depending on the project type, more or less information may be gathered.  A bare repo URL, such as the git:// one, is the least preferable option of all, since you will have to enter much more information manually. While _gradle_ based builds should be auto-detected for all types, links to issue trackers can not be set for plain git projects. You can also use one of the following arguments to pre-fill your metadata:"
msgstr "项目类型不同，收集到的信息量就可能不同。 裸代码库 URL（如 git:// URL）是最不可取的选项，因为你必须手动输入很多信息。虽然基于 _gradle_ 的构建应该针对所有类型的版本进行自动检测，但对于普通 git 项目，不能设置指向问题跟踪器的链接。你还可以使用以下参数之一来预填充元数据："

#. type: Bullet: '* '
#: _docs/Importing_Applications.md
msgid "`-u <URL>`, `--url=<URL>`: Project URL to import from."
msgstr "`-u <URL>`, `--url=<URL>`：要导入的项目的 URL。"

#. type: Bullet: '* '
#: _docs/Importing_Applications.md
msgid "`-s <DIR>`, `--subdir=<DIR>`: Path to main android project subdirectory, if not in root."
msgstr "`-s <DIR>`, `--subdir=<DIR>`: 如果该项目不在根目录下，则指定主 Android 项目子目录的路径。"

#. type: Bullet: '* '
#: _docs/Importing_Applications.md
msgid "`-c <CATEGORIES>`, `--categories=<CATEGORIES>`: Comma separated list of categories."
msgstr "`-c <CATEGORIES>`, `-categories=<CATEGORIES>`: 逗号分隔的类别列表。"

#. type: Bullet: '* '
#: _docs/Importing_Applications.md
msgid "`-l <LICENSE>`, `--license=<LICENSE>`: Overall license of the project."
msgstr "`-l <LICENSE>`, `--license=<LICENSE> `: 项目整体的许可。"

#. type: Bullet: '* '
#: _docs/Importing_Applications.md
msgid "`--revision <REV>`: Allows a different revision (or git branch) to be specified for the initial import"
msgstr "`--revision <REV>`：允许为初始导入指定不同的修订版（或 git 分支）"

#. type: Plain text
#: _docs/Importing_Applications.md
msgid "If the import is successful, a metadata file will be created. You will need to edit this further to check the information, and fill in the blanks."
msgstr "如果导入成功，将创建一个元数据文件。你将需要进一步编辑这个文件，以检查信息并填写空白处。"

#. type: Plain text
#: _docs/Importing_Applications.md
msgid "If it fails, you'll be told why. If it got as far as retrieving the source code, you can inspect it further by looking in `tmp/importer` where a full checkout will exist."
msgstr "如果导入失败了，你会被告知原因。如果它检索到了源代码，你可以在 `tmp/importer` 中进一步检查，那里会有完整的 checkout。"

#. type: Plain text
#: _docs/Importing_Applications.md
msgid "A frequent cause of initial failure is that the project directory is actually a subdirectory in the repository. In this case, run the importer again using the `--subdir` option to tell it where. It will not attempt to determine this automatically, since there may be several options."
msgstr "初次导入失败的一个常见原因是，项目目录实际上是存储库中的一个子目录。在这种情况下，再次运行导入程序，并使用 `--subdir` 选项告诉它项目目录的位置。导入程序不会尝试自动确定项目目录，因为可能有多个选项。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "Inclusion How-To"
msgstr "收录指南"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "This page documents how a new application gets included in the main F-Droid repository. It includes the technical details that a submitter should be aware of."
msgstr "本页记录了如何将新应用收录到 F-Droid 主存储库，包含了提交者应注意的技术细节信息。"

#. type: Title ##
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "Application Inclusion Proposal"
msgstr "应用收录提议"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "To propose inclusion of a new application to the main F-Droid repository, one could post the applications relevant information to the Submission Queue. The more advanced alternative is writing a complete metadata file yourself, test, and propose inclusion (merge request) directly into the fdroiddata Git repository; speeding up the process. Both ways will be described below in detail."
msgstr "要提议将新应用收录到主 F-Droid 存储库中，你可以将此应用的相关信息发布到提交队列中。更高级的替代方法是自己编写一个完整的元数据文件，测试并直接向 fdroiddata Git 存储库提出收录（合并请求），这样可以加快收录进程。下面将详细描述这两种方式。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "Note that you can propose inclusion even you are not a developer or maintainer of the proposed application itself. See [Inclusion Policy](../Inclusion_Policy) and [Repository Style Guide](../Repository_Style_Guide) for the policy aspect of this section."
msgstr "注意，即使你不是所提议的应用本身的开发者或维护者，也可以提议收录。关于这部分的政策，请参见[收录政策](../Inclusion_Policy)和[版本库风格指南](../Repository_Style_Guide)。"

#. type: Title ###
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "Proposal by Submission Queue"
msgstr "将提案发布到提交队列"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "This is the simplest way to get the application included. But due to an amount of reviewer labor required for each application, this is the slowest method."
msgstr "这是收录应用的最简单方法。但是由于每个应用都需要大量的审阅工作，这也是最慢的方法。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "Do this by creating a new ticket at the [F-Droid Submission Queue on GitLab](https://gitlab.com/fdroid/rfp/issues), add all details required by the minimal issue template; and wait for people in F-Droid team to review the application and do all necessary steps for you."
msgstr "为此，请在 [GitLab 上的 F-Droid 提交队列](https://gitlab.com/fdroid/rfp/issues) 中创建新 ticket，添加最小问题模板所需的所有详细信息；并等待 F-Droid 团队的人员审核应用，并为你执行所有必要的步骤。"

#. type: Title ###
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "Proposal by Metadata Merge Request"
msgstr "元数据合并请求的提案"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "A more advanced alternative for application inclusion is to write an F-Droid metadata file for the application yourself, and propose inclusion by filing a git merge request on the F-Droid application metadata repository ([fdroiddata GitLab repository](https://gitlab.com/fdroid/fdroiddata/)). This will lead to much quicker inclusion as the already-available metadata file will reduce the burden on reviewers when inspecting your proposed metadata; the submitter assumes responsibility of providing a correct metadata file."
msgstr "将应用收录进 F-Droid 存储库的一个更高级的替代方法是自己为应用编写一个 F-Droid 元数据文件，并在 F-Droid 应用元数据存储库（[fdroiddata GitLab 代码库](https://gitlab .com/fdroid/fdroiddata/)) 提交一个 git 合并请求来提议收录。这将加快应用收录速度，因为已经可用的元数据文件将减轻审阅者检查你提议的元数据的负担；由提交者来负责提供正确的元数据文件。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "When proposing inclusion this way, it is assumed that:"
msgstr "当以这种方式提议收录时，假设："

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "You have a good understanding of what [Free Software](https://www.gnu.org/philosophy/free-sw.html) means, and what F-Droid is for."
msgstr "你对 [自由软件](https://www.gnu.org/philosophy/free-sw.html) 的含义以及 F-Droid 的用途非常了解。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "You already read and understand the [Inclusion Policy](../Inclusion_Policy)."
msgstr "你已经阅读并理解 [收录政策](../Inclusion_Policy)。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "You already read and understand the [Repository Style Guide](../Repository_Style_Guide)."
msgstr "你已经阅读并理解了 [版本库风格指南](../Repository_Style_Guide)。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "You already read and understand [the relevant parts of the F-Droid documentation](../Build_Metadata_Reference)."
msgstr "你已经阅读并理解了 [F-Droid 文档的相关部分](../Build_Metadata_Reference)。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "You know how to use [Git VCS](https://git-scm.com/), and know how a merge request (a.k.a. \"pull request\" in GitHub terminology) works in general."
msgstr "你知道如何使用 [Git VCS](https://git-scm.com/)，并了解合并请求（在 GitHub 术语中也称为“拉取请求”）的一般工作原理。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "You have an account on [GitLab](https://gitlab.com/) _(NOTE: F-Droid CI runners are under Gitlab's FOSS program, so there's no need for you to pay for any CI time. If Gitlab starts asking for phone numbers or credit cards don't submit anything, just leave a note in the MR so we know we need to trigger the CI.)_"
msgstr "你在 [GitLab](https://gitlab.com/) 上有账户 _(注意：: F-Droid CI runners 在 Gitlab 的 FOSS 项目中，因此你无需为任何 CI 时间支付费用。如果 Gitlab 开始询问手机号或信用卡号，请不要提交任何信息，只需在合并请求中留下附注，这样我们就知道需要触发 CI 了)_"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "You have a local instance of the F-Droid server software, and you know what you are doing."
msgstr "你有 F-Droid 服务器软件的本地实例，并且你知道自己在做什么。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "Recommended steps to propose inclusion this way are written on the [F-Droid application metadata repository](https://gitlab.com/fdroid/fdroiddata/blob/master/CONTRIBUTING.md)."
msgstr "[F-Droid 应用元数据存储库](https://gitlab.com/fdroid/fdroiddata/blob/master/CONTRIBUTING.md) 上写了建议以这种方式包含的建议步骤。"

#. type: Title ##
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "Application Review Process"
msgstr "应用审核流程"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "Once the inclusion proposal is filed, the application will enter a reviewing process where F-Droid staff look into the applications source code and determine whether the it fits for inclusion (and when it's not, determine all necessary steps to make it so)."
msgstr "提交包含提案后，应用将进入审核流程，F-Droid 工作人员将查看应用的源代码并确定它是否适合收录（如果不是，则确定所有必要的步骤）。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "As F-Droid is a software repository which promises users free software, a review process is for ensuring that all applications distributed from the F-Droid main repository are Free Software."
msgstr "由于 F-Droid 是一个向用户承诺自由软件的软件存储库，审查过程是为了确保从 F-Droid 主存储库分发的所有应用都是自由软件。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "This is a nonexhaustive list of what a reviewer would do:"
msgstr "这是一个非详尽的列表，列出了审核者会做什么："

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will go to your source code repository, and look for copyright notices in license files, including README, to check that the proposed application is released under a [recognized Free Software and/or OSI license(s)](https://spdx.org/licenses/)."
msgstr "他们将转到你的源代码存储库，并在许可文件（包括 README）中查找版权声明，以检查提议的应用是基于 [公认的自由软件和/或 OIS 许可证](https://spdx.org/licenses/) 发布的。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will look at your build script to see which build system you use, and whether F-Droid build server can handle it (Ant and Gradle are the most common and easiest ones)."
msgstr "他们会查看你的构建脚本，以了解你使用的构建系统，以及 F-Droid 构建服务器是否可以处理它（Ant 和 Gradle 是最常见和最简单的）。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will try to download a copy of your source code."
msgstr "他们将尝试下载你的源代码的副本。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will look in all source code files to verify that their licenses are consistent with corresponding license/README files."
msgstr "他们会查看所有的源代码文件，以验证其许可证是否与相应的许可证/README文件一致。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will check if your application uses any pre-compiled libraries or binary blobs."
msgstr "他们将检查应用是否使用任何预编译的库或二进制 blob。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will look at your non-source code files to identify [Non-Free resources](https://monitor.f-droid.org/anti-feature/NonFreeAssets) used in your application."
msgstr "它们会查看你的非源代码文件来识别用于你的应用中的[非自由资源](https://monitor.f-droid.org/anti-feature/NonFreeAssets)."

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will skim through the source code to see if your application uses Non-Free dependencies, shows advertisements, tracks users, promotes or depends on Non-Free or non-changeable services/applications, or does anything that is harmful or otherwise undesirable for users."
msgstr "他们将浏览源代码，以查看你的应用是否使用非自由依赖项、显示广告、跟踪用户、推广或依赖非自由或不可更改的服务/应用，或执行任何对用户有害或不受欢迎的操作。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will list a summary of any [_AntiFeatures_](https://monitor.f-droid.org/anti-features) in your application."
msgstr "他们将列出你的应用中所有 [_负面特征_](https://monitor.f-droid.org/anti-features) 的摘要。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will try patching your application to remove usage of third-party proprietary software (if there is any)."
msgstr "他们将尝试修补你的应用，以移除对第三方私有软件（若有）的使用。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will try to determine a suitable update process for your application (e.g. by looking at how your releases relate to VCS tags and/or version information in _AndroidManifest.xml_)."
msgstr "他们将尝试为你的应用确定一个合适的更新过程（例如，通过查看你的版本与 VCS 标签和/或 _AndroidManifest.xml_ 中的版本信息的关系）。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will try writing a suitable metadata file for your application, and add it to local F-Droid build server instance.  (`fdroid rewritemeta`, `fdroid lint` are used to ensure that metadata is well-formed)"
msgstr "他们将尝试为你的应用编写合适的元数据文件，并将其添加到本地 F-Droid 构建服务器实例。 （`fdroid rewritemeta`, `fdroid lint` 用于确保元数据格式良好）"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "They will try to build your application in an isolated environment to see if the process succeeds and yield a functional APK."
msgstr "他们将尝试在隔离的环境中构建你的应用，以查看该过程是否成功并产生功能正常的 APK。"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "If all went smoothly, they will add a new metadata file to their local fdroiddata git repository and synchronizes the change to GitLab."
msgstr "如果一切顺利，他们将向本地 fdroiddata git 存储库添加一个新的元数据文件，并将更改同步到 GitLab。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "In the case that the application failed some steps in the review, feedback will be given in the original submission queue thread where the proposal was posted."
msgstr "如果申请没有通过审核的某些步骤，将在发布提案的原始提交队列主题中给出反馈。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "Once the fdroiddata repository is updated on GitLab, it's mostly just a matter of time before F-Droid's official build server will fetch, build, and publish your application on the main F-Droid repository."
msgstr "一旦 fdroiddata 存储库在 GitLab 上更新，F-Droid 的官方构建服务器将在主 F-Droid 存储库上 fetch、构建和发布你的应用通常只是时间问题。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "You can confirm the inclusion of your application by looking at the [GitLab fdroiddata revision history](https://gitlab.com/fdroid/fdroiddata/commits/master)."
msgstr "你可以通过查看 [GitLab fdroiddata 修订历史](https://gitlab.com/fdroid/fdroiddata/commits/master) 来确认包含你的应用。"

#. type: Title ###
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "Special Consideration of Metadata Merge Request"
msgstr "元数据合并请求的特殊注意事项"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "In case the inclusion is from a GitLab merge request, the review process is theoretically the same. They are done mostly to confirm that the proposed metadata is consistent with what is really in the application source code. Steps about writing and committing metadata are omitted, as they will use the original metadata file you proposed.  Feedback will be given on the original merge request thread that the application was proposed; and once the process is completed, the request will be merged to the `master` branch of the fdroiddata GitLab repository."
msgstr "如果是来自 GitLab 的合并请求，审查过程理论上是一样的。他们主要是为了确认提议的元数据与应用的源代码中的内容是一致的。有关编写和提交元数据的步骤被省略了，因为他们会使用你提议的原始元数据文件。 反馈将在提出该应用的原始合并请求中给出；一旦该过程完成，该请求将被合并到 fdroiddata GitLab 存储库的 `master` 分支。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "In an attempt to optimize the process, when you proposed inclusion via metadata merge request, F-Droid staff rely on several assumptions ([outlined above](#Proposal_by_Metadata_Merge_Request)). As such, the reviewing process will be much less intensive in several respects, and consumes much less time. Policy-violating applications that somehow sneaked in this way will be dealt with after the fact."
msgstr "为了优化流程，当你提议通过元数据合并请求包含时，F-Droid 工作人员依赖于几个假设（[上面概述](#Proposal_by_Metadata_Merge_Request)）。因此，审查过程在几个方面的强度会大大降低，并且消耗的时间也会少得多。以这种方式偷偷摸摸的违反政策的应用将在事后得到处理。"

#. type: Title ###
#: _docs/Inclusion_How-To.md _docs/Reproducible_Builds.md
#, no-wrap
msgid "Reproducible Builds"
msgstr "可重复构建"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "Reproducible builds are not a requirement for apps being on F-Droid. But we do consider their use best practice. And unfortunately, one can't easily switch to them later because Android doesn't allow updates with a different signing key, meaning users would have to reinstall. So we mainly encourage their use for new apps."
msgstr "要在 F-Droid 上发布应用，可重复构建不是必需条件。但我们的确认使用可重复构建是最佳实践。不幸的是，因为 Android 不允许签名密钥不同的更新，切换到可重复构建不是那么容易。这意味着切换后用户必须重新安装应用。因此，我们主要鼓励新应用使用可重复构建。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "The point of reproducible builds is that the developer's signature (from the APK they publish) guarantees that our build is identical to theirs (and thus doesn't contain anything it shouldn't) and at the same time our build server verifies that the developer's build matches the published source code (and thus doesn't contain anything it shouldn't either)."
msgstr "可重复构建的好处是开发者的签名（来自所发布的 APK）确保我们的构建和开发者的相同（因而不包含任何不应包含的东西），与此同时我们的构建服务器验证开发者的构建与所发布的源代码相匹配（因此同样不包含任何不应包含的东西）。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "This increases trust and makes supply-chain attacks harder. It also makes it impossible for there to be a bug in the F-Droid version only (or vice versa).  Using the developer's key also means they have the option of providing updates to users themselves if we for some reason (temporarily) cannot."
msgstr "这么做可增加信任度并加大供应链攻击难度。此外，也确保不会有只存在于 F-Droid 版本的故障（反过来也一样）。  使用开发者密钥还意味着开发者在我们出于某些原因（暂时）无法向用户提供更新时可选择自行向用户提供更新。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "Some apps -- especially those without native code, using only Kotlin/Java -- are very easy to make reproducible. Others may require more work. Sadly, some apps cannot be made reproducible at all."
msgstr "可重复构建对于某些应用，尤其是那些没有原生代码，仅使用 Kotlin/Java 语言的应用，非常容易。其他应用可能需要更多努力才能做到。令人难过的是，某些应用根本无法实现可重复构建。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "We hope that developers agree with us that it's at least worth attempting to make their apps reproducible given the various benefits, but if they are unable or unwilling to spend time/resources on this, we of course respect their decision."
msgstr "我们希望开发者认同我们的观点，即鉴于各种好处，至少值得试着让应用变得可重复，但要是开发者无法或不愿意在这上面花时间/精力，我们当然尊重开发者的决定。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "For more information, see:"
msgstr "更多信息，请参阅："

#. type: Bullet: '* '
#: _docs/Inclusion_How-To.md
msgid "[Towards a reproducible F-Droid](https://f-droid.org/2023/01/15/towards-a-reproducible-fdroid.html)"
msgstr "[向着可重复的 F-Droid 前进](https://f-droid.org/2023/01/15/towards-a-reproducible-fdroid.html)"

#. type: Bullet: '* '
#: _docs/Inclusion_How-To.md
msgid "[F-Droid's Reproducible Builds documentation](../Reproducible_Builds)"
msgstr "[F-Droid 的可重复构建文档](../Reproducible_Builds)"

#. type: Bullet: '* '
#: _docs/Inclusion_How-To.md
msgid "[Reproducible Builds project](https://reproducible-builds.org/)"
msgstr "[可重复构建项目](https://reproducible-builds.org/)"

#. type: Bullet: '* '
#: _docs/Inclusion_How-To.md
msgid "[HOWTO: diff & fix APKs for Reproducible Builds](https://gitlab.com/fdroid/wiki/-/wikis/HOWTO:-diff-&-fix-APKs-for-Reproducible-Builds)"
msgstr "[HOWTO: diff & fix APKs for Reproducible Builds](https://gitlab.com/fdroid/wiki/-/wikis/HOWTO:-diff-&-fix-APKs-for-Reproducible-Builds)"

#. type: Title ##
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "Build Process"
msgstr "构建过程"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "After the application metadata is added to fdroiddata GitLab repository, the next step is for the main F-Droid build server to fetch the applications source code and related components, build the application, and publish it on the main F-Droid repository."
msgstr "将应用的元数据添加到 fdroiddata GitLab 存储库后，下一步是让主 F-Droid 构建服务器获取应用源代码和相关组件，构建应用，并将其发布到主 F-Droid 存储库上。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "This build process is done **daily**, and applications are processed in batch. As steps are done behind the scene and are mostly automatic; all the submitter needs to do is to wait for it to finish."
msgstr "这个构建过程 **每天** 完成，应用是批量处理的。由于步骤是在幕后完成的，而且大多是自动的；提交者需要做的就是等待它完成。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "A record of a successful build process for one application is provided on the F-Droid's website page for that specific app (e.g. [see the Build Log for the F-Droid Client](https://f-droid.org/packages/org.fdroid.fdroid/#latest))."
msgstr "一则某个应用成功构建过程的记录可以在该特定应用的 F-Droid 网站页面上找到 (如 [查看 F-Droid 客户端的构建日志](https://f-droid.org/packages/org.fdroid.fdroid/#latest)）。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "Apps that fail will have the log available during the build cycle on the [F-Droid Monitor - Running](https://monitor.f-droid.org/builds/running) page or, if in the previous cycle, on the [Build](https://monitor.f-droid.org/builds/build) page.  This is useful to aid in diagnosing problems when the build unexpectedly failed."
msgstr "你可在 [F-Droid Monitor - Running](https://monitor.f-droid.org/builds/running) 页面查看本周期构建失败的应用的日志, 上一周期构建失败的应用的日志可在 [Build](https://monitor.f-droid.org/builds/build) 页面上找到。这有助于在构建意外失败时帮助诊断问题。"

#. type: Title ###
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "Metadata Refreshing Process"
msgstr "元数据刷新过程"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "When the scheduled building time arrives, the F-Droid build server will fetch changes from the fdroiddata GitLab repository and merge it to a local repository. Then, update checks will be performed for all applications. If a new version is found, their metadata files will be updated and committed to the repository by the author `F-Droid checkupdates (@fdroidci)`."
msgstr "当预定的构建时间到达时，F-Droid 构建服务器将从 fdroiddata GitLab 代码库中获取更改并将其合并到本地代码库。然后，将对所有应用执行更新检查。如果发现新版本，其元数据文件将由作者 `F-Droid checkupdates (@fdroidci)` 更新并提交到存储库。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "Once metadata files are updated, the F-Droid Server will check them against a list of released APKs to construct a list of new applications and/or versions that need to be built. It will then enter the application preprocessing process, followed by the build process for each of them."
msgstr "元数据文件更新后，F-Droid 服务器将根据已发布的 APK 列表检查它们，以构建需要构建的新应用和/或版本列表。然后它将进入应用预处理过程，然后是每个应用的构建过程。"

#. type: Title ###
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "Application Preprocessing"
msgstr "应用预处理"

#. type: Title ###
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "Application Build Process"
msgstr "应用构建过程"

#. type: Title ###
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "APK Signing Process"
msgstr "APK 签名流程"

#. type: Title ###
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "Repository Publishing Process"
msgstr "存储库发布过程"

#. type: Title ##
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "What to Expect"
msgstr "预期的情况"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "When your application metadata is approved and accepted into the fdroiddata git repository on GitLab, **it won't immediately appear** in the main F-Droid repository."
msgstr "当你的应用元数据被批准并接受到 GitLab 上的 fdroiddata git 存储库时，**它不会立即出现在**主 F-Droid 存储库。"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "Provided that your application does not have any build problems, it would takes somewhere **around 24 to 48 hours** from fdroiddata merge until the application to appears in the main repository.[1](https://f-droid.org/forums/topic/how-fast-the-main-f-droid-repository-updates/)  This timing limitation is due to the APK signing part of the build process, which requires human intervention on keystore access step.[2](https://f-droid.org/forums/topic/encouraging-f-droid-participation-by-developers/#post-17868)"
msgstr "如果你的应用没有任何构建问题，那么从 fdroiddata 合并到应用出现在主存储库中，大约需要 **24 到 48 小时**。[1](https://f-droid .org/forums/topic/how-fast-the-main-f-droid-repository-updates/) 这个时间限制是由于构建过程的 APK 签名部分，这需要人为干预密钥库访问步骤。 [2 ](https://f-droid.org/forums/topic/encouraging-f-droid-participation-by-developers/#post-17868)"

#. type: Plain text
#: _docs/Inclusion_How-To.md
msgid "Nevertheless, your application will not appear in f-droid.org's Lastest Apps list just yet, even though people can now already search and download it: Once the application appeared in the main F-Droid repository, it would take another day before appearing on [Latest Apps list](https://f-droid.org/)."
msgstr "尽管如此，你的应用还不会出现在 f-droid.org 的最新应用列表中，即使人们现在已经可以搜索和下载它：一旦应用出现在 F-Droid 主存储库中，它需要一天的时间才能出现在[最新应用列表](https://f-droid.org/)。"

#. type: Title ##
#: _docs/Inclusion_How-To.md
#, no-wrap
msgid "External Links"
msgstr "外部链接"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "[F-Droid application submission queue on GitLab](https://gitlab.com/fdroid/rfp/issues) (for new submissions)"
msgstr "[GitLab上的F-Droid应用提交队列](https://gitlab.com/fdroid/rfp/issues) (用于新的提交)"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "[F-Droid application submission queue on forum](https://f-droid.org/forums/forum/submission-queue/) (for following-up old submissions)"
msgstr "[论坛上的 F-Droid 应用提交队列](https://f-droid.org/forums/forum/submission-queue/) (用于跟进旧的提交)"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "[fdroiddata GitLab repository](https://gitlab.com/fdroid/fdroiddata/)"
msgstr "[fdroiddata GitLab 存储库](https://gitlab.com/fdroid/fdroiddata/)"

#. type: Bullet: '-   '
#: _docs/Inclusion_How-To.md
msgid "[fdroiddata revision history](https://gitlab.com/fdroid/fdroiddata/commits/master)"
msgstr "[fdroiddata 修订历史](https://gitlab.com/fdroid/fdroiddata/commits/master)"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Inclusion_Policy.md
#, no-wrap
msgid "Inclusion Policy"
msgstr "收录政策"

#. type: Plain text
#: _docs/Inclusion_Policy.md
msgid "All applications in the repository must be Free, Libre and Open Source Software (FLOSS) – for example, released under a GPL or Apache license. Every effort is made to verify that this is actually the case, both by visual inspection of the source, and by building the application from the published source.  To determine which licenses are FLOSS, We defer to widely trusted organizations that have a proven track record.  Specifically, we acknowledge these standards: [DFSG](https://wiki.debian.org/DFSGLicenses), [FSF](https://www.fsf.org/licensing), [GNU](https://www.gnu.org/licenses/license-list.html), and [OSI](https://opensource.org/licenses) _(read a quick overview of them all on [SPDX](https://spdx.org/licenses/))_."
msgstr "存储库中的所有应用都必须是自由开源软件(FLOSS)——例如，在 GPL 或 Apache 许可下发布。检查源代码、从已发布的源代码构建应用，以尽可能地确保情况确实如此。为了确定哪些许可证是 FLOSS 的，我们遵从拥有良好记录的广受信任的组织。具体来说，我们承认这些标准：[DFSG](https://wiki.debian.org/DFSGLicenses)、 [FSF](https://www.fsf.org/licensing)、[GNU](https://www.gnu.org/licenses/license-list.html) 和 [OSI](https://opensource.org/licenses)。_（要阅读所有这些的快速概览，请访问 [SPDX](https://spdx.org/licenses/)) _。"

#. type: Plain text
#: _docs/Inclusion_Policy.md
msgid "For software to be FLOSS, the software in its entirety must be so - including all libraries and dependencies used. Additionally, it must be buildable with only FLOSS tools."
msgstr "要使软件成为 FLOSS，整个软件都必须如此——包括使用的所有库和依赖项。此外，它必须仅使用 FLOSS 工具即可构建。"

#. type: Plain text
#: _docs/Inclusion_Policy.md
#, no-wrap
msgid ""
"Notably:\n"
"-   The original app author has been notified (and does not oppose the inclusion).\n"
"    Distributing an app will bring more support cases for the developers, not\n"
"    only from the actual users but from F-Droid itself as app development is\n"
"    never a done and set deal in an ever evolving Android landscape.\n"
"-   We cannot build apps using Google's proprietary \"Play Services\".\n"
"    Please talk to upstream about an untainted build flavor (either\n"
"    using microg or removing Non-Free dependencies completely).\n"
"-   We cannot build apps using proprietary tracking/analytic\n"
"    dependencies like Crashlytics and Firebase. Please talk to upstream\n"
"    about an untainted build flavor (either using a FLOSS analytics\n"
"    software like ACRA or by removing Non-Free dependencies completely).\n"
"-   We cannot build apps using proprietary ad libraries. We have nothing\n"
"    against advertisements (see [_Anti-Features_](../Anti-Features)),\n"
"    but they must be provided by a FLOSS-compatible way.\n"
"-   We cannot build apps requiring Non-Free build tools, including\n"
"    Oracle's JDK or some pre-release toolchains.\n"
msgstr ""
"注意事项：\n"
"-   原应用作者已被通知（且不反对上架）。\n"
"    分发一款应用会给开发者带来更多支持请求，不单\n"
"    来自实际用户，也来自F-Droid 自身，因为应用开发\n"
"    在始终变化的 Android 领域是一项永无止息的任务。.\n"
"-   我们无法使用 Google 专有的 \"Play Services\"构建应用。\n"
"    有关使用替代方法构建应用的事宜请联系上游 （要么\n"
"    使用 microg，要么彻底删除非自由依赖项)。\n"
"-   我们无法使用专有的跟踪/分析\n"
"    依赖，比如 Crashlytics 和 Firebase， 进行构建。关于使用替代方法进行\n"
"    构建的事宜也请联系上游 （要么使用 FLOSS 的分析\n"
"    软件，比如 ACRA，或彻底删除非自由依赖）。.\n"
"-   我们无法构建使用专有广告库的应用。 我们并不反对\n"
"    广告 （见 [_Anti-Features_](../Anti-Features)），\n"
"    但它们须以兼容 FLOSS 的方式提供。\n"
"-   我们无法构建需要非自由构建工具的应用，包括\n"
"    Oracle 的 JDK 或某些预发布的工具链。\n"

#. type: Plain text
#: _docs/Inclusion_Policy.md
msgid "Additionally:"
msgstr "此外："

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "The source code for the application must be maintained in a publicly accessible Version Control System which we have support for (git, hg, svn, bzr), and the source code needs to be maintained in an up to date state."
msgstr "必须在我们支持的、可公开访问的版本控制系统（git、hg、svn、bzr）中维护应用的源代码，而且源代码需要保持最新状态。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "The software must not download additional executable binary files (e.g.  addons, auto-updates, etc.) without explicit user consent. Consent means it needs to be opt-in (it must not be harder to decline than to accept or presented in a way users are likely to press accept without reading) and structured in a way that clearly explains to users that they're choosing to bypass F-Droid's checks if they activate it."
msgstr "此软件在缺乏明确用户同意的情况下禁止下载额外的可执行二进制文件（如附加组件、自动更新等）。同意意味着需要用户主动选择加入（禁止拒绝的难度大于接受，或以用户可能在未阅读相关警告便同意的方式呈现）且应清晰地向用户解释，激活它意味着选择绕过 F-Droid 的检查。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "The software should use its own unique Android \"[Application ID](https://developer.android.com/studio/build/configure-app-module)\" based on a domain name under the developer's control.  For example, if the app is in a group called \"foo\" on [gitlab.com](https://gitlab.com), then the domain name could be `io.gitlab.foo`.  It should not be based on someone's domain name, (e.g. `com.google.foo`).  Maven Central OSSRH provides [good guidance](https://central.sonatype.org/publish/requirements/coordinates/)."
msgstr "软件应使用基于开发者所控制的域名的独有 Andriod \"[应用 ID](https://developer.android.com/studio/build/configure-app-module)\"。比如，如果应用位于 [gitlab.com](https://gitlab.com) 上一个名为 \"foo\" 的组中，那么域名可以是 `io.gitlab.foo`。它不应基于其他人的域名（比如 `com.google.foo`）。Maven Central OSSRH 提供了[良好的指导](https://central.sonatype.org/publish/requirements/coordinates/)。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Where the application is a fork of another (even one not included in the F-Droid repository) it must have a new ID, different from the original. Make sure to rename your fork accordingly (including all active translations). Forks which only re-brand an app but do not add value for users might not get accepted."
msgstr "如果应用是另一个分支（即使是不包含在 F-Droid 存储库中的应用），它必须有一个与原始 ID 不同的新 ID。确保相应地重命名你的分支（包括所有活动的翻译）。仅重新命名应用但没有为用户增加价值的复刻可能不会被接受。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Although not ideal, \"non-functional\" assets (e.g. artwork) *may* be acceptable under less permissive licenses than functional code - an example would be artwork assets that are licensed only for use with that particular game. In any case though, they must be included under some kind of license, and not be copyright violations."
msgstr "尽管不理想，“非功能性” 资产（例如艺术品）*可以* 使用比功能性代码更宽松的许可——例如，仅被许可用于该特定游戏的艺术品资产。但无论如何，它们必须包含在某种许可之下，而不是侵犯版权。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Trademarks must not be infringed, and any other legal requirements must be adhered to."
msgstr "不得侵犯商标，必须遵守任何其他法律要求。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "F-Droid does not sign up for any API keys. Even if provided by a third party, we include them in both, binary and sourcecode releases."
msgstr "F-Droid 不注册任何 API 密钥。即使密钥由第三方提供，我们也会将它们包含在二进制和源代码版本中。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Binary dependencies such as JAR files have to be built from source or installed from Debian repos."
msgstr "二进制依赖项(如 JAR 文件)必须从源代码构建或从 Debian 存储库中安装。"

#. type: Plain text
#: _docs/Inclusion_Policy.md
msgid "Ideally:"
msgstr "理想情况下:"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Releases should be clearly tagged (or otherwise marked)."
msgstr "应该使用 tag 或其他方式注明版本。"

#. type: Plain text
#: _docs/Inclusion_Policy.md
msgid "Though we tried to build everything from source, we still need some prebuilt binaries. Therefore we have some exceptions:"
msgstr "尽管我们尝试从源代码构建每样东西，但我们仍然需要一些预构建的二进制文件。 因此我们有一些例外："

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Trusted maven repository. While there is no guarantee that those binaries are free and correspondent to the source code, F-Droid allows the following known repositories currently:"
msgstr "可信的 maven 存储库。虽然不能保证这些二进制文件是自由的，并对应于源代码，但 F-Droid 目前允许以下已知的存储库："

#. type: Bullet: '    -   '
#: _docs/Inclusion_Policy.md
msgid "Maven Central - the original repo, hardcoded in Maven and Gradle."
msgstr "Maven Central - 原始存储库，硬编码在 Maven 和 Gradle 中。"

#. type: Bullet: '    -   '
#: _docs/Inclusion_Policy.md
msgid "Google Maven Repo - hardcoded in Gradle, this repo hosts Google's own libs."
msgstr "谷歌 Maven 存储库 - 硬编码在 Gradle 中，这个存储库托管谷歌自己的库。"

#. type: Bullet: '    -   '
#: _docs/Inclusion_Policy.md
msgid "OSS Sonatype - maintained by the people behind Maven Central, this repository focuses on hosting services for open source project binaries. It's synced with Maven Central, and include some extra libs"
msgstr "OSS Sonatype - 由 mavenCentral 背后的人维护，这个仓库专注于为开源项目二进制文件提供托管服务。它与 Maven Central 同步，并包含一些额外的库"

#. type: Bullet: '    -   '
#: _docs/Inclusion_Policy.md
msgid "OSS JFrog - this repository focuses on hosting services for open source project binaries."
msgstr "OSS JFrog - 此存储库专注于开源项目二进制文件的托管服务。"

#. type: Bullet: '    -   '
#: _docs/Inclusion_Policy.md
msgid "JitPack.io - builds directly from GitHub repositories.  However, they do not provide any option to reproduce or verify the resulting binaries. Builds pre-release versions in some cases."
msgstr "JitPack.io - 直接从 GitHub 仓库构建。然而，他们不提供任何选项来复现或验证所产生的二进制文件。在某些情况下会构建预发布版本。"

#. type: Bullet: '    -   '
#: _docs/Inclusion_Policy.md
msgid "Clojars - Clojure libraries repo."
msgstr "Clojars - Clojure 库仓库。"

#. type: Bullet: '    -   '
#: _docs/Inclusion_Policy.md
msgid "CommonsWare - repo holding a collection of open-source libs."
msgstr "CommonsWare - 托管一系列开源库的仓库。"

#. type: Bullet: '    -   '
#: _docs/Inclusion_Policy.md
msgid "Gradle plugin repo - hardcoded in Gradle, this repo hosts Gradle plugins."
msgstr "Gradle 插件存储库 - 硬编码在 Gradle 中，这个仓库托管 Gradle 插件。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Android SDK/NDK. They are released as proprietary binaries but we don't have an alternative currently. There is in-progress work to package recent Android SDK versions in Debian."
msgstr "Android SDK/NDK。 它们作为专有二进制文件发布，但我们目前没有替代方案。 在 Debian 中打包最新的 Android SDK 版本的工作正在进行中。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Gradle. Only some old versions of Gradle are packaged in Debian. Currently we download them from the developer website."
msgstr "Gradle。 只有一些旧版本的 Gradle 被打包在 Debian 中。 我们目前从开发者网站下载它们。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Flutter SDK. They are FOSS but not packaged in Debian and we are not able to build it from source. Currently we download them from the developer website with the Flutter srclib scripts."
msgstr "Flutter SDK。 它们是自由开源软件但未打包在 Debian 中，我们无法从源代码构建它。 目前我们使用 Flutter srclib 脚本从开发者网站下载它们。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "JSC/Hermes. They can be built from source which takes hours. Currently we downloaded them from npm and scanignore them."
msgstr "JSC/Hermes。 可以从源代码进行构建，但这需要几个小时。 我们目前从 npm 下载它们并 scanignore 它们。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Binaries from pip wheels. Some apps install deps with pip and we just trust the untrustworthy Pypi."
msgstr "来自 pip wheels 的二进制文件。 一些应用使用 pip 安装依赖项，我们只好信任不可信的 Pypi。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Binaries from Nix cache. These binaries are mostly reproducible."
msgstr "来自 Nix 缓存的二进制文件。 这些二进制文件大多是可重复的。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Rust/Rustup. Currently we download them from the developer website with the scripts in the rustup srclib. We may be able to use the Debian packages."
msgstr "Rust/Rustup。 目前我们使用 rustup srclib 中的脚本从开发者网站下载它们。 我们也许可以使用 Debian 软件包。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Golang & Nodejs. They are available in Debian but recent versions are not available immediately. Currently we might download them from the developer website."
msgstr "Golang 和 Nodejs。 它们在 Debian 中可用，但最近的版本不是马上可用。 目前我们可以从开发者网站下载它们。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "Some other compilers/build tools not packaged in our Debian version."
msgstr "一些没有打包在我们 Debian 版本中的其他编译器/构建工具。"

#. type: Plain text
#: _docs/Inclusion_Policy.md
msgid "Some software, while being Free and Open Source, may engage in practices which are undesirable to some or all users. Where possible, we still include these applications in the repository, but they are flagged with the appropriate [_Anti-Features_](../Anti-Features). Even though such software can be included, when appropriately flagged, it is frequently the case that other \"FLOSS\" software with these features is actually not entirely free. For example, advertising and tracking users is often enabled via proprietary binary libraries which we cannot include."
msgstr "一些软件虽然是自由和开源的，但可能会进行某些用户不欢迎的活动。我们仍可能将这些应用收录在存储库中，但会使用适当的 [_负面特征_](../Anti-Features) 标记它们。尽管这样的软件被适当标记后收录，通常情况下，其他具有这些特征的“FLOSS”软件实际上并非完全自由。例如，广告和用户跟踪通常是通过我们无法收录的专有二进制库实现的。"

#. type: Plain text
#: _docs/Inclusion_Policy.md
msgid "When including donation information, the relevant donation links (e.g.  Liberapay/OpenCollective/Bitcoin/etc) must also be available either:"
msgstr "包含捐赠信息时，还必需提供与以下位置一致的捐赠链接（例如 Liberapay/OpenCollective/比特币等）："

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "In a README or similar file in the project's source code."
msgstr "项目源代码中的 README 或类似文件。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "In a [_FUNDING.yml_](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/displaying-a-sponsor-button-in-your-repository#about-funding-files) file included in the project's source code."
msgstr "包含于项目源码中的 [_FUNDING.yml_](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/displaying-a-sponsor-button-in-your-repository#about-funding-files) 文件。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "On the applications main website."
msgstr "应用的主站。"

#. type: Bullet: '-   '
#: _docs/Inclusion_Policy.md
msgid "If the software is hosted on GitLab, then it is sufficient that the person requesting donation info to be added to the fdroiddata repository is the same user account which manages the application source code."
msgstr "如果软件托管在 GitLab 上，那么请求将捐赠信息添加到 fdroiddata 存储库的人与管理应用源代码的用户账户相同即可。"

#. type: Plain text
#: _docs/Inclusion_Policy.md
msgid "This is to prevent arbitrary people from maliciously changing the donation links of applications in the main F-Droid repository without the consent of upstream developers."
msgstr "这是为了防止有人在未经上游开发者同意的情况下，恶意改变 F-Droid 存储库中应用的捐赠链接。"

#. type: Plain text
#: _docs/Inclusion_Policy.md
msgid "For more information on adding applications to the F-Droid Repository, see the [Inclusion How-To](../Inclusion_How-To)."
msgstr "有关将应用添加到 F-Droid 存储库的更多信息，请参阅[收录指南](../Inclusion_How-To)。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Installing the Server and Repo Tools"
msgstr "安装服务器和存储库工具"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "The [fdroidserver](https://gitlab.com/fdroid/fdroidserver) tools provide everything you need to set up and maintain your own repos, run an fdroid build server, and even host your own website like f-droid.org. The F-Droid developers mostly work on Debian, Arch, and Ubuntu, so those are currently the best supported platforms."
msgstr "[fdroidserver](https://gitlab.com/fdroid/fdroidserver) 提供了你所需的全部工具，可用于设置和维护你自己的存储库，运行 fdroid 构建服务器，还可以像 f-droid.org 一样，运行自己的网站 。F-Droid 开发人员大多使用 Debian、Arch 和 Ubuntu，所以它们是当前具有最佳支持的平台。"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "To setup and maintain your own collection of apps and media from the command line, setup an F-Droid repository using the tools from _fdroidserver_.  To run the full F-Droid build server setup, see [Build Server Setup](../Build_Server_Setup)."
msgstr "要从命令行设置和维护你自己的应用和媒体文件集合，请使用来自 _fdroidserver_ 的工具设置一个 F-Droid 存储库。要进行完整的 F-Droid 构建服务器设置，请查看[构建服务器安装](../Build_Server_Setup)。"

#. type: Title ##
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Debian/Ubuntu/Mint/etc"
msgstr "Debian、Ubuntu 、Mint 等"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "The F-Droid tools, also known as _fdroidserver_, may be installed from the standard OS package repository.  On Debian-based OS's, this should be enough to install the basic F-Droid setup:"
msgstr "F-Droid 工具，也被称为 _fdroidserver_，可以从标准操作系统包存储库安装。 在基于 Debian 的操作系统上，如下命令应该足以安装基本的 F-Droid 设置："

#. type: Fenced code block (bash)
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "sudo apt-get install fdroidserver\n"
msgstr "sudo apt-get install fdroidserver\n"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "However, it is common to find that the version of _fdroidserver_ available in the standard OS package repository is out of date."
msgstr "但是，通常会发现标准操作系统包存储库中可用的 _fdroidserver_ 版本已过时。"

#. type: Title ###
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Getting a newer version"
msgstr "获取更新版本"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "A newer version of _fdroidserver_ may be found in the F-Droid PPA or your OS's _backports_ repository."
msgstr "可以在 F-Droid PPA 或你操作系统的 _backports_ 存储库中找到更新版本的 _fdroidserver_。"

#. type: Bullet: '-   '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "Ubuntu/Mint: use the [F-Droid PPA](https://launchpad.net/~fdroid/+archive/fdroidserver/+packages)  (fingerprint: `9AAC 2531 93B6 5D4D F1D0 A13E EC46 32C7 9C5E 0151`):"
msgstr "Ubuntu/Mint：使用 [F-Droid PPA](https://launchpad.net/~fdroid/+archive/fdroidserver/+packages) (指纹: `9AAC 2531 93B6 5D4D F1D0 A13E EC46 32C7 9C5E 0151`):"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid ""
"    ```bash\n"
"    sudo add-apt-repository ppa:fdroid/fdroidserver\n"
"    sudo apt-get update\n"
"    sudo apt-get install fdroidserver\n"
"    ```\n"
msgstr ""
"    ```bash\n"
"    sudo add-apt-repository ppa:fdroid/fdroidserver\n"
"    sudo apt-get update\n"
"    sudo apt-get install fdroidserver\n"
"    ```\n"

#. type: Bullet: '-   '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "Debian: first [setup backports](http://backports.debian.org/Instructions/#index2h2), then, substituting your Debian release for 'buster': ```bash apt-get install fdroidserver/buster-backports ```"
msgstr "Debian：首先[设置 backports](http://backports.debian.org/Instructions/#index2h2)，然后将下列指令中的 'buster' 替换为你使用的Debian 发行版并运行：```bash apt-get install fdroidserver/buster-backports```"

#. type: Title ##
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Fedora/Archlinux"
msgstr "Fedora/Archlinux"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "Since packages in these distros could be newer than the official ones on pypi, installing the dependencies in a separate virtual environment workarounds dependency resolving failures:"
msgstr "由于这些发行版中的软件包可能比 pypi 上的官方软件包要新，因此在一个单独的虚拟环境中安装依赖关系可以解决依赖关系解析失败的问题："

#. type: Fenced code block (bash)
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid ""
"python3 -m venv env\n"
"source env/bin/activate\n"
"pip install -e .\n"
msgstr ""
"python3 -m venv env\n"
"source env/bin/activate\n"
"pip install -e .\n"

#. type: Title ##
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Guix"
msgstr "Guix"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "The tools are also available in the main Guix channel. To install:  \n"
msgstr "这些工具也可在主 Guix 频道中找到。运行以下指令进行安装：  \n"

#. type: Fenced code block
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "guix install fdroidserver\n"
msgstr "guix install fdroidserver\n"

#. type: Title ##
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "macOS"
msgstr "macOS"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "You can install `fdroidserver` directly using Homebrew, or `easy_install` as a last resort:"
msgstr "你可使用 Homebrew 直接安装 `fdroidserver`, 或将 `easy_install` 作为最终手段："

#. type: Title ###
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Homebrew:"
msgstr "Homebrew："

#. type: Bullet: '1. '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "Preparation: Check [the Homebrew formula](https://formulae.brew.sh/formula/fdroidserver) for instructions. Example:"
msgstr "准备工作：查看 [Homebrew formula](https://formulae.brew.sh/formula/fdroidserver) 以获取说明。例如："

#. type: Fenced code block (bash)
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid ""
"brew install android-sdk\n"
"android update sdk --no-ui --all --filter tools,platform-tools,build-tools-25.0.0\n"
msgstr ""
"brew install android-sdk\n"
"android update sdk --no-ui --all --filter tools,platform-tools,build-tools-25.0.0\n"

#. type: Bullet: '2. '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "Install _fdroidserver_:"
msgstr "安装 _fdroidserver_:"

#. type: Fenced code block (bash)
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "brew install fdroidserver\n"
msgstr "brew install fdroidserver\n"

#. type: Title ###
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "With only `easy_install`:"
msgstr "仅用 `easy_install`："

#. type: Fenced code block
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "sudo easy_install fdroidserver\n"
msgstr "sudo easy_install fdroidserver\n"

#. type: Title ##
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Windows"
msgstr "Windows"

#. type: Title ###
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Windows 10 Subsystem for Linux"
msgstr "适用于 Linux 的 Windows 10 子系统"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "Starting with the Windows 10 \"Anniversary Update\", you can [enable an Ubuntu environment](https://msdn.microsoft.com/en-us/commandline/wsl/install_guide)  that runs in Windows, known as \"Bash on Windows\", \"Ubuntu on Windows\", or \"Windows Subsystem for Linux\"."
msgstr "从Windows 10\"周年更新\"开始，你可以在 Windows 中[启用 Ubuntu 环境](https://msdn.microsoft.com/en-us/commandline/wsl/install_guide)，这也被称为 \"Windows 上的 Bash\"，\"Windows 上的 Ubuntu\" 或 \"适用于 Linux 的 Windows 子系统\"。"

#. type: Bullet: '1.  '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "[setup Windows Subsystem for Linux](https://msdn.microsoft.com/en-us/commandline/wsl/install_guide)"
msgstr "[安装适用于 Linux 的 Windows 子系统](https://msdn.microsoft.com/en-us/commandline/wsl/install_guide)"

#. type: Bullet: '2.  '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "install *fdroidserver* from the [F-Droid PPA](https://launchpad.net/~fdroid/+archive/fdroidserver/+packages)  (fingerprint: `9AAC 2531 93B6 5D4D F1D0 A13E EC46 32C7 9C5E 0151`)  by running this in the Bash shell window:"
msgstr "从[F-Droid PPA](https://launchpad.net/~fdroid/+archive/fdroidserver/+packages) 安装 *fdroidserver* (指纹: `9AAC 2531 93B6 5D4D F1D0 A13E EC46 32C7 9C5E 0151`)，方法是在 Bash shell 窗口中运行："

#. type: Fenced code block (bash)
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid ""
"sudo add-apt-repository ppa:fdroid/fdroidserver\n"
"sudo apt-get update\n"
"sudo apt-get install fdroidserver\n"
msgstr ""
"sudo add-apt-repository ppa:fdroid/fdroidserver\n"
"sudo apt-get update\n"
"sudo apt-get install fdroidserver\n"

#. type: Title ###
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Cygwin"
msgstr "Cygwin"

#. type: Bullet: '1.  '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "add Java to your PATH: <http://www.kingluddite.com/tools/how-do-i-add-java-to-my-windows-path>"
msgstr "将 Java 加入你的 PATH：<http://www.kingluddite.com/tools/how-do-i-add-java-to-my-windows-path>"

#. type: Bullet: '2.  '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "Install Cygwin <https://www.sourceware.org/cygwin/>"
msgstr "安装 Cygwin <https://www.sourceware.org/cygwin/>"

#. type: Bullet: '3.  '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "in Cygwin, install these packages: *gcc-core git openssh python3 python3-pyasn1 python3-imaging python3-paramiko python3-requests python3-setuptools rsync wget*"
msgstr "在 Cygwin 中安装这些包： *gcc-core git openssh python3 python3-pyasn1 python3-imaging python3-paramiko python3-requests python3-setuptools rsync wget*"

#. type: Bullet: '4.  '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "open a Cygwin bash shell and run: `easy_install fdroidserver`"
msgstr "打开 Cygwin bash shell 并运行：`easy_install fdroidserver`"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "Then here's the repo setup:"
msgstr "然后进行存储库设置："

#. type: Fenced code block (bash)
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid ""
"export ANDROID_HOME=/cygdrive/c/path/to/android-sdk\n"
"fdroid init   # the keystore gen will fail\n"
msgstr ""
"export ANDROID_HOME=/cygdrive/c/path/to/android-sdk\n"
"fdroid init   # keystore 生成将失败\n"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "After running `fdroid init`, you need to set the Windows path to your keystore in _config.yml_.  It is also possible to install _fdroidserver_ in a virtual environment using _virtualenv_ and _pip_."
msgstr "运行 `fdroid init` 后，你需要在 _config.yml_ 中将 Windows 路径设置为你的 keystore。也可以使用 _virtualenv_ 和 _pip_ 在虚拟环境中安装 _fdroidserver_。"

#. type: Title ##
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Docker Executable Image (any platform)"
msgstr "Docker 可执行镜像 (任何平台)"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "If you are already running Docker \"Executable Images\", then the easiest way to run _fdroidserver_ is to use our [executable image](https://gitlab.com/fdroid/docker-executable-fdroidserver)"
msgstr "如果你已经在运行 Docker “可执行镜像”，那么运行 _fdroidserver_ 的最简单方法是使用我们的 [可执行镜像](https://gitlab.com/fdroid/docker-executable-fdroidserver)"

#. type: Title ##
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Installing the latest code (any platform)"
msgstr "安装最新代码（任何平台）"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "The easiest way to install the fdroidserver tools from source is to use virtualenv and pip. First, make sure you have the Python3 version of _virtualenv_ or _pyvenv_ installed, it should be included in your OS's Python distribution or via other mechanisms like dnf/yum/pacman/emerge/Fink/MacPorts/Brew. Then here's how to install _fdroidserver_ into a Python \"virtual env\":"
msgstr "从源代码安装 fdroidserver 工具的最简单方法是使用 virtualenv 和 pip。首先，确保你安装了 Python3 版本的 _virtualenv_ 或 _pyvenv_，它应该包含在你的操作系统的 Python 发行版中或通过 dnf/yum/pacman/emerge/Fink /MacPorts/Brew 等其他方式安装。接下来介绍如何将 _fdroidserver_ 安装到 Python“虚拟环境”中："

#. type: Fenced code block (bash)
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid ""
"pyvenv fdroidserver-env\n"
". fdroidserver-env/bin/activate\n"
"pip install git+https://gitlab.com/fdroid/fdroidserver.git\n"
msgstr ""
"pyvenv fdroidserver-env\n"
". fdroidserver-env/bin/activate\n"
"pip install git+https://gitlab.com/fdroid/fdroidserver.git\n"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "You can find variations on this used in the CI tests: https://gitlab.com/fdroid/fdroidserver/blob/master/.gitlab-ci.yml"
msgstr "你可以在CI测试中找到上述步骤的一个用例：https://gitlab.com/fdroid/fdroidserver/blob/master/.gitlab-ci.yml"

#. type: Title ##
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Building apps"
msgstr "构建应用"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "To build apps using F-Droid, Java and the whole Android SDK must be installed.  This process is currently only developed on GNU/Linux, but we'd love patches getting it working on macOS and Windows. If you only want to make F-Droid repositories of APK files that you already have or don't know what this means, then you can skip this section."
msgstr "要使用 F-Droid 构建应用，必须安装 Java 和完整的 Android SDK。这个过程目前仅在 GNU/Linux 上进行，但我们欢迎使其能在 macOS 和 Windows 上运行的补丁。如果你只想为已有的 APK 文件制作 F-Droid 存储库或不知道这意味着什么，那么你可以跳过本节。"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "In order to build Android apps with the _fdroidserver_ toolchain, Java, the Android SDK, and some other essential tools must be installed.  Only [parts of the Android SDK](https://qa.debian.org/developer.php?email=android-tools-devel%40lists.alioth.debian.org)  are available in Debian, so the Android SDK must be installed manually, as well as the packages that it requires (_the Android SDK tools include some 32-bit binaries, so even 64-bit systems need these i386 library packages_). The F-Droid tools use the Android SDK to build and inspect apps, so you must have the Android SDK installed and setup before using _fdroidserver_."
msgstr "为了使用 _fdroidserver_ 工具链构建 Android 应用，必须安装 Java、Android SDK 以及其他必要工具。在 Debian 中只有 [部分 Android SDK](https://qa.debian.org/developer.php?email=android-tools-devel%40lists.alioth.debian.org) 可用，因此必须手动安装 Android SDK 以及它需要的包（_Android SDK 工具包括一些 32 位二进制文件，所以即使是 64 位系统也需要这些 i386 库包 _）。 F-Droid 工具使用 Android SDK 来构建和检查应用，因此你必须在使用 _fdroidserver_ 之前安装和设置 Android SDK。"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "[Install the Android SDK](https://developer.android.com/sdk/index.html#downloads)  and make sure the `ANDROID_HOME` environment variable is properly set. Be sure to verify the file you downloaded, you can double-check the SHA-1 Checksum on Google's download page."
msgstr "[安装 Android SDK](https://developer.android.com/sdk/index.html#downloads) 并确保 `ANDROID_HOME` 环境变量设置正确。请务必验证你下载的文件，你可以在 Google 的下载页面上仔细检查 SHA-1 校验和。"

#. type: Fenced code block (bash)
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid ""
"$ sudo apt-get install fdroidserver\n"
"$ mkdir ~/android-sdk-linux\n"
"$ cd ~/android-sdk-linux\n"
"$ wget https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip\n"
"$ echo \"87f6dcf41d4e642e37ba03cb2e387a542aa0bd73cb689a9e7152aad40a6e7a08  commandlinetools-linux-6858069_latest.zip\" | sha256sum -c\n"
"commandlinetools-linux-6858069_latest.zip: OK\n"
"$ unzip commandlinetools-linux-6858069_latest.zip\n"
"$ export ANDROID_HOME=\"$HOME/android-sdk-linux\"\n"
"$ ./cmdline-tools/bin/sdkmanager --sdk_root=\"$ANDROID_HOME\" platform-tools \"build-tools;30.0.3\"\n"
msgstr ""
"$ sudo apt-get install fdroidserver\n"
"$ mkdir ~/android-sdk-linux\n"
"$ cd ~/android-sdk-linux\n"
"$ wget https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip\n"
"$ echo \"87f6dcf41d4e642e37ba03cb2e387a542aa0bd73cb689a9e7152aad40a6e7a08  commandlinetools-linux-6858069_latest.zip\" | sha256sum -c\n"
"commandlinetools-linux-6858069_latest.zip: OK\n"
"$ unzip commandlinetools-linux-6858069_latest.zip\n"
"$ export ANDROID_HOME=\"$HOME/android-sdk-linux\"\n"
"$ ./cmdline-tools/bin/sdkmanager --sdk_root=\"$ANDROID_HOME\" platform-tools \"build-tools;30.0.3\"\n"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "Note: If you have Android Studio installed, you have the Android SDK installed.  It should be located at `~/Android/Sdk` instead of `~/android-sdk-linux`.  You can find the location in Android Studio when you open the Tools→SDK Manager menu."
msgstr "注意：如果你安装了 Android Studio，则你已经安装了 Android SDK。它应该位于 `~/Android/Sdk` 而不是 `~/android-sdk-linux`。当你在 Android Studio 中打开工具→SDK 管理器菜单时，就可以找到该位置。"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "To add these settings permanently to your shell:"
msgstr "要将这些设置永久添加到 shell 中，请执行以下操作："

#. type: Fenced code block (bash)
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "$ echo export ANDROID_HOME=$ANDROID_HOME >> .bashrc\n"
msgstr "$ echo export ANDROID_HOME=$ANDROID_HOME >> .bashrc\n"

#. type: Title ##
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Building all apps from f-droid.org"
msgstr "构建 f-droid.org 中的所有应用"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "In order to build all apps that are included in f-droid.org, then a lot more software packages are required:"
msgstr "为了构建 f-droid.org 收录的所有应用，就需要更多的软件包："

#. type: Bullet: '* '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "all SDK platforms requested by the apps you want to build"
msgstr "你想构建的应用所请求的所有 SDK 平台"

#. type: Bullet: '* '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "all Debian packages required by every app build process (maven, ant, etc)"
msgstr "每个应用构建过程所需的所有 Debian 包（maven、ant等）"

#. type: Bullet: '* '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "every source code management tool (git, subversion, mercurial, etc)"
msgstr "每个源代码管理工具（git、subversion、mercurial等）"

#. type: Bullet: '* '
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "every version of the Android NDK that apps use"
msgstr "应用使用的 Android NDK 的每个版本"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "On top of that, to build apps like they are built on f-droid.org, then the whole [Build Server Setup](../Build_Server_Setup) is required.  That is a more secure, production-ready setup that requires quite a bit more setup and resources.  The [build server provisioning scripts](https://gitlab.com/fdroid/fdroidserver/tree/master/buildserver/)  provide a useful reference for all the needed bits."
msgstr "除此之外，要以 f-droid.org 所使用的方式构建应用，就需要完整的[构建服务器设置](../Build_Server_Setup)。 这是一个更安全的、可用于生产的设置，需要稍多的设置和资源。[构建服务器设置脚本](https://gitlab.com/fdroid/fdroidserver/tree/master/buildserver/)提供了一个全面的参考。"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "If you want to make your own official releases with the F-Droid tools, then you'll also need to set up the [Signing Process](../Signing_Process)."
msgstr "如果你想用 F-Droid 工具制作你自己的官方版本，那么你还需要设置[签名过程](../Signing_Process)。"

#. type: Title ##
#: _docs/Installing_the_Server_and_Repo_Tools.md
#, no-wrap
msgid "Proprietary, Non-Free libraries"
msgstr "专有的非自由库"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "The Android SDK is made available by Google under a proprietary license. Within that, the essential build tools, SDK platforms, support library and some other components are under the Apache license and source code is provided."
msgstr "Android SDK 由 Google 以专有许可提供。其中，基本的构建工具、SDK 平台、支持库和一些其他组件都在 Apache 许可下提供源代码。"

#. type: Plain text
#: _docs/Installing_the_Server_and_Repo_Tools.md
msgid "Google APIs, used for building apps using Google Maps, are free to the extent that the library comes pre-installed on the device.  Google Play Services, Google Admob, GCM, and many other third party libraries are proprietary and cannot be included in the main F-Droid repository.  The [MicroG project](https://microg.org) is developing free software replacements for some of the most used proprietary Google libraries"
msgstr "使用 Google Maps 构建应用时使用的 Google API 是自由的，因为该库已预装在设备上。Google Play 服务、Google Admob、GCM 和许多其他第三方库是专有的，不能包含在 F-Droid 主存储库中。 [MicroG 项目](https://microg.org)正在为一些最常用的专有 Google 库开发自由软件替代品"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid "Maintaining the forum"
msgstr "维护论坛"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "[F-Droid's forum](https://forum.f-droid.org) is powered by [Discourse](https://www.discourse.org/) and [maintained by volunteers](https://forum.f-droid.org/about)."
msgstr "[F-Droid 的论坛](https://forum.f-droid.org)基于 [Discourse](https://www.discourse.org/)，并[由志愿者维护](https://forum.f-droid.org/about)。"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "This page is the central place where all information needed to maintain the forum are stored."
msgstr "这个页面是存放维护论坛所需的所有信息的中心位置。"

#. type: Title ###
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid "General information"
msgstr "常规信息"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "Here is some general, non-sensitive information about our instance.  When setting up the forum, we followed [Discourse's](https://github.com/discourse/discourse/blob/main/docs/INSTALL-cloud.md)  official installation guides.  Posts from the old forum were not imported due to time restrictions of the voluntary administrators."
msgstr "以下是我们这个实例的一些常规的非敏感信息。在搭建论坛时，我们遵照了 [Discourse](https://github.com/discourse/discourse/blob/main/docs/INSTALL-cloud.md) 的官方安装指南。由于义务管理员的时间有限，我们没有导入旧论坛的帖子。"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Installation type: [docker-ce](https://github.com/discourse/discourse_docker)"
msgstr "安装类型：[docker-ce](https://github.com/discourse/discourse_docker)"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Server's specifications: 2 cores, 4GB RAM, 75GB SSD"
msgstr "服务器规格：2核，4GB RAM，75GB SSD"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Server's location: Amsterdam"
msgstr "服务器位置：阿姆斯特丹"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Ansible Playbook: <https://gitlab.com/fdroid/fdroid-forum-server>"
msgstr "Ansible 运行手册：<https://gitlab.com/fdroid/fdroid-forum-server>"

#. type: Title ####
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid "Paths"
msgstr "路径"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Installation directory: _/var/discourse_"
msgstr "安装目录：_/var/discourse_"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "App configuration: _/var/discourse/containers/app.yml_"
msgstr "应用配置：_/var/discourse/containers/app.yml_"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Backups: _/var/discourse/shared/standalone/backups/default_"
msgstr "备份：_/var/discourse/shared/standalone/backups/default_"

#. type: Title ####
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid "Discourse"
msgstr "Discourse"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Version: _stable_"
msgstr "版本：_stable_"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "SSL: Let's Encrypt"
msgstr "SSL: Let's Encrypt"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Login methods: local, GitHub"
msgstr "登录方法：本地、GitHub"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Backup frequency: daily"
msgstr "备份频率：每天"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Amount of backups stored: Last 15 ones"
msgstr "存储的备份数量：最近 15 个"

#. type: Title ###
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid "Upgrading"
msgstr "升级"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "Upgrading the forum is quite simple.  Upgrades are planned to be done every one to two weeks.  If you feel like there was an important update to Discourse which should get deployed earlier, [please reach out to us]({{ site.baseurl }}/about/)."
msgstr "升级论坛很简单。我们计划每一周或两周升级一次。如果你认为 Discourse 有需要提前部署的重要更新，请[联系我们]({{ site.baseurl }}/about/)。"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "For administrators, this is the common way how to upgrade the forum:"
msgstr "以下是管理员常用的升级论坛的方法："

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "[Make a backup of the forum](https://forum.f-droid.org/admin/backups)"
msgstr "[制作论坛备份](https://forum.f-droid.org/admin/backups)"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Wait until the backup finished and download it (you'll get a link by mail)"
msgstr "下载已完成的备份文件 (下载链接会发送至邮箱)"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "Go to the [upgrade section](https://forum.f-droid.org/admin/upgrade)"
msgstr "进入[升级](https://forum.f-droid.org/admin/upgrade)板块"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid ""
"* Upgrade (the different parts of) the forum, e.g. sometimes\n"
"_docker_manager_ has available updates which need to happen before _discourse_\n"
"* Report that all updates were successful in the\n"
"[maintenance log](https://forum.f-droid.org/t/maintenance-log/775)\n"
msgstr ""
"* 升级论坛(或论坛的不同部分，例如，docker_manager 有需要在 discourse 之前进行的可用更新）\n"
"* 在[维护日志](https://forum.f-droid.org/t/maintenance-log/775)中报告所有更新顺利完成\n"

#. type: Title ##
#: _docs/Maintaining_the_Forum.md
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
#, no-wrap
msgid "Troubleshooting"
msgstr "故障排除"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "In case something goes wrong with the forum, stay calm, you're likely not the first to be affected by this. Mostly a quick internet search gives you detailed instructions on how to fix a problem.  In the past, the following instructions were helpful:"
msgstr "如果论坛有什么问题，放宽心，你应该不是第一个被影响的人。通常情况下，多数时候搜索引擎能为你提供解决问题的详细教程。根据过往经验，下面的教程很有用："

#. type: Title ####
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid "Rebuilding the container"
msgstr "重建容器"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "This also updates all the parts of Discourse to their newest versions.  Therefore, it's also of interest if there are many available updates in the updates section on the web interface and you want to quickly update all of them."
msgstr "这也会将 Discourse 的所有部分更新到最新版本。当 Web 界面的「更新」部分中有多个可用更新时，这种方式提供了一键更新的途径。"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "Sometimes you even have to update the forum this way because a new version of _Docker manager_ got installed, causing Discourse to refuse updates through its web interface."
msgstr "已安装新版本的 _Docker manager_ 有可能导致 Discourse 拒绝通过 Web 界面更新，此时你需要通过这种方式更新论坛。"

#. type: Fenced code block (bash)
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid ""
"cd /var/discourse\n"
"./launcher rebuild app\n"
msgstr ""
"cd /var/discourse\n"
"./launcher rebuild app\n"

#. type: Title ####
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid "Cleaning up Docker"
msgstr "清理 Docker"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "Docker stores copies of a lot of stuff that _could_ be used in the future, but mostly is not. From time to time it's required to clean up that stuff which sometimes results in more than 10 GB of freed space."
msgstr "Docker存储了大量以后 _可能_ 会用到的东西，尽管实际上大部分是用不到的。它们有时会占用 10 GB 以上空间，这就需要你清理它们。"

#. type: Fenced code block (bash)
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid "docker system prune -a\n"
msgstr "docker system prune -a\n"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "With this, the following things get deleted:"
msgstr "执行上述命令，这些内容会被删除："

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "all stopped containers"
msgstr "所有已停止的容器"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "all networks not used by at least one container"
msgstr "所有未被任一容器使用的网络"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "all images without at least one container associated to them"
msgstr "所有未被任一容器使用的图片"

#. type: Bullet: '* '
#: _docs/Maintaining_the_Forum.md
msgid "all build cache"
msgstr "所有构建缓存"

#. type: Title ###
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid "Installation log"
msgstr "安装日志"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "In case we need to set up the virtual machine because of some problem, you can use this instruction to do so quickly."
msgstr "如果因为一些问题需要搭建虚拟机，则可以使用以下步骤快速完成。"

#. type: Title ####
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid "Install Discourse"
msgstr "安装 Discourse"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "If you still have the old _/var/discourse_ directory available, you can simply deploy it on the new server and start it by `./launcher rebuild app`."
msgstr "如果你有旧的 _/var/discourse_ 目录可用，则可以直接将其部署在新服务器上，并通过 `./launcher rebuild app` 启动它。"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "Follow the [official installation guide](https://github.com/discourse/discourse/blob/main/docs/INSTALL-cloud.md)."
msgstr "请参照[官方安装指南](https://github.com/discourse/discourse/blob/main/docs/INSTALL-cloud.md)。"

#. type: Title ####
#: _docs/Maintaining_the_Forum.md
#, no-wrap
msgid "More Info"
msgstr "更多信息"

#. type: Plain text
#: _docs/Maintaining_the_Forum.md
msgid "You can find more info about updating and maintaining the forum as well as other admin tasks in the [F-Droid forum administrator training](https://forum.f-droid.org/t/f-droid-forum-administrator-training/5527?u=paulakreuzer) topic."
msgstr "你可以在[F-Droid 论坛管理员培训](https://forum.f-droid.org/t/f-droid-forum-administrator-training/5527?u=paulakreuzer) 话题中找到更多关于更新、维护论坛以及其他管理员工作的信息。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/MIA_Process.md
#, no-wrap
msgid "MIA Process"
msgstr "MIA 机制"

#. type: Plain text
#: _docs/MIA_Process.md
msgid "Maintainers come and go, interests and priorities change and time flies. This is true for every project and F-Droid as well. To keep the credentials and permissions in F-Droid reasonable, there is this missing in action (MIA) process."
msgstr "时光飞逝，维护者来来去去，兴趣和优先级发生变化，这对于包括 F-Droid 在内的任何计划来说都是事实。为了保持 F-Droid 中凭据和权限完备，我们制定了 missing in action（MIA）机制。"

#. type: Plain text
#: _docs/MIA_Process.md
msgid "This means we regularly check if F-Droid team members are still active, i.e.  when they last contributed, and drop those that don't respond to messages after some time. The idea is to improve F-Droid's quality, not to hunt developers."
msgstr "这意味着我们定期检查 F-Droid 团队成员是否仍然活跃（即最后贡献时间），然后剔除长时间不回复询问的人。这一举措的目的是提高 F-Droid 的质量，而非伤害开发者。"

#. type: Title ###
#: _docs/MIA_Process.md
#, no-wrap
msgid "What are F-Droid team members"
msgstr "F-Droid 团队成员是指哪些人"

#. type: Bullet: '- '
#: _docs/MIA_Process.md
msgid "[Gitlab](https://gitlab.com/fdroid/admin/-/project_members)"
msgstr "[Gitlab](https://gitlab.com/fdroid/admin/-/project_members)"

#. type: Bullet: '- '
#: _docs/MIA_Process.md
msgid "[Forum](https://forum.f-droid.org/g/contributors)"
msgstr "[论坛](https://forum.f-droid.org/g/contributors)"

#. type: Title ###
#: _docs/MIA_Process.md
#, no-wrap
msgid "What are contributions"
msgstr "“贡献”是指什么"

#. type: Bullet: '- '
#: _docs/MIA_Process.md
msgid "Commits to one of the repos hosted on [Gitlab](https://gitlab.com/fdroid/)."
msgstr "向托管在 [Gitlab](https://gitlab.com/fdroid/) 上的存储库提交代码。"

#. type: Bullet: '- '
#: _docs/MIA_Process.md
msgid "Contributions to issues on [Gitlab](https://gitlab.com/groups/fdroid/-/issues)."
msgstr "给 [Gitlab](https://gitlab.com/groups/fdroid/-/issues) 上的 issues 作贡献。"

#. type: Bullet: '- '
#: _docs/MIA_Process.md
msgid "Activity on the forum."
msgstr "在论坛上发言。"

#. type: Title ###
#: _docs/MIA_Process.md
#, no-wrap
msgid "Who is MIA"
msgstr "什么样的人会被认定为 MIA"

#. type: Plain text
#: _docs/MIA_Process.md
msgid "No contribution or pong to a MIA ping for at least six month."
msgstr "在 6 个月内没有贡献或者不回复 MIA 询问。"

#. type: Title ###
#: _docs/MIA_Process.md
#, no-wrap
msgid "How are MIAs tracked"
msgstr "如何跟踪 MIA"

#. type: Plain text
#: _docs/MIA_Process.md
msgid "For every member that is MIA, an internal issue in the [admin project](https://gitlab.com/fdroid/admin/issues/) is opened. Every ping and pong is documented there. If a number of pings don't receive a pong, the team is mentioned in the issue, to ask if someone has an other way to contact the person."
msgstr "我们会在[admin 项目](https://gitlab.com/fdroid/admin/issues/) 中为每一位 MIA 成员开放一个内部议题，每一个询问和回复都被记录在案。如果多次询问均没有被回复，则在该议题中提及团队，以询问是否有人可以通过其他方式联系此人。"

#. type: Title ###
#: _docs/MIA_Process.md
#, no-wrap
msgid "The removal"
msgstr "移除"

#. type: Bullet: '- '
#: _docs/MIA_Process.md
msgid "Status: First warning -> wait 16 weeks."
msgstr "状态：首次警告 -> 等待 16 周。"

#. type: Bullet: '- '
#: _docs/MIA_Process.md
msgid "Status: Second warning -> wait 8 weeks."
msgstr "状态：第二次警告 -> 等待 8 周。"

#. type: Bullet: '- '
#: _docs/MIA_Process.md
msgid "Status: Final warning -> wait 4 weeks."
msgstr "状态：最终警告 -> 等待 4 周。"

#. type: Plain text
#: _docs/MIA_Process.md
msgid "Afterwards, MIA accounts are removed from all F-Droid directories (Gitlab) or downgraded to normal user account (forum) and the issue is closed and made public if it was set to confidential."
msgstr "之后，我们将从所有 F-Droid 目录中移除该 MIA 账户（Gitlab），或将其降级为普通用户帐户（论坛）。此外，相应 issue 将被关闭，且如果该 issue 之前为私密状态，现在将转为公开可见。"

#. type: Title ###
#: _docs/MIA_Process.md
#, no-wrap
msgid "References"
msgstr "参考"

#. type: Bullet: '- '
#: _docs/MIA_Process.md
msgid "[Debian reference](https://www.debian.org/doc/manuals/developers-reference/beyond-pkging.html#dealing-with-inactive-and-or-unreachable-maintainers)"
msgstr "[Debian 参考](https://www.debian.org/doc/manuals/developers-reference/beyond-pkging.html#dealing-with-inactive-and-or-unreachable-maintainers)"

#. type: Bullet: '- '
#: _docs/MIA_Process.md
msgid "[Debian team site](https://wiki.debian.org/Teams/MIA)"
msgstr "[Debian 团队站点](https://wiki.debian.org/Teams/MIA)"

#. type: Bullet: '- '
#: _docs/MIA_Process.md
msgid "[Debian tools](https://salsa.debian.org/qa/qa/tree/master/mia)"
msgstr "[Debian 工具](https://salsa.debian.org/qa/qa/tree/master/mia)"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid "Publishing Nightly Builds"
msgstr "发布每日构建"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
msgid "Having users run \"nightly\" builds is a great way to get rapid feedback on current development activities.  One key way to get this kind of feedback is to make it as easy as possible for people to install the nightly builds, and to keep updated.  The F-Droid tools now let you automate this whole process for apps that are setup on GitLab CI."
msgstr "要获得针对当前开发活动的快速反馈，让用户运行每日构建是一种好方法。获得这种反馈的关键之一是让人们尽可能容易地安装每日构建并保持更新。F-Droid工具现在可以让设置在GitLab CI上的应用自动完成整个过程。"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
msgid "The F-Droid nightly repos are built on top of the standard Android _~/.android/debug.keystore_ that the Android tools automatically generate.  That signing key is used to sign the nightly builds as well as the repo index.  This is meant to be easy to setup and manage, but it does __not__ provide the same level of security as a standard F-Droid repo!"
msgstr "F-Droid 每日存储库基于 Android 工具自动生成的标准 Android _~/.android/debug.keystore_ 建立。 该签名密钥用于对每日构建以及存储库索引进行签名。 这么做是为了便于设置和管理，但它__并不__提供和标准 F-Droid 存储库同等级别的安全性！"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
msgid "Since this is about smoothing the development process, it also makes sense to reuse a shared _debug.keystore_ among your team.  That way, all debug builds are interchangeable.  This makes debugging certain problems a lot easier since you can keep the app state when installing your own debug builds, for example, to add logging."
msgstr "由于这是为了平滑开发过程，因此在团队中重用共享的 _debug.keystore_ 也是有意义的。 这样，所有调试版本都是可互换的。 这使得调试某些问题变得更加容易，因为在安装自己的调试版本时可以保留应用状态，例如，添加日志记录。"

#. type: Title ##
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid "Automatic Version Codes"
msgstr "自动版本代码"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
msgid "With nightly builds, the normal logic for setting `versionCode` in git for each release no longer makes sense.  In order for Android to treat each new build as a possible update, the `versionCode` must increase, but that does not make sense to commit to git each time.  So there needs to be some automatic logic for setting `versionCode`:"
msgstr "对于夜间构建，在 git 中为每个版本设置 `versionCode` 的正常逻辑就不再有意义。为了让 Android 将每个新版本视为可能的更新，`versionCode` 必须增加，但是每次都提交给 git 没有意义。所以需要有一些自动逻辑来设置`versionCode`："

#. type: Bullet: '* '
#: _docs/Publishing_Nightly_Builds.md
msgid "timestamp in seconds (`date +%s`) will always increase"
msgstr "以秒为单位的时间戳 (`date +%s`) 将始终增加"

#. type: Bullet: '* '
#: _docs/Publishing_Nightly_Builds.md
msgid "incrementing the last release's `versionCode` (e.g. 104030034, 104030035, 104030036)"
msgstr "递增上一个版本'的 `versionCode`（例如，104030034、104030035、104030036）"

#. type: Bullet: '* '
#: _docs/Publishing_Nightly_Builds.md
msgid "git commit count (`git rev-list --first-parent --count HEAD`)  provides some hints of where in the code the build was made from"
msgstr "git commit count (`git rev-list --first-parent --count HEAD`) 提供了一些提示，说明构建的代码位置"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
msgid "For many apps, some combo will make the most sense. For F-Droid, we have a variable `DB_VERSION` for the internal database.  We only handle upgrading the database, never downgrading.  So that needs to be the most important part of the versionCode.  Any build with `DB_VERSION = 77` should not be upgraded by any build with `DB_VERSION = 75`.  Then the minor part is the commit count, so it looks like (7502543, 7502544, 7702601, etc). with `DB_VERSION` as the first two digits, then a 0-padded commit count as the last 5 digits."
msgstr "对于许多应用，某些组合最有意义。对于 F-Droid，我们有一个用于内部数据库的变量 `DB_VERSION`。我们只负责升级数据库，从不降级。所以这需要成为 versionCode 中最重要的部分。任何具有 `DB_VERSION = 77` 的构建都不应该被具有 `DB_VERSION = 75` 的任何构建升级。然后次要部分是提交计数，因此它看起来像（7502543、7502544、7702601 等）。用 `DB_VERSION` 作为前两位数字，然后一个 0 填充的提交计数作为最后 5 位数字。"

#. type: Title ##
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid "Configuring GitLab CI"
msgstr "配置 GitLab CI"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
msgid "This assumes that the app is already setup with _.gitlab-ci.yml_ and builds are running on GitLab CI.  This also works for forks of the main project that has the _.gitlab-ci-yml_."
msgstr "这假设应用已经使用 _.gitlab-ci.yml_ 进行设置，并且构建正在 GitLab CI 上运行。这也适用于具有 _.gitlab-ci-yml_ 的主项目的分支。"

#. type: Bullet: '1. '
#: _docs/Publishing_Nightly_Builds.md
msgid "Run `fdroid nightly --show-secret-var` in the local git repo that is being setup, e.g. _fdroid/fdroidclient_.  It will print out the SSH Public Key.  Using `--show-secret-var` will make it print out base 64 text to be pasted into secret variable called `DEBUG_KEYSTORE`.  Careful! That text is the entire _debug.keystore_, so protect it accordingly!"
msgstr "在正在设置的本地 git 代码库中每日运行 `fdroid --show-secret-var`，例如_fdroid/fdroidclient_。它将打印出 SSH 公钥。使用 `--show-secret-var` 将打印出 base 64 文本以粘贴到名为 `DEBUG_KEYSTORE` 的秘密变量中。小心！该文本是整个 _debug.keystore_，因此请相应地保护它！"

#. type: Bullet: '2. '
#: _docs/Publishing_Nightly_Builds.md
msgid "Create a new GitLab \"project\" by appending _-nightly_ to the name. For example, <https://gitlab.com/fdroid/fdroidclient> becomes <https://gitlab.com/fdroid/fdroidclient-nightly> and <https://gitlab.com/eighthave/fdroidclient> becomes <https://gitlab.com/eighthave/fdroidclient-nightly>"
msgstr "创建一个新的 GitLab \"项目\"，将 _-nightly_ 附加到名称上。例如，<https://gitlab.com/fdroid/fdroidclient> 变成 <https://gitlab.com/fdroid/fdroidclient-nightly>，<https://gitlab.com/eighthave/fdroidclient> 变成 <https://gitlab.com/eighthave/fdroidclient-nightly>"

#. type: Bullet: '3. '
#: _docs/Publishing_Nightly_Builds.md
msgid "In that new project, add the SSH Public Key derived from your _debug.keystore_ as a Deploy Key in your Repository Settings, e.g.  `https://gitlab.com/eighthave/fdroidclient-nightly/settings/repository`"
msgstr "在该新项目中，添加从 _debug.keystore_ 派生的 SSH 公钥作为存储库设置中的部署密钥，例如`https://gitlab.com/eighthave/fdroidclient-nightly/settings/repository`"

#. type: Bullet: '4. '
#: _docs/Publishing_Nightly_Builds.md
msgid "In the CI/CD Settings of the project being built, paste that into GitLab CI Secret Variable called `DEBUG_KEYSTORE`, e.g.  `https://gitlab.com/eighthave/fdroidclient/settings/ci_cd`"
msgstr "在正在构建的项目的 CI/CD 设置中，将其粘贴到名为 `DEBUG_KEYSTORE` 的 GitLab CI 秘密变量中，例如`https://gitlab.com/eighthave/fdroidclient/settings/ci_cd`"

#. type: Bullet: '5. '
#: _docs/Publishing_Nightly_Builds.md
msgid "Then in that same page, in the Protected section, set up your _master_ branch to limit the possibility of leaking the _debug.keystore_.  If _master_ cannot be force-pushed, then any attempts to get the stored secrets are permanently written to the git history.  Without that protection, someone with push access could push a commit in a branch to print out the secrets, then remove that commit to hide their actions."
msgstr "然后在同一页面中的受保护部分，设置你的 _master_ 分支以限制泄漏 _debug.keystore_ 的可能性。如果 _master_ 不能被强制推送，那么任何获取存储机密的尝试都会永久写入 git 历史记录。如果没有这种保护，具有推送访问权限的人可以在分支中推送提交以打印出机密，然后删除该提交以隐藏他们的操作。"

#. type: Bullet: '6. '
#: _docs/Publishing_Nightly_Builds.md
msgid "Add a _deploy_ stage to your _.gitlab-ci.yml_ that produces only the build to publish to the nightly, then runs `fdroid nightly`. For example:"
msgstr "将 _deploy_ 阶段添加到你的 _.gitlab-ci.yml_，该阶段仅生成要发布到每日构建，然后每日运行 `fdroid`。例如："

#. type: Fenced code block (yaml)
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid ""
"deploy_nightly:\n"
"  stage: deploy\n"
"  only:\n"
"    - master\n"
"  script:\n"
"    - ./gradlew assembleDebug\n"
"    - pip3 install fdroidserver\n"
"    - export PATH=~/.local/bin:$PATH\n"
"    - fdroid nightly\n"
msgstr ""
"deploy_nightly:\n"
"  stage: deploy\n"
"  only:\n"
"    - master\n"
"  script:\n"
"    - ./gradlew assembleDebug\n"
"    - pip3 install fdroidserver\n"
"    - export PATH=~/.local/bin:$PATH\n"
"    - fdroid nightly\n"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
msgid "For a real world example using _gitlab-ci_, see _fdroidclient_: * <https://gitlab.com/fdroid/fdroidclient-nightly> * <https://gitlab.com/fdroid/fdroidclient/blob/master/.gitlab-ci.yml>"
msgstr "有关使用 _gitlab-ci_ 的实际例子，请参阅 _fdroidclient_: * <https://gitlab.com/fdroid/fdroidclient-nightly> * <https://gitlab.com/fdroid/fdroidclient/blob/master/.gitlab-ci.yml>"

#. type: Title ##
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid "Configuring for GitHub Actions"
msgstr "配置 GitHub Actions"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
msgid "GitHub and GitHub Actions are both proprietary platforms that are widely used to develop free software.  Since F-Droid does not promote proprietary software, there is no official support for GitHub Actions.  All of the F-Droid tooling is free software, so contributors have made a GitHub Action based on the F-Droid tools."
msgstr "GitHub 和 GitHub Actions 都是广泛用于开发自由软件的专有平台。 由于 F-Droid 不推广专有软件，因此 GitHub Actions 没有官方支持。 所有 F-Droid 工具都是自由软件，因此贡献者基于 F-Droid 工具制作了一个 GitHub Action。"

#. type: Bullet: '2. '
#: _docs/Publishing_Nightly_Builds.md
msgid "Create a new GitHub \"project\" by appending _-nightly_ to the name. For example, <https://github.com/f-droid/fdroidclient> becomes <https://github.com/f-droid/fdroidclient-nightly> and <https://github.com/eighthave/fdroidclient> becomes <https://github.com/eighthave/fdroidclient-nightly>"
msgstr "创建一个新的 Github \"项目\"，将 _-nightly_ 附加到名称上。例如，<https://github.com/f-droid/fdroidclient> 变成 <https://github.com/f-droid/fdroidclient-nightly>，<https://github.com/eighthave/fdroidclient> 变成 <https://github.com/eighthave/fdroidclient-nightly>"

#. type: Bullet: '3. '
#: _docs/Publishing_Nightly_Builds.md
msgid "In that new project, add the SSH Public Key derived from your _debug.keystore_ as a Deploy Key in your Security settings, e.g.  `https://github.com/eighthave/fdroidclient-nightly/settings/keys`"
msgstr "在该新项目中，添加从 _debug.keystore_ 派生的 SSH 公钥作为安全设置中的部署密钥，例如`https://github.com/eighthave/fdroidclient-nightly/settings/keys`"

#. type: Bullet: '4. '
#: _docs/Publishing_Nightly_Builds.md
msgid "In the Settings of the project being built, find \"Actions\" under \"Secrets\" in the \"Security\" section.  Paste the whole `DEBUG_KEYSTORE` output line into a new repository secret called `DEBUG_KEYSTORE`, e.g.  `https://github.com/eighthave/fdroidclient/settings/secrets/actions`."
msgstr "在正构建项目的设置中，于“安全”部分的“Secrets”项下找到“Actions”。将完整的 `DEBUG_KEYSTORE`输出行粘帖到名为 `DEBUG_KEYSTORE`的新存储库 secret，如 `https://github.com/eighthave/fdroidclient/settings/secrets/actions`。"

#. type: Bullet: '5. '
#: _docs/Publishing_Nightly_Builds.md
msgid "Add a _nightly_ stage to your _.github/workflows/_ that produces only the build to publish to the nightly, then runs `fdroid nightly`. For example:"
msgstr "将 _nightly_ 阶段添加到你的 _.github/workflows_，该阶段仅生成要发布到每日构建，然后每日运行 `fdroid nightly`。例如："

#. type: Fenced code block (yaml)
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid ""
"name: Publish nightly build\n"
"\n"
"on:\n"
"  push:\n"
"    branches:\n"
"      - main\n"
"\n"
"jobs:\n"
"  nightly:\n"
"    name: Publish nightly build\n"
"    runs-on: ubuntu-latest\n"
"    environment: nightly\n"
"    steps:\n"
"      - name: Checkout\n"
"        uses: actions/checkout@v2\n"
"      - name: Gradle Wrapper Validation\n"
"        uses: gradle/wrapper-validation-action@v1\n"
"      - name: Set up JDK 11\n"
"        uses: actions/setup-java@v2\n"
"        with:\n"
"          distribution: 'adopt'\n"
"          java-version: 11\n"
"      - name: Build\n"
"        run: |\n"
"          # use timestamp as Version Code\n"
"          export versionCode=$(date '+%s')\n"
"          sed -i \"s,^\\(\\s*versionCode\\)  *[0-9].*,\\1 $versionCode,\" app/build.gradle\n"
"          ./gradlew assembleDebug\n"
"      - name: fdroid nightly\n"
"        run: |\n"
"          sudo add-apt-repository ppa:fdroid/fdroidserver\n"
"          sudo apt-get update\n"
"          sudo apt-get install apksigner fdroidserver --no-install-recommends\n"
"          export DEBUG_KEYSTORE=${{ '{{' }} secrets.DEBUG_KEYSTORE }}\n"
"          fdroid nightly --archive-older 10\n"
msgstr ""
"name: Publish nightly build\n"
"\n"
"on:\n"
"  push:\n"
"    branches:\n"
"      - main\n"
"\n"
"jobs:\n"
"  nightly:\n"
"    name: Publish nightly build\n"
"    runs-on: ubuntu-latest\n"
"    environment: nightly\n"
"    steps:\n"
"      - name: Checkout\n"
"        uses: actions/checkout@v2\n"
"      - name: Gradle Wrapper Validation\n"
"        uses: gradle/wrapper-validation-action@v1\n"
"      - name: Set up JDK 11\n"
"        uses: actions/setup-java@v2\n"
"        with:\n"
"          distribution: 'adopt'\n"
"          java-version: 11\n"
"      - name: Build\n"
"        run: |\n"
"          # use timestamp as Version Code\n"
"          export versionCode=$(date '+%s')\n"
"          sed -i \"s,^\\(\\s*versionCode\\)  *[0-9].*,\\1 $versionCode,\" app/build.gradle\n"
"          ./gradlew assembleDebug\n"
"      - name: fdroid nightly\n"
"        run: |\n"
"          sudo add-apt-repository ppa:fdroid/fdroidserver\n"
"          sudo apt-get update\n"
"          sudo apt-get install apksigner fdroidserver --no-install-recommends\n"
"          export DEBUG_KEYSTORE=${{ '{{' }} secrets.DEBUG_KEYSTORE }}\n"
"          fdroid nightly --archive-older 10\n"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
msgid "There is an alternate approach based on Docker maintained by @wardvl: [wardvl/f-droid-nightly-action](https://github.com/wardvl/f-droid-nightly-action/)"
msgstr "有一种基于 Docker 的替代方法，由 @wardvl 维护：[wardvl/f-droid-nightly-action](https://github.com/wardvl/f-droid-nightly-action/)"

#. type: Title ##
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid "Configuring for GitHub and Travis CI"
msgstr "为 GitHub 和 Travis CI 进行配置"

#. type: Bullet: '1. '
#: _docs/Publishing_Nightly_Builds.md
msgid "Generate a new _debug.keystore_ for each app, since GitHub only allows a deploy key to be used on a single repo.  Keep that file safe, since it is the signing key for your nightly build."
msgstr "为每个应用生成一个新的 _debug.keystore_，因为 GitHub 只允许在单个代码库上使用部署密钥。确保该文件安全，因为它是你每日构建的签名密钥。"

#. type: Fenced code block
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid ""
"keytool -genkey -v -keystore im.zom.messenger-debug.keystore \\\n"
"  -keyalg RSA -keysize 2048 -validity 10000 \\\n"
"  -alias androiddebugkey -storepass android -keypass android \\\n"
"  -dname \"CN=Android Debug,O=Android,C=US\"\n"
msgstr ""
"keytool -genkey -v -keystore im.zom.messenger-debug.keystore \\\n"
"  -keyalg RSA -keysize 2048 -validity 10000 \\\n"
"  -alias androiddebugkey -storepass android -keypass android \\\n"
"  -dname \"CN=Android Debug,O=Android,C=US\"\n"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid ""
"2. Set a GitHub Deploy Key for\n"
"  `https://github.com/zom/zom-android-nightly` by going to\n"
"  `https://github.com/zom/zom-android-nightly/settings/keys`.  The\n"
"  public SSH key is printed out by running:\n"
msgstr ""
"2.设置一个 GitHub 部署密钥，用于\n"
"  `https://github.com/zom/zom-android-nightly`，并转到\n"
"  `https://github.com/zom/zom-android-nightly/settings/keys`。 该\n"
"  SSH 公钥是通过运行以下程序打印出来的。\n"

#. type: Fenced code block
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid "fdroid nightly --keystore im.zom.messenger-debug.keystore\n"
msgstr "fdroid nightly --keystore im.zom.messenger-debug.keystore\n"

#. type: Bullet: '3. '
#: _docs/Publishing_Nightly_Builds.md
msgid "check _Allow write access_ in the GitHub Deploy Key settings"
msgstr "在 GitHub Deploy Key 设置中勾选 _Allow write access_"

#. type: Bullet: '4. '
#: _docs/Publishing_Nightly_Builds.md
msgid "To print out the secret variable contents, use `--show-secret-var`.  Careful! That text is the entire _debug.keystore_, so protect it accordingly! This prints out base64 text to be pasted into a Travis CI \"Environment Variable\" in `https://travis-ci.org/zom/Zom-Android/settings`. Call the variable `DEBUG_KEYSTORE` and make sure \"Display value in build log\" is __OFF__."
msgstr "要打印出秘密变量的内容，请使用 `--show-secret-var`。小心！该文本是整个 _debug.keystore_，因此请相应地保护它！这会打印出要粘贴到 ` https://travis-ci.org/zom/Zom-Android/settings` 中的 Travis CI “环境变量”中的 Base64 文本。调用变量 `DEBUG_KEYSTORE` 并确保“在构建日志中显示值”为 __OFF__。"

#. type: Fenced code block
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid "fdroid nightly --keystore im.zom.messenger-debug.keystore --show-secret-var\n"
msgstr "fdroid nightly --keystore im.zom.messenger-debug.keystore --show-secret-var\n"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
msgid "And here's a simple example of how to add _fdroidserver_ to your Travis CI setup to make it deploy the APK after a successful test:"
msgstr "这是一个简单的示例，说明如何将 _fdroidserver_ 添加到你的 Travis CI 设置中，以使其在成功测试后部署 APK："

#. type: Fenced code block (yaml)
#: _docs/Publishing_Nightly_Builds.md
#, no-wrap
msgid ""
"sudo: required\n"
"language: android\n"
"\n"
"addons:\n"
"  apt:\n"
"    sources:\n"
"      - sourceline: 'ppa:fdroid/fdroidserver'\n"
"    packages:\n"
"      - fdroidserver\n"
"      - openssh-client\n"
"\n"
"android:\n"
"  components:\n"
"    - tools\n"
"    - platform-tools\n"
"    - build-tools-26.0.2\n"
"    - android-25\n"
"  licenses:\n"
"    - 'android-sdk-license-.+'\n"
"\n"
"script:\n"
"  - ./gradlew test\n"
"\n"
"after_success:\n"
"  - fdroid nightly -v\n"
msgstr ""
"sudo: required\n"
"language: android\n"
"\n"
"addons:\n"
"  apt:\n"
"    sources:\n"
"      - sourceline: 'ppa:fdroid/fdroidserver'\n"
"    packages:\n"
"      - fdroidserver\n"
"      - openssh-client\n"
"\n"
"android:\n"
"  components:\n"
"    - tools\n"
"    - platform-tools\n"
"    - build-tools-26.0.2\n"
"    - android-25\n"
"  licenses:\n"
"    - 'android-sdk-license-.+'\n"
"\n"
"script:\n"
"  - ./gradlew test\n"
"\n"
"after_success:\n"
"  - fdroid nightly -v\n"

#. type: Plain text
#: _docs/Publishing_Nightly_Builds.md
msgid "For a real world example, see _Zom_: * <https://github.com/zom/Zom-Android-nightly> * <https://github.com/zom/Zom-Android/blob/master/.travis.yml> * <https://travis-ci.org/zom/Zom-Android>"
msgstr "关于一个真实的例子，请参阅 _Zom_: * <https://github.com/zom/Zom-Android-nightly> * <https://github.com/zom/Zom-Android/blob/master/.travis.yml> * <https://travis-ci.org/zom/Zom-Android>"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Release_Channels_and_Signing_Keys.md
#, no-wrap
msgid "Release Channels and Signing Keys"
msgstr "发布通道和签名密钥"

#. type: Plain text
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "This is a list of all signing keys used for F-Droid releases."
msgstr "这是用于 F-Droid 版本的所有签名密钥的列表。"

#. type: Title ##
#: _docs/Release_Channels_and_Signing_Keys.md
#, no-wrap
msgid "F-Droid client app for Android"
msgstr "适用于 Android 的 F-Droid 客户端应用"

#. type: Bullet: '-   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "git repo: <https://gitlab.com/fdroid/fdroidclient>"
msgstr "git repo: <https://gitlab.com/fdroid/fdroidclient>"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "git tags signed by \"Hans-Christoph Steiner \\<hans@guardianproject.info>\" aka \"Hans-Christoph Steiner \\<hans@eds.org>\" aka \"Hans-Christoph Steiner \\<hans@at.or.at>\" with fingerprint: <br /> `EE66 20C7 136B 0D2C 456C 0A4D E9E2 8DEA 00AA 5556`"
msgstr "git tags signed by \"Hans-Christoph Steiner \\<hans@guardianproject.info>\" aka \"Hans-Christoph Steiner \\<hans@eds.org>\" aka \"Hans-Christoph Steiner \\<hans@at.or.at>\" with fingerprint: <br /> `EE66 20C7 136B 0D2C 456C 0A4D E9E2 8DEA 00AA 5556`"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "or previously signed by \"Daniel Martí \\<mvdan@mvdan.cc>\" aka \"Daniel Martí \\<mvdan@fsfe.org>\" with fingerprint: <br />`A9DA 13CD F7A1 4ACD D3DE E530 F4CA FFDB 4348 041C`"
msgstr "or previously signed by \"Daniel Martí \\<mvdan@mvdan.cc>\" aka \"Daniel Martí \\<mvdan@fsfe.org>\" with fingerprint: <br />`A9DA 13CD F7A1 4ACD D3DE E530 F4CA FFDB 4348 041C`"

#. type: Bullet: '-   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "official binary releases: <https://f-droid.org/packages/org.fdroid.fdroid>"
msgstr "official binary releases: <https://f-droid.org/packages/org.fdroid.fdroid>"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "GPG signing key: \"F-Droid \\<admin@f-droid.org>\""
msgstr "GPG signing key: \"F-Droid \\<admin@f-droid.org>\""

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "Primary key fingerprint: `37D2 C987 89D8 3119 4839 4E3E 41E7 044E 1DBA 2E89`"
msgstr "Primary key fingerprint: `37D2 C987 89D8 3119 4839 4E3E 41E7 044E 1DBA 2E89`"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "Subkey fingerprint: `802A 9799 0161 1234 6E1F EFF4 7A02 9E54 DD5D CE7A`"
msgstr "Subkey fingerprint: `802A 9799 0161 1234 6E1F EFF4 7A02 9E54 DD5D CE7A`"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "APK signing key: ``` Owner: CN=Ciaran Gultnieks, OU=Unknown, O=Unknown, L=Wetherby, ST=Unknown, C=UK Issuer: CN=Ciaran Gultnieks, OU=Unknown, O=Unknown, L=Wetherby, ST=Unknown, C=UK Serial number: 4c49cd00 Valid from: Fri Jul 23 13:10:24 EDT 2010 until: Tue Dec 08 12:10:24 EST 2037 Certificate fingerprints:"
msgstr "APK signing key: ``` Owner: CN=Ciaran Gultnieks, OU=Unknown, O=Unknown, L=Wetherby, ST=Unknown, C=UK Issuer: CN=Ciaran Gultnieks, OU=Unknown, O=Unknown, L=Wetherby, ST=Unknown, C=UK Serial number: 4c49cd00 Valid from: Fri Jul 23 13:10:24 EDT 2010 until: Tue Dec 08 12:10:24 EST 2037 Certificate fingerprints:"

#. type: Plain text
#: _docs/Release_Channels_and_Signing_Keys.md
#, no-wrap
msgid ""
"          MD5:  17:C5:5C:62:80:56:E1:93:E9:56:44:E9:89:79:27:86\n"
"          SHA1: 05:F2:E6:59:28:08:89:81:B3:17:FC:9A:6D:BF:E0:4B:0F:A1:3B:4E\n"
"          SHA256: 43:23:8D:51:2C:1E:5E:B2:D6:56:9F:4A:3A:FB:F5:52:34:18:B8:2E:0A:3E:D1:55:27:70:AB:B9:A9:C9:CC:AB\n"
"        ```\n"
"    - APK signing certificate fingerprint:\n"
"      ```\n"
"      43238d512c1e5eb2d6569f4a3afbf5523418b82e0a3ed1552770abb9a9c9ccab\n"
"      ```\n"
msgstr ""
"          MD5:  17:C5:5C:62:80:56:E1:93:E9:56:44:E9:89:79:27:86\n"
"          SHA1: 05:F2:E6:59:28:08:89:81:B3:17:FC:9A:6D:BF:E0:4B:0F:A1:3B:4E\n"
"          SHA256: 43:23:8D:51:2C:1E:5E:B2:D6:56:9F:4A:3A:FB:F5:52:34:18:B8:2E:0A:3E:D1:55:27:70:AB:B9:A9:C9:CC:AB\n"
"        ```\n"
"    - APK signing certificate fingerprint:\n"
"      ```\n"
"      43238d512c1e5eb2d6569f4a3afbf5523418b82e0a3ed1552770abb9a9c9ccab\n"
"      ```\n"

#. type: Plain text
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "And here is the whole certificate:"
msgstr "而这里是整个证书:"

#. type: Fenced code block
#: _docs/Release_Channels_and_Signing_Keys.md
#, no-wrap
msgid ""
"\n"
"-----BEGIN PUBLIC KEY-----\n"
"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAltB15HwBTngiyJ/Wf3ld\n"
"IyA+KohD9Tuk5rG/Xy/Q4iWTgmfPyuf79P5ZY0avuvQHD9uR9m+83yNIo9kkMFAo\n"
"JPgFF7FW+rAICb3I5jG/qa/ULZBFq1/W0o2eFAr8EwCRexm3xsTfSklM8ffLSmPI\n"
"DXNCZdc1r55PCUVfQnqmWlNWP4ezNsosGdJE/LumF7oLGeVu00r+CyU6uR4v2xJx\n"
"8bnjwyMgJ+2IYqES8HBuI0zyNpFLk5vPlZgh7LKmwYBX4HDeNCgEbZSxdeHYm9eV\n"
"5TVJmgkfW8ZaedU5qNQ4kexQQFissowIOTtXGLV2AKIR6AP0pjTlxX8lubjEQixv\n"
"2QIDAQAB\n"
"-----END PUBLIC KEY-----\n"
"\n"
"-----BEGIN CERTIFICATE-----\n"
"MIIDXjCCAkagAwIBAgIETEnNADANBgkqhkiG9w0BAQUFADBxMQswCQYDVQQGEwJV\n"
"SzEQMA4GA1UECBMHVW5rbm93bjERMA8GA1UEBxMIV2V0aGVyYnkxEDAOBgNVBAoT\n"
"B1Vua25vd24xEDAOBgNVBAsTB1Vua25vd24xGTAXBgNVBAMTEENpYXJhbiBHdWx0\n"
"bmlla3MwHhcNMTAwNzIzMTcxMDI0WhcNMzcxMjA4MTcxMDI0WjBxMQswCQYDVQQG\n"
"EwJVSzEQMA4GA1UECBMHVW5rbm93bjERMA8GA1UEBxMIV2V0aGVyYnkxEDAOBgNV\n"
"BAoTB1Vua25vd24xEDAOBgNVBAsTB1Vua25vd24xGTAXBgNVBAMTEENpYXJhbiBH\n"
"dWx0bmlla3MwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCW0HXkfAFO\n"
"eCLIn9Z/eV0jID4qiEP1O6Tmsb9fL9DiJZOCZ8/K5/v0/lljRq+69AcP25H2b7zf\n"
"I0ij2SQwUCgk+AUXsVb6sAgJvcjmMb+pr9QtkEWrX9bSjZ4UCvwTAJF7GbfGxN9K\n"
"SUzx98tKY8gNc0Jl1zWvnk8JRV9CeqZaU1Y/h7M2yiwZ0kT8u6YXugsZ5W7TSv4L\n"
"JTq5Hi/bEnHxuePDIyAn7YhioRLwcG4jTPI2kUuTm8+VmCHssqbBgFfgcN40KARt\n"
"lLF14dib15XlNUmaCR9bxlp51Tmo1DiR7FBAWKyyjAg5O1cYtXYAohHoA/SmNOXF\n"
"fyW5uMRCLG/ZAgMBAAEwDQYJKoZIhvcNAQEFBQADggEBAAjk72memAdnf/VnU9pz\n"
"77I5DVriwX5NtpHV33p7YPwHGuUJxUFL59XadN8oEeg9NmjEoLGryEufp9lrTN8w\n"
"u6aFF60qk+IzsEKXKsBVOkgByevge/V+vpo7PW1mOWUmDlDzuPRtsFMXYeYDQKK9\n"
"3DQmCYOX/aVARKF+UkRUn5hptGDKXm4ha29qLbBYC0gMoq/m7GtG7trPpKpFA4gJ\n"
"7ODFl4ZT1shfZ45/WiFW0b7dgRd1HmSksNzRQPMECwIYIajZOu2NAbo222yCNyIR\n"
"/tcU2aMmBwOM39VlvVKf/GNyEqqiwiTvIrYD7M77W/HghcGR1LJP50KxerP1XU5v\n"
"Be8=\n"
"-----END CERTIFICATE-----\n"
msgstr ""
"\n"
"-----BEGIN PUBLIC KEY-----\n"
"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAltB15HwBTngiyJ/Wf3ld\n"
"IyA+KohD9Tuk5rG/Xy/Q4iWTgmfPyuf79P5ZY0avuvQHD9uR9m+83yNIo9kkMFAo\n"
"JPgFF7FW+rAICb3I5jG/qa/ULZBFq1/W0o2eFAr8EwCRexm3xsTfSklM8ffLSmPI\n"
"DXNCZdc1r55PCUVfQnqmWlNWP4ezNsosGdJE/LumF7oLGeVu00r+CyU6uR4v2xJx\n"
"8bnjwyMgJ+2IYqES8HBuI0zyNpFLk5vPlZgh7LKmwYBX4HDeNCgEbZSxdeHYm9eV\n"
"5TVJmgkfW8ZaedU5qNQ4kexQQFissowIOTtXGLV2AKIR6AP0pjTlxX8lubjEQixv\n"
"2QIDAQAB\n"
"-----END PUBLIC KEY-----\n"
"\n"
"-----BEGIN CERTIFICATE-----\n"
"MIIDXjCCAkagAwIBAgIETEnNADANBgkqhkiG9w0BAQUFADBxMQswCQYDVQQGEwJV\n"
"SzEQMA4GA1UECBMHVW5rbm93bjERMA8GA1UEBxMIV2V0aGVyYnkxEDAOBgNVBAoT\n"
"B1Vua25vd24xEDAOBgNVBAsTB1Vua25vd24xGTAXBgNVBAMTEENpYXJhbiBHdWx0\n"
"bmlla3MwHhcNMTAwNzIzMTcxMDI0WhcNMzcxMjA4MTcxMDI0WjBxMQswCQYDVQQG\n"
"EwJVSzEQMA4GA1UECBMHVW5rbm93bjERMA8GA1UEBxMIV2V0aGVyYnkxEDAOBgNV\n"
"BAoTB1Vua25vd24xEDAOBgNVBAsTB1Vua25vd24xGTAXBgNVBAMTEENpYXJhbiBH\n"
"dWx0bmlla3MwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCW0HXkfAFO\n"
"eCLIn9Z/eV0jID4qiEP1O6Tmsb9fL9DiJZOCZ8/K5/v0/lljRq+69AcP25H2b7zf\n"
"I0ij2SQwUCgk+AUXsVb6sAgJvcjmMb+pr9QtkEWrX9bSjZ4UCvwTAJF7GbfGxN9K\n"
"SUzx98tKY8gNc0Jl1zWvnk8JRV9CeqZaU1Y/h7M2yiwZ0kT8u6YXugsZ5W7TSv4L\n"
"JTq5Hi/bEnHxuePDIyAn7YhioRLwcG4jTPI2kUuTm8+VmCHssqbBgFfgcN40KARt\n"
"lLF14dib15XlNUmaCR9bxlp51Tmo1DiR7FBAWKyyjAg5O1cYtXYAohHoA/SmNOXF\n"
"fyW5uMRCLG/ZAgMBAAEwDQYJKoZIhvcNAQEFBQADggEBAAjk72memAdnf/VnU9pz\n"
"77I5DVriwX5NtpHV33p7YPwHGuUJxUFL59XadN8oEeg9NmjEoLGryEufp9lrTN8w\n"
"u6aFF60qk+IzsEKXKsBVOkgByevge/V+vpo7PW1mOWUmDlDzuPRtsFMXYeYDQKK9\n"
"3DQmCYOX/aVARKF+UkRUn5hptGDKXm4ha29qLbBYC0gMoq/m7GtG7trPpKpFA4gJ\n"
"7ODFl4ZT1shfZ45/WiFW0b7dgRd1HmSksNzRQPMECwIYIajZOu2NAbo222yCNyIR\n"
"/tcU2aMmBwOM39VlvVKf/GNyEqqiwiTvIrYD7M77W/HghcGR1LJP50KxerP1XU5v\n"
"Be8=\n"
"-----END CERTIFICATE-----\n"

#. type: Plain text
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "To confirm that the `1DBA2E89 admin@f-droid.org` PGP key is trusted by the index JAR signing key that is built into the F-Droid client app, run these commands:"
msgstr "要确认 `1DBA2E89 admin@f-droid.org` PGP 密钥是否受 F-Droid 客户端应用中内置的索引 JAR 签名密钥的信任，请运行以下命令："

#. type: Fenced code block (bash)
#: _docs/Release_Channels_and_Signing_Keys.md
#, no-wrap
msgid ""
"sudo apt-get install wget vim-common unzip openjdk-8-jdk-headless\n"
"wget https://f-droid.org/assets/admin@f-droid.org.jar\n"
"\n"
"# verify against the key embedded in fdroidclient\n"
"git clone https://gitlab.com/fdroid/fdroidclient\n"
"grep -m1 -Eo '3082035e[0-9a-f]+' fdroidclient/app/src/main/res/values/default_repos.xml | xxd -r -p - > fdroidclient.der\n"
"keytool -import -noprompt -trustcacerts -alias fdroidclient -storepass android -file fdroidclient.der -keystore fdroidclient.jks\n"
"jarsigner -keystore fdroidclient.jks -storepass android -strict -verify admin@f-droid.org.jar\n"
"\n"
"# verify against the key that signed the index.jar\n"
"wget https://f-droid.org/repo/index.jar\n"
"unzip -p index.jar META-INF/CIARANG.RSA | openssl pkcs7 -print_certs -inform DER -out index.cer\n"
"keytool -import  -noprompt -trustcacerts -alias index -storepass android -file index.cer -keystore index.jks\n"
"jarsigner -keystore index.jks -storepass android -strict -verify admin@f-droid.org.jar\n"
"\n"
"# verify against the key that is embedded in this page\n"
"wget -O - https://f-droid.org/docs/Release_Channels_and_Signing_Keys/ | openssl x509 -inform pem -outform der -out docs.der\n"
"keytool -import -noprompt -trustcacerts -alias docs -storepass android -file docs.der -keystore docs.jks\n"
"jarsigner -keystore docs.jks -storepass android -strict -verify admin@f-droid.org.jar\n"
"\n"
"# when satisfied with the verification, import it\n"
"unzip admin@f-droid.org.jar admin@f-droid.org.asc\n"
"gpg --import admin@f-droid.org.asc\n"
"gpg --keyserver keyserver.ubuntu.com --recv-key 37D2C98789D8311948394E3E41E7044E1DBA2E89\n"
msgstr ""
"sudo apt-get install wget vim-common unzip openjdk-8-jdk-headless\n"
"wget https://f-droid.org/assets/admin@f-droid.org.jar\n"
"\n"
"# verify against the key embedded in fdroidclient\n"
"git clone https://gitlab.com/fdroid/fdroidclient\n"
"grep -m1 -Eo '3082035e[0-9a-f]+' fdroidclient/app/src/main/res/values/default_repos.xml | xxd -r -p - > fdroidclient.der\n"
"keytool -import -noprompt -trustcacerts -alias fdroidclient -storepass android -file fdroidclient.der -keystore fdroidclient.jks\n"
"jarsigner -keystore fdroidclient.jks -storepass android -strict -verify admin@f-droid.org.jar\n"
"\n"
"# verify against the key that signed the index.jar\n"
"wget https://f-droid.org/repo/index.jar\n"
"unzip -p index.jar META-INF/CIARANG.RSA | openssl pkcs7 -print_certs -inform DER -out index.cer\n"
"keytool -import  -noprompt -trustcacerts -alias index -storepass android -file index.cer -keystore index.jks\n"
"jarsigner -keystore index.jks -storepass android -strict -verify admin@f-droid.org.jar\n"
"\n"
"# verify against the key that is embedded in this page\n"
"wget -O - https://f-droid.org/docs/Release_Channels_and_Signing_Keys/ | openssl x509 -inform pem -outform der -out docs.der\n"
"keytool -import -noprompt -trustcacerts -alias docs -storepass android -file docs.der -keystore docs.jks\n"
"jarsigner -keystore docs.jks -storepass android -strict -verify admin@f-droid.org.jar\n"
"\n"
"# when satisfied with the verification, import it\n"
"unzip admin@f-droid.org.jar admin@f-droid.org.asc\n"
"gpg --import admin@f-droid.org.asc\n"
"gpg --keyserver keyserver.ubuntu.com --recv-key 37D2C98789D8311948394E3E41E7044E1DBA2E89\n"

#. type: Title ##
#: _docs/Release_Channels_and_Signing_Keys.md
#, no-wrap
msgid "fdroidserver"
msgstr "fdroidserver"

#. type: Bullet: '-   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "git repo: <https://gitlab.com/fdroid/fdroidserver>"
msgstr "git repo: <https://gitlab.com/fdroid/fdroidserver>"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "or previously \"Daniel Martí \\<mvdan@mvdan.cc>\" aka \"Daniel Martí \\<mvdan@fsfe.org>\" with fingerprint: <br />`A9DA 13CD F7A1 4ACD D3DE E530 F4CA FFDB 4348 041C`"
msgstr "or previously \"Daniel Martí \\<mvdan@mvdan.cc>\" aka \"Daniel Martí \\<mvdan@fsfe.org>\" with fingerprint: <br />`A9DA 13CD F7A1 4ACD D3DE E530 F4CA FFDB 4348 041C`"

#. type: Bullet: '-   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "source package: <https://pypi.python.org/pypi/fdroidserver>"
msgstr "source package: <https://pypi.python.org/pypi/fdroidserver>"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "package tags signed by \"Hans-Christoph Steiner \\<hans@guardianproject.info>\" aka \"Hans-Christoph Steiner \\<hans@eds.org>\" aka \"Hans-Christoph Steiner \\<hans@at.or.at>\" with fingerprint: <br /> `EE66 20C7 136B 0D2C 456C 0A4D E9E2 8DEA 00AA 5556` or previously <br />`5E61 C878 0F86 295C E17D 8677 9F0F E587 374B BE81`"
msgstr "package tags signed by \"Hans-Christoph Steiner \\<hans@guardianproject.info>\" aka \"Hans-Christoph Steiner \\<hans@eds.org>\" aka \"Hans-Christoph Steiner \\<hans@at.or.at>\" with fingerprint: <br /> `EE66 20C7 136B 0D2C 456C 0A4D E9E2 8DEA 00AA 5556` or previously <br />`5E61 C878 0F86 295C E17D 8677 9F0F E587 374B BE81`"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "release command: `python3 setup.py sdist upload --sign`"
msgstr "release command: `python3 setup.py sdist upload --sign`"

#. type: Bullet: '-   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "official Debian package: <https://packages.debian.org/fdroidserver>"
msgstr "official Debian package: <https://packages.debian.org/fdroidserver>"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "package source: <https://salsa.debian.org/python-team/packages/fdroidserver.git>"
msgstr "package source: <https://salsa.debian.org/python-team/packages/fdroidserver.git>"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "package tags signed by \"Hans-Christoph Steiner \\<hans@guardianproject.info>\" aka \"Hans-Christoph Steiner \\<hans@eds.org>\" aka \"Hans-Christoph Steiner \\<hans@at.or.at>\" with fingerprint: <br/> `EE66 20C7 136B 0D2C 456C 0A4D E9E2 8DEA 00AA 5556` or previously <br /> `5E61 C878 0F86 295C E17D 8677 9F0F E587 374B BE81`"
msgstr "package tags signed by \"Hans-Christoph Steiner \\<hans@guardianproject.info>\" aka \"Hans-Christoph Steiner \\<hans@eds.org>\" aka \"Hans-Christoph Steiner \\<hans@at.or.at>\" with fingerprint: <br/> `EE66 20C7 136B 0D2C 456C 0A4D E9E2 8DEA 00AA 5556` or previously <br /> `5E61 C878 0F86 295C E17D 8677 9F0F E587 374B BE81`"

#. type: Bullet: '-   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "official Ubuntu PPA: <https://launchpad.net/~fdroid/+archive/ubuntu/fdroidserver>"
msgstr "官方 Ubuntu PPA: <https://launchpad.net/~fdroid/+archive/ubuntu/fdroidserver>"

#. type: Bullet: '    - '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "fingerprint: `9AAC 2531 93B6 5D4D F1D0 A13E EC46 32C7 9C5E 0151`"
msgstr "fingerprint: `9AAC 2531 93B6 5D4D F1D0 A13E EC46 32C7 9C5E 0151`"

#. type: Plain text
#: _docs/Release_Channels_and_Signing_Keys.md
#, no-wrap
msgid ""
"    - how to setup:\n"
"    ```bash\n"
"    sudo add-apt-repository ppa:fdroid/fdroidserver\n"
"    sudo apt-get update\n"
"    sudo apt-get install fdroidserver\n"
"    ```\n"
msgstr ""
"    - 如何设置:\n"
"    ```bash\n"
"    sudo add-apt-repository ppa:fdroid/fdroidserver\n"
"    sudo apt-get update\n"
"    sudo apt-get install fdroidserver\n"
"    ```\n"

#. type: Title ##
#: _docs/Release_Channels_and_Signing_Keys.md
#, no-wrap
msgid "Repomaker"
msgstr "Repomaker"

#. type: Bullet: '-   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "git repo: <https://gitlab.com/fdroid/repomaker>"
msgstr "git repo: <https://gitlab.com/fdroid/repomaker>"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "git tags signed by \"Nico Alt \\<nicoalt@posteo.de>\" with fingerprint: <br /> `558B E907 1CA6 CA44 DBF5 576B 95A0 DAF7 DBC7 B548`"
msgstr "git tags signed by \"Nico Alt \\<nicoalt@posteo.de>\" with fingerprint: <br /> `558B E907 1CA6 CA44 DBF5 576B 95A0 DAF7 DBC7 B548`"

#. type: Bullet: '-   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "source package: <https://pypi.python.org/pypi/repomaker>"
msgstr "source package: <https://pypi.python.org/pypi/repomaker>"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "package tags signed by \"Nico Alt \\<nicoalt@posteo.de>\" with fingerprint: <br /> `558B E907 1CA6 CA44 DBF5 576B 95A0 DAF7 DBC7 B548`"
msgstr "package tags signed by \"Nico Alt \\<nicoalt@posteo.de>\" with fingerprint: <br /> `558B E907 1CA6 CA44 DBF5 576B 95A0 DAF7 DBC7 B548`"

#. type: Title ##
#: _docs/Release_Channels_and_Signing_Keys.md
#, no-wrap
msgid "Privileged Extension"
msgstr "特权扩展"

#. type: Bullet: '-   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "git repo: <https://gitlab.com/fdroid/privileged-extension>"
msgstr "git repo: <https://gitlab.com/fdroid/privileged-extension>"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "git tags signed by \"Hans-Christoph Steiner \\<hans@guardianproject.info>\" aka \"Hans-Christoph Steiner \\<hans@eds.org>\" aka \"Hans-Christoph Steiner \\<hans@at.or.at>\" with fingerprint: <br/>`EE66 20C7 136B 0D2C 456C 0A4D E9E2 8DEA 00AA 5556`"
msgstr "git tags signed by \"Hans-Christoph Steiner \\<hans@guardianproject.info>\" aka \"Hans-Christoph Steiner \\<hans@eds.org>\" aka \"Hans-Christoph Steiner \\<hans@at.or.at>\" with fingerprint: <br/>`EE66 20C7 136B 0D2C 456C 0A4D E9E2 8DEA 00AA 5556`"

#. type: Title ##
#: _docs/Release_Channels_and_Signing_Keys.md
#, no-wrap
msgid "F-Droid Jekyll Plugin"
msgstr "F-Droid Jekyll Plugin"

#. type: Bullet: '-   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "git repo: <https://gitlab.com/fdroid/jekyll-fdroid>"
msgstr "git repo: <https://gitlab.com/fdroid/jekyll-fdroid>"

#. type: Bullet: '    -   '
#: _docs/Release_Channels_and_Signing_Keys.md
msgid "git tags signed by \"Hans-Christoph Steiner \\<hans@guardianproject.info>\" aka \"Hans-Christoph Steiner \\<hans@eds.org>\" aka \"Hans-Christoph Steiner \\<hans@at.or.at>\" with fingerprint: <br /> `EE66 20C7 136B 0D2C 456C 0A4D E9E2 8DEA 00AA 5556` or \"Nico Alt \\<nicoalt@posteo.de>\" with fingerprint: <br /> `558B E907 1CA6 CA44 DBF5 576B 95A0 DAF7 DBC7 B548`"
msgstr "git tags signed by \"Hans-Christoph Steiner \\<hans@guardianproject.info>\" aka \"Hans-Christoph Steiner \\<hans@eds.org>\" aka \"Hans-Christoph Steiner \\<hans@at.or.at>\" with fingerprint: <br /> `EE66 20C7 136B 0D2C 456C 0A4D E9E2 8DEA 00AA 5556` or \"Nico Alt \\<nicoalt@posteo.de>\" with fingerprint: <br /> `558B E907 1CA6 CA44 DBF5 576B 95A0 DAF7 DBC7 B548`"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Repository_Style_Guide.md
#, no-wrap
msgid "Repository Style Guide"
msgstr "存储库风格指南"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "This page is a __work in progress__, and needs attention from experts on the subject, especially on fact checking."
msgstr "此页面是__正在进行的__工作，需要专家关注这个主题，尤其是事实核查方面。"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "This guide gives some more detailed information on what to store in metadata fields. Most items are outdated and will be merge with the manual over time."
msgstr "本指南给出了一些更详细的信息，说明在元数据字段中应该存储什么。大多数项目已经过期，将随着时间的推移与手册合并。"

#. type: Bullet: '* '
#: _docs/Repository_Style_Guide.md
msgid "*E.g* <https://gitlab.com/fdroid/fdroidclient/tree/master>"
msgstr "*例如* <https://gitlab.com/fdroid/fdroidclient/tree/master>"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "The F-Droid server does not directly publish an APK online, instead the F-Droid server needs a buildable source to build an APK from. This way the server guarantees that the resulting APK accurately represents the source code without any hidden anti-features."
msgstr "F-Droid 服务器不会直接在网上发布 APK，相反，F-Droid 服务器需要一个可构建的源代码来构建 APK。这样，服务器就能保证生成的 APK 准确地展现了源代码，没有任何隐藏的负面特征。"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "Because F-Droid builds every app from its source code (via the Android SDK with ant, gradle or maven, sometimes with help from the Android NDK, standard GNU/Linux programs and a little pre-processing in the BASH shell), probably if you can see a file called _AndroidManifest.xml_ or _build.gradle_ in your sources then there are many possibilities that F-Droid will be able to build it."
msgstr "因为 F-Droid 从其源代码构建每个应用（通过带有 ant、gradle 或 maven 的 Android SDK，有时在 Android NDK、标准 GNU/Linux 程序和 BASH shell 中的一些预处理的帮助下），可能如果你可以在源代码中看到一个名为 _AndroidManifest.xml_ 或 _build.gradle_ 的文件，那么 F-Droid 可以构建它的可能性有很多。"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "Note that most projects call upon pre-built libraries. The source code for these is found elsewhere. For ant, these will be found in the `libs/` folder and external ones are mentioned in the _project.properties_ files; for gradle, these will be mentioned in _build.gradle_ and are usually pulled from <http://mvnrepository.com>; for maven there will be `pom.xml` files which describe the dependencies.  If native code pre-built libraries are used, these will often be found in `res/raw/` or `assets/`: there should be something said about these in the `README`. The example above has one jar file dependency with a text reference and doesn't use any external libraries, so no extra references are needed."
msgstr "请注意，大多数项目都调用预构建的库。这些的源代码可以在其他地方找到。对于 ant，这些将在 `libs/` 文件夹中找到，外部的在 _project.properties_ 文件中提到;对于 gradle，这些将在_build.gradle_中提及，并且通常从<http://mvnrepository.com>中提取;对于 maven，将有 `pom.xml` 文件来描述依赖关系。 如果使用本机代码预构建的库，这些库通常可以在`res/raw/`或`assets/`中找到：在`README`中应该有一些关于这些的内容。上面的示例具有一个带有文本引用的 jar 文件依赖项，并且不使用任何外部库，因此不需要额外的引用。"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "- *E.g.* Overall: <https://gitlab.com/fdroid/fdroidclient/blob/master/LICENSE> (overall of a source code under a *GPLv3+* license); - *E.g.* Source code header: <https://gitlab.com/fdroid/fdroidclient/blob/master/app/src/main/java/org/fdroid/fdroid/AppDetails.java> (header of a file under a *GPLv3+* license); - *E.g.* Libraries: <https://gitlab.com/fdroid/fdroidclient/tree/master/libs> (see the `LICENSE` file with the *Apache License, Version 2.0* license for that library); - *E.g.* Artwork: <https://f-droid.org/about> (see the *CC BY-SA 3.0* license for artworks)"
msgstr "- *例如* 总体：<https://gitlab.com/fdroid/fdroidclient/blob/master/LICENSE>（*GPLv3+*许可证下的源代码）;- *例如* 源代码头： <https://gitlab.com/fdroid/fdroidclient/blob/master/app/src/main/java/org/fdroid/fdroid/AppDetails.java> （*GPLv3+* 许可证下的文件头）;- *例如*库：<https://gitlab.com/fdroid/fdroidclient/tree/master/libs>（请参阅`LICENSE`文件，其中包含*Apache许可证，该库的2.0*许可证）;- *例如*艺术品：<https://f-droid.org/about>（参见*CC BY-SA 3.0*艺术品许可证）"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "All apps in the F-Droid repository *must* be FOSS (Free and Open Source software). If the software doesn't clearly state a license that is listed as a Free Software License in the [GNU license list](http://www.gnu.org/licenses/license-list.html#SoftwareLicenses)  then it probably isn't."
msgstr "F-Droid 资源库中的所有应用*必须*是FOSS（自由和开放源代码软件）。如果该软件没有明确说明在 [GNU许可证列表](http://www.gnu.org/licenses/license-list.html#SoftwareLicenses) 中被列为自由软件许可证，那么它可能不是。"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "If there aren't any `README` or `LICENSE` in the source code of the app it's very difficult for the F-Droid community verify that the entire source code, libraries and artwork each are released under a suitable Free and Open Source license. So, it's a good pratice to verify that the app has headers in every file of the source code, a text file in the library folder and a statement in the source code or on the official website of the app that clearly explain the license about all the stuff that can be find related the app."
msgstr "如果应用的源代码中没有任何 `README` 或 `LICENSE`，F-Droid 社区很难验证整个源代码、库和艺术品是否已发布在合适的自由和开源许可下。因此，验证应用在源代码的每个文件中都有标题，库文件夹中的文本文件以及源代码或应用的官方网站上的声明，清楚地解释所有许可证是一个很好的做法。可以找到与应用相关的东西。"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
#, no-wrap
msgid ""
"*Note:* There is a little precisation to do about the use of the *GNU\n"
"General Public License **v2***. The Android support library and most\n"
"other Android libraries are licensed under the *Apache Licence*. Due to\n"
"technical legal reasons, these can't be combined with the *GNU General\n"
"Public License **v2***. In case of an app released under the\n"
"*GPL**v2***, it is legally accepted only if the source code headers of\n"
"the app say «GPLv2 **or later**», then we can choose the overall licence\n"
"to be *GPL**v3*** (this because on the contrary the *GPL**v3*** is full\n"
"legally compatible with the Android support library and the others\n"
"libraries).\n"
msgstr ""
"*Note:* There is a little precisation to do about the use of the *GNU\n"
"General Public License **v2***. The Android support library and most\n"
"other Android libraries are licensed under the *Apache Licence*. Due to\n"
"technical legal reasons, these can't be combined with the *GNU General\n"
"Public License **v2***. In case of an app released under the\n"
"*GPL**v2***, it is legally accepted only if the source code headers of\n"
"the app say «GPLv2 **or later**», then we can choose the overall licence\n"
"to be *GPL**v3*** (this because on the contrary the *GPL**v3*** is full\n"
"legally compatible with the Android support library and the others\n"
"libraries).\n"

#. type: Title ###
#: _docs/Repository_Style_Guide.md
#, no-wrap
msgid "Summaries"
msgstr "概要"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "The summary should be the shortest possible thing that describes what the app does or enables the user to do, e.g. instead of \"E-mail client\" use \"Receive and send e-mails\"."
msgstr "概要应该尽可能简短地描述应用的用途，例如，用\"电子邮件客户端\"代替\"接收和发送电子邮件\"。"

#. type: Title ###
#: _docs/Repository_Style_Guide.md
#, no-wrap
msgid "Descriptions"
msgstr "描述"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "Descriptions should be written in an objective, neutral style, with at least the first paragraph devoted to describing what the application is and what features it has. This can be followed with concise help for specific features/problems, and links to external resources for more information. Additional information such as links to related/compatible/required (but not alternative) applications should also be included where appropriate."
msgstr "描述应该以客观、中立的风格来写，至少在第一段专门描述应用是什么以及它有哪些功能。之后可以为具体的功能/问题提供简明的帮助，并链接到外部资源以获取更多信息。适当时还应包括其他信息，如相关的/兼容的/必需的（但不是替代的）应用的链接。"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "Some other notes:"
msgstr "其他一些注意事项："

#. type: Bullet: '-   '
#: _docs/Repository_Style_Guide.md
msgid "Phrases like \"a note-taking app for Android\" should never appear.  Obviously it's for Android. Obviously it's an app."
msgstr "像\"适用于 Android 的笔记应用\" 这样的短语永远不应该出现。 显然，这是针对 Android 的。显然，这是一个应用。"

#. type: Bullet: '-   '
#: _docs/Repository_Style_Guide.md
msgid "Similary, don't say \"it's free software\" or \"it's open source\" because obviously it is."
msgstr "同样，不要说“它是自由软件”或“它是开源的”，因为显然它是。"

#. type: Bullet: '-   '
#: _docs/Repository_Style_Guide.md
msgid "There shouldn't be any compatiblity-related things in there (e.g.  \"for Android 2.3+\") because this is handled automatically. Only include compatibility notes when the client app doesn't automatically detect them."
msgstr "这里面不应该有任何与兼容性有关的东西（例如\"for Android 2.3+\"），因为这是自动处理的。只有在客户端应用没有自动检测到时才包括兼容性说明。"

#. type: Bullet: '-   '
#: _docs/Repository_Style_Guide.md
msgid "The summary will always be shown with the description, so avoid repeating it."
msgstr "概要会始终与描述一起显示，因此要避免重复。"

#. type: Bullet: '-   '
#: _docs/Repository_Style_Guide.md
msgid "If there is anything different about the F-Droid build compared to a standard one, it should be described."
msgstr "如果 F-Droid 版本与标准版本相比有任何不同，则应予以说明。"

#. type: Bullet: '-   '
#: _docs/Repository_Style_Guide.md
msgid "There should never be anything written from the developer's point of view, e.g. \"I wrote this cat gallery app because I like cats\"."
msgstr "绝不应该有任何从开发者角度出发的内容，例如：\"我写这个猫咪相册应用是因为我喜欢猫咪\"。"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "Other information worth mentioning are:"
msgstr "其他值得一提的信息包括："

#. type: Bullet: '-   '
#: _docs/Repository_Style_Guide.md
msgid "Does the app require root permissions?"
msgstr "该应用是否需要 root 权限？"

#. type: Bullet: '-   '
#: _docs/Repository_Style_Guide.md
msgid "Can it interact with other apps?"
msgstr "它可以与其他应用交互吗？"

#. type: Bullet: '-   '
#: _docs/Repository_Style_Guide.md
msgid "How easy is it to use?"
msgstr "它的易用性如何？"

#. type: Title ###
#: _docs/Repository_Style_Guide.md
#, no-wrap
msgid "Donations"
msgstr "捐赠"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "Where a project accepts donations, the ideal donation link would be to a specific page that the project maintains for that purpose. If one doesn't exist, it's acceptable to just link to their page that has a donation icon or similar somewhere on it, but this doesn't create a good user experience when, for example, someone selects 'Donate' in the F-Droid client and then has to search a page for the details. Try to encourage the developers to create a dedicate page if possible."
msgstr "如果一个项目接受捐赠，理想的捐赠链接是指向该项目为此目的而维护的一个特定页面。如果不存在这样的链接，可以接受的是链接到有捐赠图标或类似的页面，但这并不能创造良好的用户体验，例如，有人在 F-Droid 客户端选择了“捐赠”，然后不得不搜索一个页面来了解细节。如果可能的话，试着鼓励开发者创建一个专门的页面。"

#. type: Title ###
#: _docs/Repository_Style_Guide.md
#, no-wrap
msgid "AntiFeatures"
msgstr "负面特征"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "In addition some software, even being Free and Open Source software, may do practices which can be considered undesirable and that we consider [_AntiFeatures_](https://monitor.f-droid.org/anti-features)\". Where possible the F-Droid community still include these applications in the repository but flagging and cataloging these antifeatures in order to warn users (on the F-Droid client and on the web repository browser) by any antifeatures present on the app. Even though software can be included in the F-Droid even with antifeatures, it is frequently the case that software with these antifeatures is actually not entirely FOSS (for example advertising and tracking user activity is often enabled via Non-Free binary libraries) compromising in this way the inclusion of the app in the F-Droid repository."
msgstr "此外，一些软件，即使是自由和开源软件，也可能会做一些我们认为不受欢迎的做法，我们认为这具有 [_负面特征_](https://monitor.f-droid.org/anti-features)”。在可能的情况下，F-Droid 社区仍将这些应用包含在存储库中，但会对这些负面特征进行标记和编目，以便通过应用上存在的任何负面特征来警告用户（在 F-Droid 客户端和 Web 存储库浏览器上）。即使软件可以包含在 F-Droid 中，即使具有负面特征，但通常情况下，具有这些负面特征的软件实际上并不完全是 FOSS（例如，广告和跟踪用户活动通常通过非自由二进制库实现）在这样就可以将应用包含在 F-Droid 存储库中。"

#. type: Title ###
#: _docs/Repository_Style_Guide.md
#, no-wrap
msgid "Updating"
msgstr "更新中"

#. type: Bullet: '* '
#: _docs/Repository_Style_Guide.md
msgid "<https://gitlab.com/fdroid/fdroidclient/graphs/master>"
msgstr "<https://gitlab.com/fdroid/fdroidclient/graphs/master>"

#. type: Bullet: '* '
#: _docs/Repository_Style_Guide.md
msgid "<https://gitlab.com/fdroid/fdroidclient/network/master>"
msgstr "<https://gitlab.com/fdroid/fdroidclient/network/master>"

#. type: Bullet: '* '
#: _docs/Repository_Style_Guide.md
msgid "<https://f-droid.org/news-and-reviews>"
msgstr "<https://f-droid.org/news-and-reviews>"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "Getting the app in the repository isn't the end of the story: we have to keep the versions, descriptions and URLs up-to-date."
msgstr "将应用收录入资源库并不是故事的结尾：我们必须保持版本、描述和 URL 的更新。"

#. type: Plain text
#: _docs/Repository_Style_Guide.md
msgid "The most important is to know when new versions are published. We have three automatic methods and one manual: from tags; checking the _AndroidManifest.xml_ at the most recent revision in the repository; and checking Google Play. If these won't do, we must look at the version of the package published by the upstream developers, either by loading the Google Play web page or downloading an APK and checking its version.  Repository tags are the natural way of labelling new versions (look for them under \"releases\" on an example in [github.com](https://github.com/dschuermann/document-viewer/releases) or under the \"tags\" directory in the case of SVN repos). If you can't find tags it would be a helpful to make an issue about it on the issue tracker. In the example, we point to a changelog page as a backup check; other possiblities are a Google Code download page or a Google Play link."
msgstr "最重要的是要知道何时发布新版本。我们有三种自动方式和一种手动方式：来自 tag；检查存储库中最新版本的 _AndroidManifest.xml_；并查看 Google Play。如果这些都不行，我们必须查看上游开发人员发布的软件包版本，方法是加载 Google Play 网页或下载 APK 并检查其版本。存储库标签是标记新版本的自然方式（在 [github.com](https://github.com/dschuermann/document-viewer/releases) 或“tag”下的示例中的“releases”下查找它们目录（在 SVN 存储库的情况下）。如果你找不到 tag，在问题跟踪器上提出问题会很有帮助。在示例中，我们指向一个变更日志页面作为备份检查；其他可能性是 Google 代码下载页面或 Google Play 链接。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "F-Droid supports [reproducible builds](https://reproducible-builds.org) of apps, so that anyone can run the build process again and reproduce the same APK as the original release.  This means that F-Droid can verify that an app is 100% free software while still using the original developer's APK signatures.  F-Droid verifies reproducible builds using APK [signature copying](#reproducible-signatures)."
msgstr "F-Droid 支持应用的[可重复构建](https://reproducible-builds.org)，因此任何人都可以再次运行构建过程，并再现与原始版本相同的 APK。 这意味着 F-Droid 可以验证一个应用是 100% 的自由软件，同时仍然使用原始开发者的 APK 签名。 F-Droid 使用 APK [签名复制](#reproducible-signatures)来验证可重复构建。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "This concept is occasionally called \"deterministic builds\".  That is a much stricter standard: that means that the whole process runs with the same ordering each time.  The most important thing is that anyone can run the process and end up with the exact same result."
msgstr "这个概念偶尔也被称为\"确定性构建\"。 这是一个更严格的标准：这意味着整个过程每次都以相同的顺序运行。 最重要的是，任何人都可以运行这个过程，最后得到完全相同的结果。"

#. type: Title ###
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "How it is implemented as of now"
msgstr "截至目前，它是如何实施的"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Publishing signed binaries (APKs) from elsewhere (e.g. the upstream developer)  is now possible after verifying that they match ones built using an fdroiddata recipe.  Publishing only takes place if there is a proper match.  This procedure is implemented as part of `fdroid publish`.  The reproducibility check at the publishing step follows this logic:"
msgstr "在验证它们与使用 fdroiddata 配方构建的二进制文件匹配后，现在可以从其他地方(例如上游开发人员)发布已签名的二进制文件(APK)。只有在适当匹配的情况下才会发布。这一流程作为 `fdroid publish`的一部分实现的。发布阶段的可重现性检查遵循以下逻辑："

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "![Flow-chart for reproducibility check]({% asset docs/reproducible-builds/publish.png %})"
msgstr "![可重复性检查流程图]({% asset docs/reproducible-builds/publish.png %})"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Publish both (upstream) developer-signed and F-Droid-signed APKs"
msgstr "同时发布（上游）开发者签名和 F-Droid 签名的 APK"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "This approach allows publishing both APKs signed by the (upstream) developer and APKs signed by F-Droid.  This enables us to ship updates for users who installed apps from other sources than F-Droid (e.g. Play Store), while also shipping updates for apps which were built and signed by F-Droid."
msgstr "这种方法允许同时发布（上游）开发者签名和 F-Droid 签名的 APK。这使我们能够为从 F-Droid 以外的其他来源（例如 Play Store）安装应用的用户发送更新，同时也为由 F-Droid 构建和签名的应用发送更新。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "This requires extracting and adding (upstream) developer signatures to fdroiddata.  These signatures are then later copied to the unsigned APK built from the fdroiddata recipe.  We provide a command for easily extracting signatures from APKs:"
msgstr "这需要提取并向 fdroiddata 添加(上游)开发人员签名。然后将这些签名复制到从 fdroiddata 配方构建的 unsigned APK。我们提供了一个命令，可以轻松地从 APK 中提取签名："

#. type: Fenced code block (console)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"$ cd /path/to/fdroiddata\n"
"$ fdroid signatures F-Droid.apk\n"
msgstr ""
"$ cd /path/to/fdroiddata\n"
"$ fdroid signatures F-Droid.apk\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Instead of local files, you can also supply HTTPS URLs to `fdroid signatures`."
msgstr "除了本地文件，你还可以向 `fdroid 签名` 提供 HTTPS 网址。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "The signature files are extracted to the app's metadata directory, ready to be used with `fdroid publish`.  A signature consists of 2-6 files: a v1 signature (manifest, signature file, and signature block file) and/or a v2/v3 signature (APK Signing Block and offset); if the APK was v1-signed with e.g.  `signflinger` instead of `apksigner` there will also be a `differences.json`.  The result of extracting one will resemble these file listings:"
msgstr "签名文件会被提取到应用的元数据目录中，准备用 `fdroid publish` 使用。一个签名由 2-6 个文件组成：一个 v1 签名（清单、签名文件和签名块文件）和/或一个 v2/v3 签名（APK 签名块和偏移量）；如果使用 `signflinger` 而不是 `apksigner`对 APK 进行 v1 签名，会有一个 `differences.json`文件。提取这样一个文件的结果将类似于这些文件列表："

#. type: Fenced code block (console)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"$ ls metadata/org.fdroid.fdroid/signatures/1000012/  # v1 signature only\n"
"CIARANG.RSA  CIARANG.SF  MANIFEST.MF\n"
"$ ls metadata/your.app/signatures/42/                # v1 + v2/v3 signature\n"
"APKSigningBlock  APKSigningBlockOffset  MANIFEST.MF  YOURKEY.RSA  YOURKEY.SF\n"
msgstr ""
"$ ls metadata/org.fdroid.fdroid/signatures/1000012/  # v1 signature only\n"
"CIARANG.RSA  CIARANG.SF  MANIFEST.MF\n"
"$ ls metadata/your.app/signatures/42/                # v1 + v2/v3 signature\n"
"APKSigningBlock  APKSigningBlockOffset  MANIFEST.MF  YOURKEY.RSA  YOURKEY.SF\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "If you don't want to install `fdroidserver` (or have an older version that doesn't support extracting v2/v3 signatures yet) you can also use [`apksigcopier`](https://github.com/obfusk/apksigcopier) (available in e.g.  Debian, Ubuntu, Arch Linux, NixOS) instead of `fdroid signatures`:"
msgstr "如果你不想安装 `fdroidserver` （或者有一个不支持提取 v2/v3 签名的旧版本），你也可以使用 [`apksigcopier`](https://github.com/obfusk/apksigcopier)（例如在 Debian、 Ubuntu、Arch Linux、NixOS 中可用）而不是 `fdroid signatures`："

#. type: Fenced code block (console)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"$ cd /path/to/fdroiddata\n"
"$ APPID=your.app VERSIONCODE=42\n"
"$ mkdir metadata/$APPID/signatures/$VERSIONCODE\n"
"$ apksigcopier extract --v1-only=auto Your.apk metadata/$APPID/signatures/$VERSIONCODE\n"
msgstr ""
"$ cd /path/to/fdroiddata\n"
"$ APPID=your.app VERSIONCODE=42\n"
"$ mkdir metadata/$APPID/signatures/$VERSIONCODE\n"
"$ apksigcopier extract --v1-only=auto Your.apk metadata/$APPID/signatures/$VERSIONCODE\n"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Exclusively publishing (upstream) developer-signed APKs"
msgstr "只发布（上游）开发者签名的 APK"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "For this approach, everything in the metadata should be the same as normal, with the addition of the `Binaries:` directive to specify where to get the binaries (APKs) from.  In this case, F-Droid will never attempt to publish APKs signed by F-Droid.  If `fdroid publish` can verify that the downloaded APK matches the one built from the fdroiddata recipe, the downloaded APK will be published.  Otherwise F-Droid will skip publishing this version of the app."
msgstr "对这种方法，元数据中的一切都应该和正常的一样，加上 `Binaries:` 指令来指定从哪里获得二进制文件（APKs）。在这种情况下，F-Droid 不会试图发布由 F-Droid 签名的 APK。如果 `fdroid publish` 能够验证可下载的 APK 匹配从 fdroiddata 配方构建的 APK，那么可下载的 APK 将被发布。否则 F-Droid 将跳过发布该应用的这个版本。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Here is an example of a `Binaries:` directive:"
msgstr "以下是 `Binaries` 指令的示例："

#. type: Fenced code block (yaml)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Binaries: https://example.com/path/to/myapp-%v.apk\n"
msgstr "二进制文件：https://example.com/path/to/myapp-%v.apk\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "See also: [Build Metadata Reference - Binaries](../Build_Metadata_Reference/#Binaries)"
msgstr "另见：[Build Metadata Reference - Binaries](../Build_Metadata_Reference/#Binaries)"

#. type: Title ###
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Reproducible signatures"
msgstr "可重复的签名"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "F-Droid verifies reproducible builds using the [APK signature](https://source.android.com/docs/security/features/apksigning)  (a form of [embedded signature](https://reproducible-builds.org/docs/embedded-signatures/)), which requires [copying](https://github.com/obfusk/apksigcopier) the signature from a signed APK to an unsigned one and then checking if the latter verifies.  The old v1 (JAR) signatures only cover the *contents* of the APK (e.g. ZIP metadata and ordering are irrelevant), but v2/v3 signatures cover *all other bytes in the APK*.  Thus, the APKs must be completely identical *before* and *after* signing (apart from the signature) in order to verify correctly."
msgstr "F-Droid 使用 [APK 签名](https://source.android.com/docs/security/features/apksigning)（[嵌入式签名](https://reproducible-builds.org/docs/embedded-signatures/)的一种形式）来验证可重复构建，这需要将签名从一个已签名的 APK [复制](https://github.com/obfusk/apksigcopier)到一个未签名的 APK，然后检查后者是否验证。 旧的 v1 (JAR) 签名只包括 APK 的 *内容*（例如，与 ZIP 元数据和排序无关），但 V2/V3 签名包括 *APK 中所有其他字节*。 因此，APK 必须在签名 *之前* 和 *之后* 完全相同（除了签名之外）才能正确验证。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Copying the signature uses the same algorithm that `apksigner` uses when signing an APK.  It is therefore important that (upstream) developers do the same when signing APKs, ideally by using `apksigner`."
msgstr "复制签名使用的算法与 `apksigner` 签署 APK 时使用的算法相同。  因此，重要的是，（上游）开发人员在签署 APK 时也要这样做，最好是使用 `apksigner`。"

#. type: Title ###
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Verification builds"
msgstr "验证构建"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Many people or organizations will be interested in reproducing builds to make sure that the f-droid.org builds match the original source and nothing has been modified.  In that case, the resulting APKs are not published for installation.  The [Verification Server](../Verification_Server) automates this process."
msgstr "许多人或组织对可重建构建感兴趣，以确保 f-droid.org 构建与原始源匹配，并且没有更改任何内容。在这种情况下，不会发布生成的 APK 以供安装。 [验证服务器](../Verification_Server) 可以自动完成这个过程。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Quite a few builds already verify with no extra effort since Java code is often compiled into the same bytecode by a wide range of Java versions.  The Android SDK's `build-tools` will create differences in the resulting XML, PNG, etc.  files, but this is usually not a problem since the `build.gradle` includes the exact version of `build-tools` to use."
msgstr "由于 Java 代码经常被各种不同的 Java 版本编译成相同的字节码，因此不少构建工作已经无需额外努力即可验证。 Android SDK 的 `build-tools` 会在生成的 XML、PNG 等文件中产生差异，但这通常不是问题，因为 `build.gradle` 包括要使用的确切版本的 `build-tools`。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Anything built using the NDK will be much more sensitive.  For example, even for builds that use the exact same version of the NDK (e.g. `r13b`) but on different platforms (e.g. macOS versus Ubuntu), the resulting binaries will have differences."
msgstr "任何用 NDK 构建的东西都会更敏感。 例如，即使是使用完全相同的NDK版本（例如 `r13b`），但在不同的平台上（例如 macOS 与 Ubuntu），所生成的二进制文件也会有差异。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Additionally, we'll have to look out for anything that includes timestamps or build paths, is sensitive to sort order, etc."
msgstr "此外，我们还必须注意任何对排序敏感的东西，包括时间戳或构建路径等。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Google is also working towards reproducible builds of Android apps, so using recent versions of the Android SDK helps.  One specific case is starting with Gradle Android Plugin v2.2.2, timestamps in the APK file's ZIP metadata are automatically zeroed out."
msgstr "Google 也在努力实现 Android 应用的可重复构建，所以使用最新版本的 Android SDK 是有帮助的。 一个具体情况是，从 Gradle Android 插件 v2.2.2 开始，APK 文件的 ZIP 元数据中的时间戳被自动置零了。"

#. type: Title ###
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Debugging Reproducible Builds"
msgstr "调试可重复构建"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Recommended tools"
msgstr "推荐的工具"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "We recommend using [`diffoscope`](https://diffoscope.org/) for easily finding the difference between the reference APK provided by the app developer and the APK that `fdroidserver` produced."
msgstr "我们推荐使用 [`diffoscope`](https://diffoscope.org/)轻松找出应用开发者提供的参考 APK 和`fdroidserver` 产生的 APK 之间的差异。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "You can find the APK that `fdroidserver` produced either under e.g.  `fdroiddata/build/com.example.app/app/build/outputs/apk/prod/release/example-1.0.0-prod-release-unsigned.apk` (when running locally) or in the pipeline artifacts (when using GitLab CI).  Adjust the path accordingly (e.g. for flavours other than `prod`)."
msgstr "`fdroidserve` 产生的 APK 所在位置要么形如 `fdroiddata/build/com.example.app/app/build/outputs/apk/prod/release/example-1.0.0-prod-release-unsigned.apk` (本地运行时），要么在 pipeline artifacts 中（使用 GitLab CI 时）。  请相应调整路径（比如对非 `prod` 的 flavours）。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Prioritising & fixing differences"
msgstr "划分优先级 & 修复差异"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "[HOWTO: diff & fix APKs for Reproducible Builds](https://gitlab.com/fdroid/wiki/-/wikis/HOWTO:-diff-&-fix-APKs-for-Reproducible-Builds)  on the F-Droid wiki has detailed information on the various kinds of differences commonly encountered, which differences should usually be prioritised when debugging, and how to fix common issues."
msgstr "F-Droid wiki 上的 [HOWTO: diff & fix APKs for Reproducible Builds](https://gitlab.com/fdroid/wiki/-/wikis/HOWTO:-diff-&-fix-APKs-for-Reproducible-Builds) 一文包含了经常遇到的各种差异的详细信息，调试时通常应把哪些差异置于高优先级以及如何修复常见问题。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "It also shows how to use various specialised tools that may provide better results when `diffoscope` is not sufficient."
msgstr "它还包含了当 `diffoscope` 不够用时，如何使用多种可以提供更好结果的专门工具的信息。"

#. type: Title ###
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Reproducible APK tools"
msgstr "可重复 APK 工具"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "The scripts from [reproducible-apk-tools](https://github.com/obfusk/reproducible-apk-tools)  (available in fdroiddata as a `srclib`) may help to make builds reproducible, e.g. by fixing newlines (CRLF vs LF) or making ZIP ordering deterministic, if removing the cause of the differences is not a realistic option.  Depending on specifics, these scripts need to be used by upstream developers before signing their APKs, by the fdroiddata recipe, or both."
msgstr "如果消除造成差异的原因难以实现，来自 [reproducible-apk-tools](https://github.com/obfusk/reproducible-apk-tools) 的脚本（在 fdroiddata 中作为 `srclib` 可用）可能有助于使构建可重复，例如，通过固定换行 (CRLF vs LF) 或使 ZIP 顺序确定。根据具体情况，上游开发者需要在签署 APK 之前使用这些脚本，或者根据 fdroiddata 配方使用，或者两者同时使用。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Originally created to inject non-determinism in build processes, [disorderfs](https://salsa.debian.org/reproducible-builds/disorderfs) can also do the opposite: make reading from the filesystem deterministic.  In some cases this can make e.g. `resources.arsc` reproducible.  Here is an example from an existing recipe:"
msgstr "最初创建 [disorderfs](https://salsa.debian.org/reproducible-builds/disorderfs) 的目的是在构建过程中插入非确定性，但也可以出于相反目的使用它：使得从文件系统的读取具有确定性。在某些情况下，这可以使 `resources.arsc` 可重复。下面是一个来自现有配方的例子："

#. type: Fenced code block (console)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"$ mv my.app my.app_underlying\n"
"$ disorderfs --sort-dirents=yes --reverse-dirents=no my.app_underlying my.app\n"
msgstr ""
"$ mv my.app my.app_underlying\n"
"$ disorderfs --sort-dirents=yes --reverse-dirents=no my.app_underlying my.app\n"

#. type: Title ###
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Potential sources of unreproducible builds"
msgstr "不可重复构建的可能原因"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "There are various ways builds can be unreproducible.  Some are relatively easy to avoid, others are hard to fix.  We've tried to list some common sources below."
msgstr "构建不可重复的方式有很多种。有些问题相对容易避免，有些很难解决。我们试图在下面列出一些常见的原因。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "See also [this GitLab issue](https://gitlab.com/fdroid/fdroiddata/-/issues/2816)."
msgstr "另见 [这个 gitlab issue](https://gitlab.com/fdroid/fdroiddata/-/issues/2816)。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Bug: Android Studio builds have non-deterministic ZIP ordering"
msgstr "Bug: Android Studio 构建有非确定性 ZIP 顺序"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "[Non-deterministic order of ZIP entries in APK makes builds not reproducible](https://issuetracker.google.com/issues/265653160)  (may require a Google account to view)."
msgstr "[APK 文件中非决定性的 ZIP 项顺序造成构建不可重复](https://issuetracker.google.com/issues/265653160)（可能需要 Google 账户方可查看）。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "NB: this should be fixed in Android Gradle plugin (`com.android.tools.build:gradle` / `com.android.application`) `7.1.X` and later."
msgstr "注：该问题在 `7.1.X`及更新版本的 Android Gradle 插件 (`com.android.tools.build:gradle` / `com.android.application`) 中应该已被修复。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "When building APKs with Android Studio, the ordering of the ZIP entries in the APK can be different from that of APKs built by invoking `gradle` directly, affecting reproducibility; the ordering can be completely non-deterministic, even differing between different builds of the same source code."
msgstr "在用 Android Studio 构建 APK 文件时，APK 中 ZIP 项目的顺序可能不同于直接调用 `gradle` 进行构建的 APK，这会影响可重现性；顺序可能是完全非确定性的，甚至在相同源码的不同构建之间也不一样。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "A workaround for older versions is to invoke `gradle` directly (as during F-Droid or CI builds), bypassing Android Studio:"
msgstr "旧版本的一个变通办法是直接调用 `gradle` （像在 F-Droid 或 CI 构建期间一样），来绕过 Android Studio："

#. type: Fenced code block (console)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "$ ./gradlew assembleRelease\n"
msgstr "$ ./gradlew assembleRelease\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "NB: depending on your signing configuration, this may require signing the APK with `apksigner` afterwards, since signing is not performed by Android Studio in this case."
msgstr "请注意：取决于你的签名配置，可能需要之后用 `apksigner` 对 APK 进行签名，因为在这种情况下 APK 签名不是由 Android Studio 执行的。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "`apksigner` from build-tools >= 35.0.0-rc1 outputs unverifiable APKs"
msgstr "来自 35.0.0-rc1 及以上版本 build-tools 的 `apksigner` 产生无法验证的 APK 文件"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Using `apksigner` from build-tools version 34 produces APKs verifiable by `apksigcopier`, but newer versions will fail.  We are tracking this issue in [#3299](https://gitlab.com/fdroid/fdroiddata/-/issues/3299) and there's more info in [apksigcopier issues 105](https://github.com/obfusk/apksigcopier/issues/105). Github Actions CI Ubuntu images starting July 2024 have version 35 included, so one needs to manually select the `apksigner` version from 34 instead of the default templated \"latest version\"."
msgstr "使用来自 34 版本 build-tools 的 `apksigner`产生可以被 `apksigcopier` 验证的 APK 文件，但较新版本会失败。   我们正在 [#3299](https://gitlab.com/fdroid/fdroiddata/-/issues/3299) 中跟踪这个问题。更多信息可见 [apksigcopier issues 105](https://github.com/obfusk/apksigcopier/issues/105)。2024 年 7 月起的 Github Actions CI Ubuntu 映像包含了 35 版本，所以如果要构建应用，你需要手动选择 34 版本的 `apksigner`，而非使用默认模板的“最新版本”。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Bug: baseline.profm not deterministic"
msgstr "Bug: baseline.profm not deterministic"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "[Non-stable `assets/dexopt/baseline.profm`](https://issuetracker.google.com/issues/231837768)  (may require a Google account to view)."
msgstr "[Non-stable `assets/dexopt/baseline.profm`](https://issuetracker.google.com/issues/231837768)  (可能需要 Google 账号才能查看)。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "See also [this write-up of workarounds](https://gist.github.com/obfusk/61046e09cee352ae6dd109911534b12e)."
msgstr "另见 [这篇变通方法的文章](https://gist.github.com/obfusk/61046e09cee352ae6dd109911534b12e)。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Bug: coreLibraryDesugaring not deterministic"
msgstr "Bug: coreLibraryDesugaring not deterministic"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "NB: this should be fixed in R8 (`com.android.tools:r8`) `3.0.69` and later."
msgstr "注：该问题在 `3.0.69`及更新版本的 R8 (`com.android.tools:r8`)中应该已被修复。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "In some cases builds are not reproducible due to a [bug in `coreLibraryDesugaring`](https://issuetracker.google.com/issues/195968520)  (may require a Google account to view); this [affected NewPipe](https://github.com/TeamNewPipe/NewPipe/issues/6486)."
msgstr "在某些情况下，由于 [ `coreLibraryDesugaring` 中的错误](https://issuetracker.google.com/issues/195968520)，构建不可重复（可能需要 Google 帐号才能查看）；这[曾影响 NewPipe](https://github.com/TeamNewPipe/NewPipe/issues/6486)。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Bug: line ending differences between Windows and Linux builds"
msgstr "Bug：Windows 和 Linux 版本间的行结束符差异"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "[Newline differences between building on Windows vs Linux make builds not reproducible](https://issuetracker.google.com/issues/266109851)  (may require a Google account to view)."
msgstr "[Windows 和 Linux 系统上进行构建的换行符差异造成构建不可重复](https://issuetracker.google.com/issues/266109851)（可能需要 Google 账户才能查看）。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "A workaround is to run [`fix-newlines.py`](https://github.com/obfusk/reproducible-apk-tools#fix-newlinespy)  on the *unsigned* APK with the \"wrong\" line endings to change them from LF to CRLF (or vice versa w/ `--from-crlf`) and `zipalign` it again afterwards."
msgstr "一个变通方法是在行结束符“错误”的*未签名* APK 文件上运行 [`fix-newlines.py`](https://github.com/obfusk/reproducible-apk-tools#fix-newlinespy) 将他们从 LF 更改为 CRLF （或者使用 `--from-crlf`反向操作）并在之后再次对它进行 `zipalign`。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Concurrency: reproducibility can depend on the number of CPUs/cores"
msgstr "并发：可重现性可以取决于CPU/核心的数目"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "This can affect `.dex` files (though that seems to be rare) or native code (e.g.  Rust)."
msgstr "这可能影响 `.dex` 文件（虽然这似乎比较少见）或本机代码（如  Rust）。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Using only 1 CPU/core as a workaround:"
msgstr "只使用 1 个 CPU/核心作为变通办法："

#. type: Fenced code block (console)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"export CPUS_MAX=1\n"
"export CPUS=$(getconf _NPROCESSORS_ONLN)\n"
"for (( c=$CPUS_MAX; c<$CPUS; c++ )) ; do echo 0 > /sys/devices/system/cpu/cpu$c/online; done\n"
msgstr ""
"export CPUS_MAX=1\n"
"export CPUS=$(getconf _NPROCESSORS_ONLN)\n"
"for (( c=$CPUS_MAX; c<$CPUS; c++ )) ; do echo 0 > /sys/devices/system/cpu/cpu$c/online; done\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "NB: this workaround affects the entire machine, so using it in a non-persistent virtual machine or container is recommended."
msgstr "请注意：这种变通方法影响整台机器，因此推荐在非持久性的虚拟机或容器中使用它。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "For Rust code, you can set [`codegen-units = 1`](https://doc.rust-lang.org/rustc/codegen-options/index.html#codegen-units)."
msgstr "对于 Rust 代码，你可以设置 [`codegen-units = 1`](https://doc.rust-lang.org/rustc/codegen-options/index.html#codegen-units)。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "See also [this GitLab issue](https://gitlab.com/fdroid/rfp/-/issues/1519#note_1226216164)."
msgstr "另见 [这个 gitlab issue](https://gitlab.com/fdroid/rfp/-/issues/1519#note_1226216164)。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Embedded build paths"
msgstr "嵌入的构建路径"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Embedded [build paths](https://reproducible-builds.org/docs/build-path/) are a source of reproducibility issues affecting apps built with e.g. Flutter, python-for-android, or using native code (e.g. Rust, C/C++, any kind of `libfoo.so`).  Apps completely written in Java and/or Kotlin tend to be unaffected."
msgstr "嵌入的[构建路径](https://reproducible-builds.org/docs/build-path/)是可重复性问题的一个来源，影响使用 Flutter、python-for-android 或原生代码（如 Rust、C/C++、各种 `libfoo.so`）构建的应用。完全用 Java 和/或 Kotlin 编写的应用一般不会受影响。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Often, the easiest solution is to always use the same working directory when building; e.g. `/builds/fdroid/fdroiddata/build/your.app.id` (F-Droid CI), `/home/vagrant/build/your.app.id` (F-Droid build server), `/tmp/build` or create one to mirror the upstream used folders, e.g. for macOS `/Users/runner`."
msgstr "通常来说，最简单的解决方案是在构建时始终使用相同的工作目录；如，`/builds/fdroid/fdroiddata/build/your.app.id` (F-Droid CI), `/home/vagrant/build/your.app.id` (F-Droid build server)、 `/tmp/build`或创建一个来镜像上游所用的文件夹，如对于 macOS 系统是 `/Users/runner`。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "NB: using a subdirectory of the world-writeable `/tmp` can have security implications (on multi-user systems)."
msgstr "注：使用全局可写的 `tmp`的子目录可能会有安全影响（在多用户系统上）。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"If the SDK path ends up embedded in Flutter one can move the SDK to said path\n"
"in the recipe and configure it with: `flutter config --android-sdk <path>` as\n"
"setting `ANDROID_SDK_ROOT` might not be enough.\n"
msgstr ""
"如果 SDK 路径最后嵌入在 Flutter 中，可以将 SDK 移至配方\n"
"中的路径并用 `flutter config --android-sdk <path>`进行配置，\n"
"因为光设置 `ANDROID_SDK_ROOT`可能不够。\n"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Embedded timestamps"
msgstr "内嵌的时间戳"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Embedded [timestamps](https://reproducible-builds.org/docs/timestamps/) are the most common source of reproducibility issues and are best avoided."
msgstr "内嵌的[时间戳](https://reproducible-builds.org/docs/timestamps/)是可重复性问题最常见的来源，最好避免。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Native library stripping"
msgstr "本地库的剥离"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "It seems that the stripping of native libraries, e.g. `libfoo.so`, can cause intermittent reproducibility issues.  It is important to use the exact NDK version when rebuilding, e.g. `r21e`.  Disabling stripping can sometimes help.  Gradle seems to strip shared libraries by default, even the app is receiving the shared libraries via an AAR library.  Here is how to disable it in Gradle:"
msgstr "似乎剥离原生库，例如 `libfoo.so`，可能会导致间歇性重现性问题。重建时使用确切的 NDK 版本很重要，例如 `r21e`。禁用剥离有时会有所帮助。 Gradle 似乎默认剥离共享库，甚至应用也通过 AAR 库接收共享库。以下是在 Gradle 中禁用它的方法："

#. type: Fenced code block (gradle)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"android {\n"
"    packagingOptions {\n"
"        doNotStrip '**/*.so'\n"
"    }\n"
"}\n"
msgstr ""
"android {\n"
"    packagingOptions {\n"
"        doNotStrip '**/*.so'\n"
"    }\n"
"}\n"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "NDK _build-id_"
msgstr "NDK _build-id_"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "On different build machines, different NDK paths and different paths to the project (and thus to its `jni` directory) are used.  This leads to different paths to the source files in debug symbols, causing the linker to generate a different _build-id_, which is preserved after stripping."
msgstr "在不同的构建机器上，使用不同的 NDK 路径和不同的项目路径（及其 `jni` 目录）。  这导致调试符号中源文件的路径不同，造成该链接器生成不同的_build-id_，剥离后保留。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "One possible solution is passing `--build-id=none` to the linker which will disable _build-id_ generation completely."
msgstr "一个可能的解决方案是传递 `--build-id=none` 到链接器，这会彻底禁止生成 _build-id_ 。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "NDK hash style"
msgstr "NDK 哈希样式"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "LLVM passes different defaults to linkers on different platforms. After [this commit](https://github.com/llvm/llvm-project/commit/95dcaef00379e893dabc61cf598fe51c9d03414e#diff-061e3e32cfa3dd06717856cc16465106a3b72520eb9b0c2954513f194bd1696f)  was merged into the NDK, `--hash-style=gnu` will be used on Debian by default. To change the hash style, `--hash-style=gnu` can be passed to the linker."
msgstr "LLVM 在不同平台上传递给链接器的默认值也是不同的。在[此提交](https://github.com/llvm/llvm-project/commit/95dcaef00379e893dabc61cf598fe51c9d03414e#diff-061e3e32cfa3dd06717856cc16465106a3b72520eb9b0c2954513f194bd1696f)  被合并入 NDK 后， `--hash-style=gnu` 默认用于 Debian。要更改哈希样式，可以传递 `--hash-style=gnu`到链接器。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "_platform_ Revisions"
msgstr "_platform_ 修订版"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "In 2014, the Android SDK tools [were changed](https://issuetracker.google.com/issues/37132313) to [stick two](https://android.googlesource.com/platform/frameworks/base/+/ad2d07d%5E!/)  [data elements](https://android.googlesource.com/platform/frameworks/base/+/5283fab%5E!/)  in `AndroidManifest.xml` as part of the build process: `platformBuildVersionName` and `platformBuildVersionCode`.  `platformBuildVersionName` includes the \"revision\" of the _platform_ package built against (e.g. `android-23`), however different \"revisions\" of the same _platform_ package cannot be installed in parallel.  Plus the SDK tools do not support specifying the required revision as part of the build process.  This often results in an otherwise reproducible build where the only difference is the `platformBuildVersionName` attribute."
msgstr "Android SDK 工具在2014年[改为](https://issuetracker.google.com/issues/37132313)在构建过程中在 `AndroidManifest.xml` 中 [添加两个](https://android.googlesource.com/platform/frameworks/base/+/ad2d07d%5E/)[数据元素](https://android.googlesource.com/platform/frameworks/base/+/5283fab%5E/)：`platformBuildVersionName` 和 `platformBuildVersionCode`。`platformBuildVersionName` 包括 _platforms_ 包的\"修订版\"，根据该包构建（例如：`android-23`），然而同一 _platforms_ 包的不同\"修订版\"不能并行安装。  另外，SDK 工具不支持指定所需的修订作为构建过程的一部分。 这往往会导致另一种可重复构建，它和真正可重复构建之间唯一的区别是 `platformsBuildVersionName` 属性。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "The _platform_ is part of the Android SDK that represents the standard library that is installed on the phone.  They have two parts to their version: \"version code\", which is an integer that represents the SDK release, and the \"revision\", which represents bugfix versions to each platform.  These versions can be seen in the included `build.prop` file.  Each revision has a different number in `ro.build.version.incremental`.  Gradle has no way to specify the revision in `compileSdkVersion` or `targetSdkVersion`.  Only one `platform-23` can be installed at a time, unlike `build-tools`, where every release can be installed in parallel."
msgstr "_platform_是 Android SDK 的一部分，代表安装在手机上的标准库。  它们的版本有两部分：“版本代码”，它是一个整数，代表 SDK 版本，以及“修订版”，它代表每个平台的错误修复版本。  这些版本可以在包含的 `build.prop` 文件中看到。  每个修订版在 `ro.build.version.incremental` 中有不同的编号。  Gradle 无法在 `compileSdkVersion` 或 `targetSdkVersion` 中指定修订版本。一次只能安装一个`platform-23`，不像 `build-tools`，每个版本都可以并行安装。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Here are two examples where all the differences are suspected to come from different revisions of the platform:"
msgstr "这里有两个例子，其中所有的差异都涉嫌来自于平台的不同修订："

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "https://verification.f-droid.org/de.nico.asura_12.apk.diffoscope.html"
msgstr "https://verification.f-droid.org/de.nico.asura_12.apk.diffoscope.html"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "https://verification.f-droid.org/de.nico.ha_manager_25.apk.diffoscope.html"
msgstr "https://verification.f-droid.org/de.nico.ha_manager_25.apk.diffoscope.html"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "PNG Crush/Crunch"
msgstr "PNG 优化/压缩"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "A standard part of the Android build process is to run some kind of PNG optimization tool, like `aapt singleCrunch`, `pngcrush`, `zopflipng` or `optipng`.  These do not provide deterministic output, it is still an open question as to why.  Since PNGs are normally committed to the source repo, a workaround to this problem is to run the tool of your choice on the PNG files, then commit those changes to the source repo (e.g. `git`).  Then, disable the default PNG optimization process by adding this to `build.gradle`:"
msgstr "Android 构建过程的一个标准部分是运行某种 PNG 优化工具，例如 `aapt singleCrunch`、`pngcrush`、`zopflipng` 或 `optipng`。这些不提供确定性的输出，关于原因仍然是一个悬而未决的问题。由于 PNG 通常提交到源存储库，因此解决此问题的方法是在 PNG 文件上运行你选择的工具，然后将这些更改提交到源存储库（例如 `git`）。然后，通过将其添加到 `build.gradle` 来禁用默认的 PNG 优化过程："

#. type: Fenced code block (gradle)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"android {\n"
"    aaptOptions {\n"
"        cruncherEnabled = false\n"
"    }\n"
"}\n"
msgstr ""
"android {\n"
"    aaptOptions {\n"
"        cruncherEnabled = false\n"
"    }\n"
"}\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Note that tools such as `svgo` can do similar optimization to SVG files."
msgstr "请注意，`svgo` 等工具可以对 SVG 文件进行类似的优化。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "PNGs generated from vector drawables"
msgstr "生成自矢量可绘制对象的 PNG 图片"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "[Android Gradle plugin generates PNG resources from vector drawables for old Android versions](https://developer.android.com/reference/tools/gradle-api/7.3/com/android/build/api/dsl/VectorDrawables#generateddensities).  Unfortunately, the generated PNG files are not reproducible."
msgstr "[Android Gradle 插件为旧 Android 版本从矢量可绘制图形生成 PNG 资源](https://developer.android.com/reference/tools/gradle-api/7.3/com/android/build/api/dsl/VectorDrawables#generateddensities)。不幸的是，生成的 PNG 文件不可重复。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "You can disable generating the PNGs by adding this to `build.gradle`:"
msgstr "你可以通过添加这个到 `build.gradle` 来禁止生成 PNG："

#. type: Fenced code block (gradle)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"android {\n"
"    defaultConfig {\n"
"        vectorDrawables.generatedDensities = []\n"
"    }\n"
"}\n"
msgstr ""
"android {\n"
"    defaultConfig {\n"
"        vectorDrawables.generatedDensities = []\n"
"    }\n"
"}\n"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "R8 Optimizer"
msgstr "R8 优化器"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "It appears that some R8 optimizations are non-deterministic, producing different bytecode on different build runs."
msgstr "似乎某些 R8 优化以不确定的方式完成，在不同的构建运行中产生不同的字节码。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "For instance, R8 tries to optimize `ServiceLoader` usage making a static list of all services in the code.  The order of this list may be different (or even incomplete) on each build run.  The only way to avoid this behavior is disabling such optimizations declaring optimized classes in `proguard-rules.pro`:"
msgstr "例如，R8 尝试优化 `ServiceLoader` 的使用，在代码中制作所有服务的静态列表。每次构建运行时，此列表的顺序可能不同（甚至不完整）。避免这种行为的唯一方法是禁用在 `proguard-rules.pro` 中声明优化类的优化："

#. type: Fenced code block
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"-keep class kotlinx.coroutines.CoroutineExceptionHandler\n"
"-keep class kotlinx.coroutines.internal.MainDispatcherFactory\n"
msgstr ""
"-keep class kotlinx.coroutines.CoroutineExceptionHandler\n"
"-keep class kotlinx.coroutines.internal.MainDispatcherFactory\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Be careful with R8.  Always test your builds multiple times and disable optimizations which produce non-deterministic output."
msgstr "使用 R8 要小心。始终多次测试你的构建，并禁用产生非确定性输出的优化。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Resource Shrinker"
msgstr "资源压缩器"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "It's possible to reduce the APK file size by removing unused resources from the package.  This is useful when a project depends on some bloated libraries such as AppCompat, especially when R8/ProGuard code shrinking is used."
msgstr "可以通过从包中删除未使用的资源来减小 APK 文件的大小。当项目依赖于一些臃肿的库（例如 AppCompat）时，这很有用，尤其是在使用 R8/ProGuard 代码压缩时。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "However, it might be possible that resource shrinker will increase the APK size on different platforms, especially if there are not many resources to shrink, in which case the original APK will be used instead of the shrunk one (non-deterministic behavior of Gradle plugin).  Avoid using resource shrinker unless it decreases the APK file size significantly."
msgstr "然而，在不同的平台上，资源收缩器可能会增加 APK 的大小，尤其是在没有许多资源需要压缩的情况下，在这种情况下，将使用原始的 APK 而不是收缩后的 APK（Gradle 插件的非确定性行为）。避免使用资源压缩器，除非它能显著减少 APK 文件的大小。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "VCS Info"
msgstr "版本控制系统（VCS）信息"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Since Android Gradle Plugin 8.3, VCS info is generated by default and bundled in the apk in `META-INF/version-control-info.textproto`, e.g."
msgstr "自 Android Gradle 插件 8.3 起，VCS 信息便默认生成并被捆绑进 apk 中的 `META-INF/version-control-info.textproto`，比如."

#. type: Fenced code block
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"repositories {\n"
"  system: GIT\n"
"  local_root_path: \"$PROJECT_DIR\"\n"
"  revision: \"3a443877cd53e37d85cbc52adc8cfd558919d373\"\n"
"}\n"
msgstr ""
"repositories {\n"
"  system: GIT\n"
"  local_root_path: \"$PROJECT_DIR\"\n"
"  revision: \"3a443877cd53e37d85cbc52adc8cfd558919d373\"\n"
"}\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "This may cause problem when there is no real code change but a different commit is used, e.g.  for changelog update. VCS info can be disabled in gradle as follows:"
msgstr "在没有实际的代码变化但却使用了不同的提交时，这可能造成问题，比如，   为了更新 changelog。可按如下方法停用 VCS 信息："

#. type: Fenced code block (gradle)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"    buildTypes {\n"
"        release {\n"
"           vcsInfo.include false\n"
"        }\n"
"    }\n"
msgstr ""
"    buildTypes {\n"
"        release {\n"
"           vcsInfo.include false\n"
"        }\n"
"    }\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "While we understand that developers build and test during their normal workflow, please upload releases APKs build after tagging, from the actual tagged commit."
msgstr "虽然我们理解开发者在常规工作流期间构建并测试，但请在 tagging 操作后从实际 tagged 的代码提交处上传用于发布的 APK 构建。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "ZIP metadata"
msgstr "ZIP 元数据"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "APKs use the ZIP file format, which was originally designed around the MSDOS FAT filesystem.  UNIX file permissions were added as an extension.  APKs only need the most basic ZIP format, without any of the extensions.  These extensions are often stripped out in the final release signing process.  But the APK build process can add them.  For example:"
msgstr "APKs 使用 ZIP 文件格式，ZIP 格式最初是围绕 MSDOS 的 FAT 文件系统设计的。 UNIX 文件权限是作为一个扩展添加的。 APK 只需要最基本的 ZIP 格式，没有任何的扩展。 在最后的发布签名过程中，这些扩展往往被剥离出来。 但 APK 构建过程中可以添加它们。例如："

#. type: Fenced code block (diff)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"--- a2dp.Vol_137.apk\n"
"+++ sigcp_a2dp.Vol_137.apk\n"
"@@ -1,50 +1,50 @@\n"
"--rw----     2.0 fat     8976 bX defN 79-Nov-30 00:00 AndroidManifest.xml\n"
"--rw----     2.0 fat  1958312 bX defN 79-Nov-30 00:00 classes.dex\n"
"--rw----     1.0 fat    78984 bx stor 79-Nov-30 00:00 resources.arsc\n"
"+-rw-rw-rw-  2.3 unx     8976 b- defN 80-000-00 00:00 AndroidManifest.xml\n"
"+-rw----     2.4 fat  1958312 b- defN 80-000-00 00:00 classes.dex\n"
"+-rw-rw-rw-  2.3 unx    78984 b- stor 80-000-00 00:00 resources.arsc\n"
msgstr ""
"--- a2dp.Vol_137.apk\n"
"+++ sigcp_a2dp.Vol_137.apk\n"
"@@ -1,50 +1,50 @@\n"
"--rw----     2.0 fat     8976 bX defN 79-Nov-30 00:00 AndroidManifest.xml\n"
"--rw----     2.0 fat  1958312 bX defN 79-Nov-30 00:00 classes.dex\n"
"--rw----     1.0 fat    78984 bx stor 79-Nov-30 00:00 resources.arsc\n"
"+-rw-rw-rw-  2.3 unx     8976 b- defN 80-000-00 00:00 AndroidManifest.xml\n"
"+-rw----     2.4 fat  1958312 b- defN 80-000-00 00:00 classes.dex\n"
"+-rw-rw-rw-  2.3 unx    78984 b- stor 80-000-00 00:00 resources.arsc\n"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Mismatched Toolchains"
msgstr "不匹配的工具链"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Different toolchains may produce different binaries. A usual case is when more than one JDK version/distribution are used to build the apk. Sometimes even Gradle may mix versions of JDKs to build an apk. To avoid such problems unused JDKs should be removed."
msgstr "工具链不同，产生的二进制文件便可能不一样。常见的情况是使用不止一个 JDK 版本/分发来构建 apk 文件。有时即便是 Gradle 也会混合不同版本的 JDK 来构建一个 apk 文件。要避免这样的问题，请去掉不使用的 JDK。"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "The APK diff will have entries in the `classes.dex` files like this, e.g. Java 17 vs Java 11:"
msgstr "APK diff 在 `classes.dex` 文件中的条目形如 Java 17 vs Java 11："

#. type: Bullet: '-    '
#: _docs/Reproducible_Builds.md
msgid ".annotation system Ldalvik/annotation/Signature;"
msgstr ".annotation system Ldalvik/annotation/Signature;"

#. type: Bullet: '-        '
#: _docs/Reproducible_Builds.md
msgid "value = {"
msgstr "value = {"

#. type: Bullet: '-            '
#: _docs/Reproducible_Builds.md
msgid "\"()V\""
msgstr "\"()V\""

#. type: Bullet: '-        '
#: _docs/Reproducible_Builds.md
msgid "}"
msgstr "}"

#. type: Bullet: '-    '
#: _docs/Reproducible_Builds.md
msgid ".end annotation"
msgstr ".end annotation"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Or like this, e.g. Java 17 vs Java 21:"
msgstr "或者像这样，例如 Java 17 vs Java 21："

#. type: Bullet: '-    '
#: _docs/Reproducible_Builds.md
msgid ".annotation system Ldalvik/annotation/MethodParameters;"
msgstr ""

#. type: Bullet: '-        '
#: _docs/Reproducible_Builds.md
msgid "accessFlags = {"
msgstr ""

#. type: Bullet: '-            '
#: _docs/Reproducible_Builds.md
msgid "0x8010"
msgstr ""

#. type: Bullet: '-        '
#: _docs/Reproducible_Builds.md
msgid "names = {"
msgstr ""

#. type: Bullet: '-            '
#: _docs/Reproducible_Builds.md
msgid "null"
msgstr ""

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Different NDK versions also produce different binaries. Generally this can be recognized via the metadata, e.g. LLD version, in the native libs. However, since NDK r26d a weird behavior is observed that sometimes only the `.shstrtab` sections in ELF of the native libs are changed when NDK is installed. The native libs may be built along with the app or fetched from maven repo. If AGP finds that the NDK is installed, it will use NDK to strip the native lib but in fact it only messes up the `.shstrtab` section of the native lib. The NDK setup needs to be checked carefully to ensure it matches upstream setup, including the NDK version and if it's used by AGP."
msgstr "不同的 NDK 版本也会产生不同的二进制文件。通常而言，这可以通过原生库中的元数据，如 LLD 版本，进行识别。不过，自 NDK r26d 起观察到了一个奇怪的行为。当 NDK 安装时，有时只有原生库 ELF 中的 `.shstrtab`部分发生变化。这些原生库可能是和应用一道构建的，也可能是从 maven 存储库获取的。如果 AGP 发现安装了 NDK，那么它会使用 NDK 从原生库中移除调试符号，但事实上，它仅仅弄乱了原生库的 `.shstrtab`部分。需要仔细检查 NDK 配置确保它匹配上游配置，包括 NDK 版本以及它是否被 AGP 使用。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Support 16 KB page sizes"
msgstr "支持 16KB 页面尺寸"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Beginning with Android 15, Android supports devices that are configured to use a page size of 16 KB (16 KB devices). If your app uses any NDK libraries, either directly or indirectly through an SDK, then you will need to rebuild your app for it to work on these 16 KB devices. More info [here](https://developer.android.com/guide/practices/page-sizes)"
msgstr "自 Android 15 起，Android 支持被配置为使用 16KB 页面尺寸的设备（16 KB 设置）。如果你的应用直接或间接通过 SDK 使用任何 NDK 库，那么为了让你的应用能在这些 16 KB 设备上运行，你需要重新构建你的应用。更多信息见 [此处](https://developer.android.com/guide/practices/page-sizes)"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Language-specific instructions"
msgstr "特定于编程语言的操作指南"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Native libraries may be built with various tools and languages. Though they suffer from similar reproducible build issues, the methods for fixing them are different. Some known solutions are listed below:"
msgstr "原生库可能由各种工具和语言所构建。虽然它们在可重复构建方面遇到的问题差不多，但修复方法却不同。下面列举一些已知的解决方案："

#. type: Title #####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "ndk-build"
msgstr "ndk-build"

#. type: Plain text
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"`LOCAL_LDFLAGS += -Wl,<linker args>` can be added to `Android.mk` files or to\n"
"`build.gradle`/`build.gradle.kts`:\n"
msgstr ""
"`LOCAL_LDFLAGS += -Wl,<linker args>` 可被添加到 `Android.mk` 文件或\n"
"`build.gradle`/`build.gradle.kts`：\n"

#. type: Fenced code block (gradle)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"android {\n"
"    defaultConfig {\n"
"        externalNativeBuild {\n"
"            ndkBuild {\n"
"                arguments \"LOCAL_LDFLAGS+=-Wl,<linker args>\"\n"
"            }\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"android {\n"
"    defaultConfig {\n"
"        externalNativeBuild {\n"
"            ndkBuild {\n"
"                arguments \"LOCAL_LDFLAGS+=-Wl,<linker args>\"\n"
"            }\n"
"        }\n"
"    }\n"
"}\n"

#. type: Title #####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "CMake"
msgstr "CMake"

#. type: Plain text
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"For CMake versions since 3.13, `add_link_options(LINKER:<linker args>)` can\n"
"be added to `CMakeLists.txt` globally:\n"
msgstr ""
"对于3.13 以来的 CMake 版本, `add_link_options(LINKER:<linker args>)` 可以\n"
"被全局添加到 `CMakeLists.txt`：\n"

#. type: Fenced code block
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "add_link_options(\"-Wl,--build-id=none\")\n"
msgstr "add_link_options(\"-Wl,--build-id=none\")\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"For CMake versions before 3.13,\n"
"`target_link_libraries(<target> LINKER:<linker args>)` can be used instead for\n"
"every target. It can also be set in Gradle files:\n"
msgstr ""
"对于 3.13 之前的 CMake 版本，\n"
"可以对每个目标使用\n"
"`target_link_libraries(<target> LINKER:<linker args>)`。也可以在 Gradle 文件中设置它。\n"

#. type: Fenced code block (gradle)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"android {\n"
"    defaultConfig {\n"
"        externalNativeBuild.cmake {\n"
"          cFlags \"-DCMAKE_SHARED_LINKER_FLAGS=-Wl,<linker args>\"\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""
"android {\n"
"    defaultConfig {\n"
"        externalNativeBuild.cmake {\n"
"          cFlags \"-DCMAKE_SHARED_LINKER_FLAGS=-Wl,<linker args>\"\n"
"        }\n"
"    }\n"
"}\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "`-ffile-prefix-map` can be used to remove embedded build path."
msgstr "`-ffile-prefix-map` 可用来删除嵌入的构建路径。"

#. type: Title #####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Golang"
msgstr "Golang"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Linker arguments can be added to `CGO_LDFLAGS`. Some other useful arguments that can be passed to `go build` are `-ldflags=\"-buildid=\"`, `-trimpath` (to avoid embedded build paths) and `-buildvcs=false`."
msgstr "链接器参数可被添加到 `CGO_LDFLAGS`。一些其他可被传递到 `go build` 的有用参数是 `-ldflags=\"-buildid=\"`、 `-trimpath`（避免内嵌的构建路径）和 `-buildvcs=false`。"

#. type: Title #####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Rust"
msgstr "Rust"

#. type: Plain text
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"Compiler and linker arguments can be added to [Cargo `build.rustflags`](https://doc.rust-lang.org/cargo/reference/config.html#buildrustflags) and [rustc Codegen Options](https://doc.rust-lang.org/rustc/codegen-options/index.html).\n"
"Linker arguments can be added with `-C link-args=-Wl,<linker args>` and `--remap-path-prefix=<old>=<new>`\n"
"can be added to strip build paths.\n"
msgstr ""
"编译器和链接器参数可被添加到 [Cargo `build.rustflags`](https://doc.rust-lang.org/cargo/reference/config.html#buildrustflags) 和 [rustc Codegen Options](https://doc.rust-lang.org/rustc/codegen-options/index.html)。\n"
"链接器参数可带`-C link-args=-Wl,<linker args>`，也可以添加 `--remap-path-prefix=<old>=<new> `\n"
"来剥离构建路径。\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "The Rust toolchain should be pinned to the same version as upstream. This can be done when installing rustup with `rustup-init.sh -y --default-toolchain <version>`.\n"
msgstr "Rust 工具链应被固定在和上游一样的版本。安装 rustup 时带上参数 `rustup-init.sh -y --default-toolchain <version>` 可以做到这一点。\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "When `openssl` crate uses vendored OpenSSL build, the OpenSSL lib needs to be configured specially to be reproducible. `SOURCE_DATE_EPOCH` can be set to remove the embedded timestamps and `CARGO_TARGET_DIR` can be set to a absolute path, e.g. `/tmp/build` to make the embedded path reproducible between different machines. NDK also need to be in the same path which can be solved by linking it to the same path."
msgstr "当 `openssl` crate 使用厂商化 OpenSSL 构建时，需要特别配置 OpenSSL 库才能实现可重复。可设置 `SOURCE_DATE_EPOCH` 来去除内嵌的时间戳， `CARGO_TARGET_DIR` 可被设置成 一个绝对路径，如 `/tmp/build`来让内嵌路径在不同机器间可重复。 NDK 也需要处于相同路径上， 可通过将其链接到相同路径来解决这个问题。"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Library-specific instructions"
msgstr "特定于库文件的操作指南"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "Some libraries generate non-deterministic code due to timestamps, unsorted iterations etc. Some known fixes are documented below:"
msgstr "某些库由于时间戳、未排序的迭代等会生成非确定代码。下面的文档包含了一些已知的修复办法："

#. type: Title #####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "AboutLibraries Gradle plugin"
msgstr "AboutLibraries Gradle 插件"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "You can prevent this plugin (`com.mikepenz.aboutlibraries.plugin`) from adding a timestamp to the JSON file it generates by adding this to `build.gradle`:"
msgstr "要避免这个插件 (`com.mikepenz.aboutlibraries.plugin`) 添加时间戳到它生成的 JSON 文件，你可以添加这个到 `build.gradle`："

#. type: Fenced code block (gradle)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"aboutLibraries {\n"
"    // Remove the \"generated\" timestamp to allow for reproducible builds\n"
"    excludeFields = [\"generated\"]\n"
"}\n"
msgstr ""
"aboutLibraries {\n"
"    // Remove the \"generated\" timestamp to allow for reproducible builds\n"
"    excludeFields = [\"generated\"]\n"
"}\n"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "For `build.gradle.kts`, add this instead:"
msgstr "对于 `build.gradle.kts`，请添加这个："

#. type: Fenced code block (gradle)
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid ""
"aboutLibraries {\n"
"    // Remove the \"generated\" timestamp to allow for reproducible builds\n"
"    excludeFields = arrayOf(\"generated\")\n"
"}\n"
msgstr ""
"aboutLibraries {\n"
"    // 移除 \"generated\" 时间戳以允许可重复构建\n"
"    excludeFields = arrayOf(\"generated\")\n"
"}\n"

#. type: Title #####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "EventBus"
msgstr "EventBus"

#. type: Plain text
#: _docs/Reproducible_Builds.md
msgid "It generates [non-deterministic code](https://github.com/greenrobot/EventBus/issues/715) which can be sorted after the classes are generated. The detailed instructions can be found in [Eternity's source code](https://codeberg.org/Bazsalanszky/Eternity/commit/05123c70682e5988ad5f0ff111f97b66a87d8806)."
msgstr "它生成[非确定代码](https://github.com/greenrobot/EventBus/issues/715)，可以在生成 class 后对代码进行排序。详细操作方法见 [Eternity's source code](https://codeberg.org/Bazsalanszky/Eternity/commit/05123c70682e5988ad5f0ff111f97b66a87d8806)。"

#. type: Title ###
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "migration to reproducible builds"
msgstr "迁移到可重复构建"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "TODO"
msgstr "TODO"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "jar sort order for APKs"
msgstr "APK 的 jar 排序顺序"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "`aapt` versions produce different results (XML and _res/_ subfolder names)"
msgstr "`aapt` 版本产生不同的结果（XML 和 _res/_ 子文件夹名称）"

#. type: Title ####
#: _docs/Reproducible_Builds.md
#, no-wrap
msgid "Sources"
msgstr "来源"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "<https://gitlab.com/fdroid/fdroidserver/commit/8568805866dadbdcc6c07449ca6b84b80d0ab03c>"
msgstr "<https://gitlab.com/fdroid/fdroidserver/commit/8568805866dadbdcc6c07449ca6b84b80d0ab03c>"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "[Verification Server](../Verification_Server)"
msgstr "[验证服务器](../Verification_Server)"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "<https://verification.f-droid.org>"
msgstr "<https://verification.f-droid.org>"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "<https://reproducible-builds.org>"
msgstr "<https://reproducible-builds.org>"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "<https://wiki.debian.org/ReproducibleBuilds>"
msgstr "<https://wiki.debian.org/ReproducibleBuilds>"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "<https://gitian.org/>"
msgstr "<https://gitian.org/>"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "[Google Issue #70292819 platform-27\\_r01.zip was overwritten with a new update](https://issuetracker.google.com/issues/70292819) (_Google login and JavaScript required_)"
msgstr "[Google Issue #70292819 platform-27\\_r01.zip 被新更新覆盖](https://issuetracker.google.com/issues/70292819)（_需要 Google 账号登录以及 JavaScript_）"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "[Google Issue #37132313 platformBuildVersionName makes builds difficult to reproduce, creates unneeded diffs](https://issuetracker.google.com/issues/37132313) (_Google login and JavaScript required_)"
msgstr "[Google Issue #37132313 platformBuildVersionName 使构建难以重现，产生不必要的差异](https://issuetracker.google.com/issues/37132313)（_需要 Google 账号登录以及 JavaScript_）"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "[Google Issue #110237303 resources.arsc built with non-determism, prevents reproducible APK builds](https://issuetracker.google.com/issues/110237303) (_Google login and JavaScript required_)"
msgstr "[Google Issue #110237303 使用非确定性构建的 resources.arsc，阻止了可重复的 APK 构建](https://issuetracker.google.com/issues/110237303)（_需要 Google 账号登录以及 JavaScript_）"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "[Unreproducible/non-deterministic code generation by navigation.safeargs.kotlin](https://issuetracker.google.com/issues/189498001) (_Google login and JavaScript required_)"
msgstr "[由 navigation.safeargs.kotlin 生成的不可重复/不确定的代码](https://issuetracker.google.com/issues/189498001) （_需要 Google 账号登录以及 JavaScript_）"

#. type: Bullet: '* '
#: _docs/Reproducible_Builds.md
msgid "[unneeded DEX code differences based on number of CPUs used in build process](https://issuetracker.google.com/issues/269181868)  (_Google login and JavaScript required_)"
msgstr "[基于构建过程中所用 CPU 数量的不必要的 DEX 代码差异](https://issuetracker.google.com/issues/269181868)  (_需要 Google 账户登录和开启 JavaScript_)"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "Running a Mirror"
msgstr "运行镜像"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "F-Droid's collection of apps and files are run on servers run by the core F-Droid contributors. Originally, this main repository was hosted only on [f-droid.org](https://f-droid.org/), but as F-Droid grew [f-droid.org](https://f-droid.org/) alone was no longer able to handle the entire load. F-Droid now supports \"mirror\" servers that replicate a full copy of the repositories. Hosting a mirror involves running an HTTPS webserver that has a full copy of the repository synchronized using `rsync`."
msgstr "F-Droid 的应用和文件集合在由 F-Droid 核心贡献者运行的服务器上运行。最初，这个主要的资源库只托管在 [f-droid.org](https://f-droid.org/) 上，但是随着 F-Droid 的发展，[f-droid.org](https://f-droid.org/) 本身已经无法单独处理整个负载了。F-Droid 现在支持\"镜像\"服务器，它复制了存储库的完整副本。托管一个镜像需要运行一个 HTTPS webserver，它有一个使用 `rsync` 同步的版本库的完整副本。"

#. type: Title ####
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "Primary and Secondary Mirrors"
msgstr "主要和次要镜像"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "Whenever F-Droid has built a new index, it proactively pushes it to a selected set of mirrors, called the \"primary mirrors\".  In other words, primary mirrors are updated nearly immediately.  As of September 2024, the primary mirrors are ([latest list](https://gitlab.com/fdroid/web-services/-/blob/master/origin-04-mirror-push.yml)):"
msgstr "每当 F-Droid 构建新索引，它都会主动将新索引推送到选定的镜像集合，即所谓的”主镜像“。   换句话说，主镜像几乎是立即更新的。   截至2024年9月，主镜像为 ([latest list](https://gitlab.com/fdroid/web-services/-/blob/master/origin-04-mirror-push.yml))："

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "ftp.agdsn.de"
msgstr "ftp.agdsn.de"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "ftp.lysator.liu.se"
msgstr "ftp.lysator.liu.se"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "plug-mirror.rcac.purdue.edu"
msgstr "plug-mirror.rcac.purdue.edu"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "Most other mirrors are \"secondary mirrors\".  These mirrors sync periodically (e.g., every 4 hours) from one of the primary mirrors."
msgstr "多数其他镜像为”次要镜像“。   这些镜像定期（比如每 4 个小时）从主镜像之一进行同步。"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "Therefore, secondary mirrors usually have a small propagation delay.  Nevertheless, note that in practice the time between any two index updates is dominated by the time to update and build the apps (in the order of days).  Not having too many primary mirrors also keeps the load on the F-Droid origin server small."
msgstr "因此，次要镜像通常有轻微的传播延迟。   尽管如此，请注意在实践中，两次索引更新间的时间由更新和构建应用的时间决定（按照天数顺序）。   没有过多的主镜像同样使 F-Droid 自身服务器上的负载不大。"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "Technically, you can also have a \"tertiary mirror\" by syncing from a secondary mirror, and so on."
msgstr "从技术上讲，通过从次要镜像同步，你还可以有“第三镜像”。以此类推，镜像等级可以一直向后延展。"

#. type: Title ####
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "Requirements"
msgstr "要求"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "There are two official F-Droid repository sections, the \"repo\" and the \"archive\". It's most important to mirror the \"repo\" since it is used much more than the \"archive\"."
msgstr "有两个官方的 F-Droid 存储库部分，\"存储库\" 和 \"存档\"。镜像 \"存储库\" 是最重要的，因为它的使用次数远远超过 \"存档\"。"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "The primary resources required by a mirror are disk space and upload bandwidth.  Bandwidth requirements are reduced with each new mirror, but disk requirements grow at a [reasonable rate](https://ftp.fau.de/cgi-bin/show-ftp-stats.cgi?statstype=2&what=mirrorsize&mirrorname=fdroid&timespan=-1&graphsize=large&submit=Go%21).  In March 2019, the primary repository required just over 60GB of disk space in 24K files, and the archive required 300GB of disk space in 52K files.  In February 2024, the primary repository required 450GB in 180K files, and the archive required 1.9TB in 430K files.  The amount of disk space required grows with every new app release."
msgstr "镜像所需的主要资源是磁盘空间和上传带宽。每个新镜像都会减少带宽需求，但磁盘需求以 [合理的速度](https://ftp.fau.de/cgi-bin/show-ftp-stats.cgi?statstype=2&what=mirrorsize&mirrorname=fdroid&timespan= -1&graphsize=large&submit=Go%21) 增长。2019 年 3 月时，主存储库的 24000 多个 文件需要超过 60GB 的磁盘空间，而52000多个存档文件需要 300GB 磁盘空间。2024年2月，主存储库的180000多个文件需要450GB空间，而430000多个存档文件需要1.9TB空间。所需的磁盘空间量随着每个用应用的发布而增加。"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "There are many mirror servers which offer an _rsync_ connection, make sure to select the mirror closest to your mirror server:"
msgstr "有许多镜像服务器提供 _rsync_ 连接，请确保选择最接近镜像服务器的镜像："

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "{% include running-a-mirror-rsync.html %}"
msgstr "{% include running-a-mirror-rsync.html %}"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "You can find current information on disk space requirements by running the following in your terminal:"
msgstr "你可以通过在终端中运行以下命令来查找有关磁盘空间要求的当前信息："

#. type: Fenced code block (console)
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "$ rsync --dry-run --recursive --stats --human-readable ftp.fau.de::fdroid .\n"
msgstr "$ rsync --dry-run --recursive --stats --human-readable ftp.fau.de::fdroid .\n"

#. type: Title ####
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "Setup"
msgstr "设置"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "This guide assumes the use of Nginx with a deb-based distribution, and mirroring the primary repository plus the archive. Please adjust accordingly if you're using alternatives or don't intend to mirror the archive. Also substitute the examples paths and domains for your own."
msgstr "本指南假设使用 Nginx 和基于 deb 的发行版，并镜像主存储库和存档。如果你使用的是替代品，或者不打算镜像存档，请做相应调整。也可以用你自己的路径和域来代替例子。"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "For assistance with this process, [feel free to reach out to us]({{ site.baseurl }}/about/)."
msgstr "如需有关该过程的协助，[请随时与我们联络]({{ site.baseurl }}/about/)."

#. type: Title #####
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "1. Create appropriate directories"
msgstr "1. 创建合适的目录"

#. type: Fenced code block (console)
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid ""
"$ sudo mkdir -p /var/www/fdroid/fdroid/repo\n"
"$ sudo mkdir -p /var/www/fdroid/fdroid/archive\n"
"$ sudo chown -R www-data.www-data /var/www/fdroid\n"
msgstr ""
"$ sudo mkdir -p /var/www/fdroid/fdroid/repo\n"
"$ sudo mkdir -p /var/www/fdroid/fdroid/archive\n"
"$ sudo chown -R www-data.www-data /var/www/fdroid\n"

#. type: Title #####
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "2. Synchronize the repositories."
msgstr "2. 同步存储库。"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "These commands are best run in a terminal multiplexer (`screen`, `tmux` etc) as they will take some time to complete. With `--info=progress2` you can see the progress."
msgstr "这些命令最好在终端多路复用器（`screen`、`tmux` 等）中运行，因为它们需要一些时间才能完成。使用 `--info=progress2` 可以看到进度。"

#. type: Fenced code block (console)
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid ""
"$ sudo -u www-data -E /usr/bin/rsync -aHS  --delete --delete-delay --info=progress2 ftp.fau.de::fdroid/repo/ /var/www/fdroid/fdroid/repo/\n"
"$ sudo -u www-data -E /usr/bin/rsync -aHS  --delete --delete-delay --info=progress2 ftp.fau.de::fdroid/archive/ /var/www/fdroid/fdroid/archive/\n"
msgstr ""
"$ sudo -u www-data -E /usr/bin/rsync -aHS  --delete --delete-delay --info=progress2 ftp.fau.de::fdroid/repo/ /var/www/fdroid/fdroid/repo/\n"
"$ sudo -u www-data -E /usr/bin/rsync -aHS  --delete --delete-delay --info=progress2 ftp.fau.de::fdroid/archive/ /var/www/fdroid/fdroid/archive/\n"

#. type: Title #####
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "3. Establish a cronjob to keep the repositories up to date"
msgstr "3. 建立一个 cronjob 以使存储库保持最新"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "Create a cronjob file in `/etc/cron.d`"
msgstr "在 `/etc/cron.d` 中创建一个 cronjob 文件"

#. type: Fenced code block (console)
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "$ vi /etc/cron.d/fdroid\n"
msgstr "$ vi /etc/cron.d/fdroid\n"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "Fill the file with entries to update the repositories. These commands will run at minute 35 past every 6th hour, you can change it to fit your needs."
msgstr "在文件中填入条目以更新存储库。这些命令将在每隔6小时的第35分钟运行，你可以根据你的需要改变它。"

#. type: Fenced code block
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid ""
"35 */6 * * * www-data /usr/bin/rsync -aHS  --delete --delete-delay ftp.fau.de::fdroid/repo/ /var/www/fdroid/fdroid/repo/\n"
"35 */6 * * * www-data /usr/bin/rsync -aHS  --delete --delete-delay ftp.fau.de::fdroid/archive/ /var/www/fdroid/fdroid/archive/\n"
msgstr ""
"35 */6 * * * www-data /usr/bin/rsync -aHS  --delete --delete-delay ftp.fau.de::fdroid/repo/ /var/www/fdroid/fdroid/repo/\n"
"35 */6 * * * www-data /usr/bin/rsync -aHS  --delete --delete-delay ftp.fau.de::fdroid/archive/ /var/www/fdroid/fdroid/archive/\n"

#. type: Title #####
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "4. Configure your webserver"
msgstr "4. 配置你的网络服务器"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "This is an example server block for nginx. If used, it should be copied to _/etc/nginx/sites-available/_ and symlinked to _/etc/nginx/sites-enabled_. Note that it is important that your URI be `/fdroid/repo` so that the app can automatically add your mirror."
msgstr "这是一个 nginx 服务器块的例子。如果使用，应该复制到 _/etc/nginx/sites-available/_，并将其符号链接到 _/etc/nginx/sites-enabled_。注意，你的 URI 必须是 `/fdroid/repo`，以便应用可以自动添加你的镜像。"

#. type: Fenced code block
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid ""
"server {\n"
"  listen [::]:80 ipv6only=off;\n"
"\n"
"  server_name fdroidmirror.example.com;\n"
"\n"
"  rewrite ^ https://$host$request_uri permanent;\n"
"}\n"
"\n"
"server {\n"
"  listen [::]:443 ssl http2 ipv6only=off;\n"
"\n"
"  server_name fdroidmirror.example.com;\n"
"\n"
"  root /var/www/fdroid/;\n"
"\n"
"  ssl_certificate /etc/letsencrypt/live/fdroidmirror.example.com/fullchain.pem;\n"
"  ssl_certificate_key /etc/letsencrypt/live/fdroidmirror.example.com/privkey.pem;\n"
"\n"
"  # Insert here a TLS config from Mozilla SSL config generator https://mozilla.github.io/server-side-tls/ssl-config-generator/\n"
"}\n"
msgstr ""
"server {\n"
"  listen [::]:80 ipv6only=off;\n"
"\n"
"  server_name fdroidmirror.example.com;\n"
"\n"
"  rewrite ^ https://$host$request_uri permanent;\n"
"}\n"
"\n"
"server {\n"
"  listen [::]:443 ssl http2 ipv6only=off;\n"
"\n"
"  server_name fdroidmirror.example.com;\n"
"\n"
"  root /var/www/fdroid/;\n"
"\n"
"  ssl_certificate /etc/letsencrypt/live/fdroidmirror.example.com/fullchain.pem;\n"
"  ssl_certificate_key /etc/letsencrypt/live/fdroidmirror.example.com/privkey.pem;\n"
"\n"
"  # Insert here a TLS config from Mozilla SSL config generator https://mozilla.github.io/server-side-tls/ssl-config-generator/\n"
"}\n"

#. type: Title #####
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "5. Test that your mirror works"
msgstr "5. 测试你的镜像可以正常运作"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "Manually add your mirror to F-Droid to test that it works."
msgstr "手动添加你的镜像到 F-Droid 测试其能否正常运作。"

#. type: Plain text
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid ""
"Go to Settings -> Repositories, click the \"+\" button, and then manually enter your repository URL (don't use the QR code):\n"
"https://fdroidmirror.example.com/fdroid/repo?fingerprint=43238D512C1E5EB2D6569F4A3AFBF5523418B82E0A3ED1552770ABB9A9C9CCAB\n"
msgstr ""
"转到 设置 -> 存储库，单击 \"+\" 按钮，接着手动输入你的存储库 URL （不要使用二维码）：\n"
"https://fdroidmirror.example.com/fdroid/repo?fingerprint=43238D512C1E5EB2D6569F4A3AFBF5523418B82E0A3ED1552770ABB9A9C9CCAB\n"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "Then disable the other mirrors except your new one, refresh the index with pull-to-refresh, and browse and install some apps!"
msgstr "接着停用除了你的新镜像之外的其他所有镜像，下拉刷新索引，浏览并安装一些应用！"

#. type: Title #####
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "6. Set up a privacy policy"
msgstr "6. 设置隐私政策"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "Please include a privacy policy so that users can understand what happens with their metadata when using your mirror.  For inspiration, see:"
msgstr "请包含隐私政策，以便用户可以理解使用您的镜像时他们的元数据会发生什么。以下政策供参考："

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "FAU: https://ftp.fau.de/datenschutz"
msgstr "FAU: https://ftp.fau.de/datenschutz"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "Lysator: https://ftp.lysator.liu.se/datahanteringspolicy.txt"
msgstr "Lysator: https://ftp.lysator.liu.se/datahanteringspolicy.txt"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "Purdue PLUG: https://plug-mirror.rcac.purdue.edu/info.html"
msgstr "Purdue PLUG: https://plug-mirror.rcac.purdue.edu/info.html"

#. type: Title #####
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "7. Submit your mirror for inclusion"
msgstr "7. 提交镜像以进行收录"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "Fork the [mirror monitor repo](https://gitlab.com/fdroid/mirror-monitor), add your mirror to the list in the README, and open a merge request."
msgstr "复刻 [mirror monitor repo](https://gitlab.com/fdroid/mirror-monitor)，将你的镜像添加到 README 中的列表中，并打开一个合并请求。"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "Open an issue on the [admin repo](https://gitlab.com/fdroid/admin), including any pertinent information, requesting the inclusion of your mirror."
msgstr "在 [admin repo](https://gitlab.com/fdroid/admin) 上打开一个问题，包括任何相关信息，请求包含你的镜像。"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "Once the core contributor team deems your mirror trustworthy and reliable, it will be accepted into the official list."
msgstr "一旦核心贡献者团队认为你的镜像值得信赖和可靠，它将被接受到官方列表中。"

#. type: Title ####
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "Other considerations"
msgstr "其他考虑"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "Forward emails from cronjob failures so you know if the synchronization fails"
msgstr "转发来自 cronjob 失败的电子邮件，以便你知道同步是否失败"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "Monitor disk usage to prevent it from getting full"
msgstr "监测磁盘用量防止其被填满"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "Monitor your mirror so you know if it goes down (ideally keyword on _/srv/mymirror.org/htdocs/fdroid/repo/index-v1.jar_)"
msgstr "检测镜像，以便您知道它是否出现故障（最好是 _/srv/mymirror.org/htdocs/fdroid/repo/index-v1.jar_ 上的关键字）"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "Harden your SSH server config (disable password authentication, install _fail2ban_)"
msgstr "强化你的 SSH 服务器配置（禁用密码验证，安装 _fail2ban_）"

#. type: Bullet: '* '
#: _docs/Running_a_Mirror.md
msgid "Enable unattended security upgrades (in Debian, just `apt-get install unattended-upgrades`)"
msgstr "启用无人值守安全升级（在 Debian 中，只需 `apt-get install unattended-upgrades`）"

#. type: Title ##
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "Running a Primary Mirror (receiving syncs via push)"
msgstr "运行主镜像（通过推送接收同步）"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "The preferred setup is for the F-Droid updates to be pushed to the primary mirror via _rsync_ over _ssh_ with SSH Key authentication.  This is the same as [Debian](https://www.debian.org/mirror/push_server#sshtrigger), the key difference is that there currently is no script used for the `command=\"\"`, but instead, there is a hard-coded _rsync_ command.  This really nicely restricts the security interaction to only want needs to happen (Least Authority!)."
msgstr "首选设置是将 F-Droid 更新通过 _rsync_ 通过 _ssh_ 和 SSH 密钥身份验证推送到主镜像。这与 [Debian](https://www.debian.org/mirror/push_server#sshtrigger) 相同，主要区别在于目前没有用于 `command=\"\"` 的脚本，但是，有一个硬编码的 _rsync_ 命令。这真的很好地将安全交互限制为只需要发生（最低权限！）。"

#. type: Fenced code block
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid "command=\"rsync --server -logDtpre.iLsfx --log-format=X --delete --delay-updates . /srv/fdroid-mirror.at.or.at/htdocs/fdroid/\"\n"
msgstr "command=\"rsync --server -logDtpre.iLsfx --log-format=X --delete --delay-updates . /srv/fdroid-mirror.at.or.at/htdocs/fdroid/\"\n"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "The only piece of that command that is customizable is the final path.  It can be any path but it must point to the `/fdroid/` directory and must have the trailing slash.  If any of the _rsync_ options are changed, it will break the sync setup."
msgstr "该命令中唯一可定制的部分是最后的路径。 它可以是任何路径，但必须指向 `/fdroid/` 目录，并且必须有尾部斜线。  如果任何一个 _rsync_ 选项被改变，它将破坏同步设置。"

#. type: Plain text
#: _docs/Running_a_Mirror.md
msgid "As an extra precaution, there should be a user account (e.g. `fdroid`)  dedicated to receiving the _rsync_/_ssh_ connection.  It should have as little access as possible.  It should definitely not have write access to the _authorized_keys_ file, since that would allow an attacker who gains write access to add a separate key configuration line which circumvents all the restrictions listed there.  This can be done simply by doing:"
msgstr "作为额外的预防措施，应该有一个用户账户（例如 `fdroid`）专门用来接收 _rsync_/_ssh_ 连接。  它应该有尽可能少的访问权限。  它绝对不应该有对 _authorized_keys_ 文件的写入权限，因为这将允许获得写入权限的攻击者添加一个单独的密钥配置行，从而规避那里列出的所有限制。 这可以简单地通过执行以下操作实现："

#. type: Fenced code block (console)
#: _docs/Running_a_Mirror.md
#, no-wrap
msgid ""
"$ sudo chown root.root /home/fdroid/.ssh /home/fdroid/.ssh/authorized_keys\n"
"$ sudo chmod 0755 /home/fdroid/.ssh\n"
"$ sudo chmod 0644 /home/fdroid/.ssh/authorized_keys\n"
msgstr ""
"$ sudo chown root.root /home/fdroid/.ssh /home/fdroid/.ssh/authorized_keys\n"
"$ sudo chmod 0755 /home/fdroid/.ssh\n"
"$ sudo chmod 0644 /home/fdroid/.ssh/authorized_keys\n"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Running_on_old_Android_versions.md
#, no-wrap
msgid "Running on old Android versions"
msgstr "在旧版本 Android 上运行"

#. type: Plain text
#: _docs/Running_on_old_Android_versions.md
msgid "F-Droid repos generally maintain support for old F-Droid releases for a long time.  That means that old F-Droid releases will continue to work for years. That provides a path to run F-Droid on very old Android releases. Here are the download links for installing the newest release that runs on a given Android release:"
msgstr "F-Droid 存储库通常会在很长一段时间内保持对旧 F-Droid 版本的支持。这意味着旧 F-Droid 版本将继续工作数年。这使 F-Droid 可以在非常旧的 Android 系统上运行。以下是可以在特定版本 Android 系统上运行的最新版 F-Droid 的下载链接："

#. type: Bullet: '* '
#: _docs/Running_on_old_Android_versions.md
msgid "Android 6.0 (API 23) and up: [F-Droid (latest stable)]({{ site.fdroid_apk_download_url }})"
msgstr "Android 6.0 (API 23) 及以上: [F-Droid（最新稳定版）]({{ site.fdroid_apk_download_url }})"

#. type: Plain text
#: _docs/Running_on_old_Android_versions.md
msgid "First issue older Android versions encounter will be certificate related, please read and follow the steps to [install the Let’s Encrypt ISRG Root X1 certificate](https://www.stoutner.com/lets-encrypt-isrg-root-x1-and-privacy-browser/) before proceeding. Android 6 and 7 are also affected, while the latest in-client mirroring system will alleviate this and cycle through mirrors until it finds one that is still compatible, users are encouraged to add the certificate anyway as this helps other apps too."
msgstr "较旧的 Android 版本遇到的第一个问题会和证书相关，请阅读并遵照步骤 [安装 Let’s Encrypt ISRG Root X1 证书](https://www.stoutner.com/lets-encrypt-isrg-root-x1-and-privacy-browser/)，然后再继续。Android 6 和 7 同样受影响，虽然最新的客户端内镜像系统会缓解这个问题，不断查找直到找到依旧兼容的镜像源，我们仍鼓励用户添加证书，因为这样做也可以帮助其他应用。"

#. type: Bullet: '* '
#: _docs/Running_on_old_Android_versions.md
msgid "Android 5.1 (API 22): [F-Droid 1.15.6](https://f-droid.org/archive/org.fdroid.fdroid_1015056.apk)"
msgstr "Android 5.1 (API 22) ：[F-Droid 1.15.6](https://f-droid.org/archive/org.fdroid.fdroid_1015056.apk)"

#. type: Bullet: '* '
#: _docs/Running_on_old_Android_versions.md
msgid "Android 4.0 (API 14) to Android 5.0 (API 21): [F-Droid 1.12.1](https://f-droid.org/archive/org.fdroid.fdroid_1012051.apk)"
msgstr "Android 4.0 (API 14) 到 Android 5.0 (API 21): [F-Droid 1.12.1](https://f-droid.org/archive/org.fdroid.fdroid_1012051.apk)"

#. type: Bullet: '* '
#: _docs/Running_on_old_Android_versions.md
msgid "Android 2.3.3 (API 10) to Android 3.2 (API 13): [F-Droid 1.2.2](https://f-droid.org/archive/org.fdroid.fdroid_1002052.apk)"
msgstr "Android 2.3.3 (API 10) 到 Android 3.2 (API 13): [F-Droid 1.2.2](https://f-droid.org/archive/org.fdroid.fdroid_1002052.apk)"

#. type: Bullet: '* '
#: _docs/Running_on_old_Android_versions.md
msgid "Android 2.2 (API 8) to Android 2.3.2 (API 9): [F-Droid 0.100.1](https://f-droid.org/archive/org.fdroid.fdroid_100150.apk)"
msgstr "Android 2.2 (API 8) 到 Android 2.3.2 (API 9): [F-Droid 0.100.1](https://f-droid.org/archive/org.fdroid.fdroid_100150.apk)"

#. type: Bullet: '* '
#: _docs/Running_on_old_Android_versions.md
msgid "Android 2.1 (API 7): [F-Droid 0.91](https://f-droid.org/archive/org.fdroid.fdroid_910.apk)"
msgstr "Android 2.1 (API 7): [F-Droid 0.91](https://f-droid.org/archive/org.fdroid.fdroid_910.apk)"

#. type: Bullet: '* '
#: _docs/Running_on_old_Android_versions.md
msgid "Android 2.0 (API 5) to Android 2.0.1 (API 6): [F-Droid 0.69](https://f-droid.org/archive/org.fdroid.fdroid_690.apk)"
msgstr "Android 2.0 (API 5) 到 Android 2.0.1 (API 6): [F-Droid 0.69](https://f-droid.org/archive/org.fdroid.fdroid_690.apk)"

#. type: Bullet: '* '
#: _docs/Running_on_old_Android_versions.md
msgid "Android 1.6 (API 4): [F-Droid 0.56](https://f-droid.org/archive/org.fdroid.fdroid_560.apk)"
msgstr "Android 1.6 (API 4): [F-Droid 0.56](https://f-droid.org/archive/org.fdroid.fdroid_560.apk)"

#. type: Bullet: '* '
#: _docs/Running_on_old_Android_versions.md
msgid "Android 1.5 (API 3): [F-Droid 0.45](https://f-droid.org/archive/org.fdroid.fdroid_45.apk)"
msgstr "Android 1.5 (API 3): [F-Droid 0.45](https://f-droid.org/archive/org.fdroid.fdroid_45.apk)"

#. type: Plain text
#: _docs/Running_on_old_Android_versions.md
msgid "Please note that many apps on F-Droid may no longer support such old Android versions. It is recommended to enable the \"F-Droid Archive\" repository in the F-Droid app. Enabling the Archive lets F-Droid show you older versions of apps, which may include versions that still work on your device."
msgstr "请注意，F-Droid 上的许多应用可能不再支持这些旧的 Android 系统。建议在 F-Droid 应用中启用“F-Droid Archive”存储库。启用它可以让 F-Droid 显示旧版本的应用，其中可能包括仍能在你的设备上工作的版本。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Security_Model.md
#, no-wrap
msgid "Security Model"
msgstr "安全模型"

#. type: Plain text
#: _docs/Security_Model.md
#, no-wrap
msgid ""
"The security architecture is based on integrating models proven by\n"
"[Debian](https://wiki.debian.org/SecureApt) and [The Update\n"
"Framework](https://github.com/theupdateframework/specification/blob/master/tuf-spec.md)\n"
" into what the Android OS already provides.  The way F-Droid operates is greatly inspired by de facto security model of how reputable GNU/Linux distros like Debian, Fedora, Ubuntu, etc. operate.  There is a big emphasis on operating in the public and making everything publicly available. We include source tarballs and build logs when we publish binaries.  These are archived as long as possible, for retroactive review.  And all of this is mirrored in many places across the internet by many different parties.\n"
msgstr ""
"安全架构是基于把经\n"
"[Debian](https://wiki.debian.org/SecureApt) 和 [The Update\n"
"Framework](https://github.com/theupdateframework/specification/blob/master/tuf-spec.md)\n"
"证明的模型集成到 Android 系统已经提供的模型中去。  F-Droid 的运行方式很大程度上受到了 Debian、Fedora、Ubuntu 等知名 GNU/Linux 发行版运作方式的事实安全模型的启发。  我们非常强调在“阳光下运作”并使所有内容都公开可用。 我们发布二进制文件时会包括源代码压缩包和构建日志。  这些内容将尽可能长时间存档，以供回溯审查。  所有这一切被许多不同的团体镜像在互联网上的许多地方。\n"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "a repo is defined by having unique signing key, first and foremost"
msgstr "存储库的定义首先是唯一的签名密钥"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "[HTTPS connections by default](https://gitlab.com/fdroid/fdroidclient/blob/v0.100.1/app/src/main/res/values/default_repo.xml#L11)"
msgstr "[默认 HTTPS 连接](https://gitlab.com/fdroid/fdroidclient/blob/v0.100.1/app/src/main/res/values/default_repo.xml#L11)"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "server only works over HTTPS, [HTTP](http://f-droid.org) is a redirect"
msgstr "服务器仅通过 HTTPS 工作，[HTTP](http://f-droid.org) 是重定向"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "[Android enforces](https://developer.android.com/studio/publish/app-signing.html#considerations) that all apps have a valid signature over the entire contents of the APK file"
msgstr "[Android 强制要求](https://developer.android.com/studio/publish/app-signing.html#thinkations) 所有应用都对 APK 文件的全部内容具有有效签名"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "[Android verifies updates](https://developer.android.com/studio/publish/app-signing.html#considerations) based on the signature of the installed app"
msgstr "[Android 验证更新](https://developer.android.com/studio/publish/app-signing.html#thinkations) 基于已安装应用的签名"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "[file integrity](https://gitlab.com/fdroid/fdroidclient/blob/v0.101-alpha2/app/src/main/java/org/fdroid/fdroid/installer/ApkCache.java#L57) protected by [signed metadata](https://gitlab.com/fdroid/fdroidclient/blob/v0.101-alpha2/app/src/main/java/org/fdroid/fdroid/RepoUpdater.java#L212)"
msgstr "[文件完整性](https://gitlab.com/fdroid/fdroidclient/blob/v0.101-alpha2/app/src/main/java/org/fdroid/fdroid/installer/ApkCache.java#L57) 由 [签名的元数据](https://gitlab.com/fdroid/fdroidclient/blob/v0.101-alpha2/app/src/main/java/org/fdroid/fdroid/RepoUpdater.java#L212) 保护"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "As of [_index-v2_](https://gitlab.com/fdroid/fdroidserver/-/merge_requests/1092), files from the repo are verified based on SHA-256, including icons, screenshots, etc."
msgstr "从 [_index-v2_](https://gitlab.com/fdroid/fdroidserver/-/merge_requests/1092)起，存储库中的文件基于 SHA-256 进行验证，包括图标、屏幕截图等。"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "_index-v2_ uses any algorithm supported by [_apksigner_](https://gitlab.com/fdroid/fdroidserver/-/merge_requests/1134) and [_android-23_](https://developer.android.com/reference/java/security/Signature) and newer, and relies on OpenJDK's and Google's maintenance of the currently valid signing algorithms.  When _index-v2_ was launched, the signature algorithm in use was `SHA256withRSA` and the digest algorithm was `SHA-256`.  _index-v1_ is signed by `SHA1withRSA`.  As of this writing, SHA1 are still considered strong against [second pre-image attacks](https://crypto.stackexchange.com/a/48291), which is what is relevant for index JARs."
msgstr "_index-v2_ 使用任何受 [_apksigner_](https://gitlab.com/fdroid/fdroidserver/-/merge_requests/1134)以及 [_android-23_](https://developer.android.com/reference/java/security/Signature)和更新规格支持的算法 ，并依赖于 OpenJDK 和 Google 对当前有效签名算法的维护。  当 _index-v2_ 推出时，所使用的签名算法是 `SHA256withRSA`，摘要算法是 `SHA-256`。  _index-v1_由`SHA1withRSA`签署。  在撰写本文时，SHA1 仍然被认为可以抵抗 [second pre-image attacks](https://crypto.stackexchange.com/a/48291), 这一点对确保索引 JAR 文件的安全很重要。"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "Production signing is handled by [reproducible builds](https://tests.reproducible-builds.org/debian/rb-pkg/unstable/amd64/android-platform-tools-apksig.html) of _apksigner_ from Debian."
msgstr "产品签名使用 Debian 的[可重复构建](https://tests.reproducible-builds.org/debian/rb-pkg/unstable/amd64/android-platform-tools-apksig.html)的 _apksigner_。"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "signed metadata includes hashes of [the app](https://gitlab.com/fdroid/fdroidserver/blob/0.6.0/fdroidserver/update.py#L460) and its [signing key](https://gitlab.com/fdroid/fdroidserver/blob/0.6.0/fdroidserver/update.py#L558)"
msgstr "签署的元数据包括 [应用](https://gitlab.com/fdroid/fdroidserver/blob/0.6.0/fdroidserver/update.py#L460) 和其 [签署密钥](https://gitlab.com/fdroid/fdroidserver/blob/0.6.0/fdroidserver/update.py#L558) 的散列值"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "[signed metadata generated on a separate machine](https://gitlab.com/fdroid/fdroidserver/blob/0.6.0/fdroidserver/update.py#L989) (which is fully offline for f-droid.org and guardianproject.info)"
msgstr "[在单独的机器上生成的签名元数据](https://gitlab.com/fdroid/fdroidserver/blob/0.6.0/fdroidserver/update.py#L989) (这对 f-droid.org 和 guardianproject.info 来说是完全离线的)"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "[public key for verifying metadata signatures built into F-Droid client app](https://gitlab.com/fdroid/fdroidclient/blob/v0.100.1/app/src/main/res/values/default_repo.xml#L13)"
msgstr "[用于验证 F-Droid 客户端应用中的元数据签名的公钥](https://gitlab.com/fdroid/fdroidclient/blob/v0.100.1/app/src/main/res/values/default_repo.xml#L13)"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "signed metadata includes [timestamp](https://gitlab.com/fdroid/fdroidclient/commit/02b2090e530ab5d22b522d978728f34bb332b390)  and [expiry](https://gitlab.com/fdroid/fdroidserver/blob/0.6.0/fdroidserver/update.py#L775)"
msgstr "签署的元数据包括 [时间戳](https://gitlab.com/fdroid/fdroidclient/commit/02b2090e530ab5d22b522d978728f34bb332b390) 和 [有效期](https://gitlab.com/fdroid/fdroidserver/blob/0.6.0/fdroidserver/update.py#L775)"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "easy Tor support via Settings"
msgstr "通过设置轻松支持 Tor"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "[client-side HTTP ETag cache check](https://gitlab.com/fdroid/fdroidclient/issues/562)  so the ETag cannot be abused to track users"
msgstr "[客户端 HTTP ETag 缓存检查](https://gitlab.com/fdroid/fdroidclient/issues/562)，因此 ETag 不能被滥用来追踪用户"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "list of official mirrors included in signed metadata, then the client [chooses mirrors](https://gitlab.com/fdroid/fdroidclient/issues/35)  based on availability and freshness based on local criteria like whether Tor is in use"
msgstr "包括在签名元数据中的官方镜像列表，然后客户端 [选择镜像](https://gitlab.com/fdroid/fdroidclient/issues/35) 根据可用性和新鲜度，基于本地标准，如 Tor 是否在使用中"

#. type: Plain text
#: _docs/Security_Model.md
msgid "While the current setup is already a solid platform, there are a number of improvements that make sense to implement:"
msgstr "虽然当前设置已经是一个可靠的平台，但仍有许多改进值得实施："

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "better handling of index expiry aka \"max age\""
msgstr "更好地处理索引到期，又名“最大年龄”"

#. type: Bullet: '-   '
#: _docs/Security_Model.md
msgid "[pinned TLS certificate built into the client app](https://gitlab.com/fdroid/fdroidclient/commit/0429b3f7dd4a6037fa11df64bfdd176ea378e6bf)"
msgstr "[客户端应用内置的固定 TLS 证书](https://gitlab.com/fdroid/fdroidclient/commit/0429b3f7dd4a6037fa11df64bfdd176ea378e6bf)"

#. type: Plain text
#: _docs/Security_Model.md
msgid "In order to defend against an attacker that holds the signing keys for the app repository, there must be a trustworthy source of information to compare against. Reproducible builds means that anyone with the same source code will produce the exact same binary. When paired with an auditing system, it is easy to catch malware inserted in the build process, rather than the source code, like XCodeGhost. Reproducible builds also makes it possible to have all builds of a release binary have the exact same hash. Then any app repository can build apps only from source code, and have a source of verification data from any other app repository building the same app. Building software from source has become cheap enough that many companies like gitlab.com and Travis CI are offering free, automated build services in the cloud. Since the whole F-Droid toolset is free software and designed to be easy to setup, the barriers to setting up automatic auditing are quite low. People in separate areas of the world with different risk profiles can run [verification servers](../Verification_Server) to provide more trustworthy information."
msgstr "为了防御持有应用存储库签名密钥的攻击者，必须有一个值得信赖的信息源进行比较。可重复构建意味着具有相同源代码的任何人都将生成完全相同的二进制文件。与审计系统配合使用时，很容易捕获插入构建过程中而不是源代码的恶意软件，如 XCodeGhost。可重复构建还可以让发布二进制文件的所有构建具有完全相同的哈希值。然后，任何应用存储库都可以只从源代码构建应用，并拥有来自构建相同应用的任何其他应用存储库的验证数据源。从源代码构建软件已经变得足够便宜，以至于 gitlab.com 和 Travis CI 等许多公司都在云中提供免费的自动化构建服务。由于整个 F-Droid 工具集是自由软件并且易于设置，因此设置自动审计的障碍非常低。世界上不同地区具有不同风险状况的人们可以运行[验证服务器](../Verification_Server)以提供更可靠的信息。"

#. type: Plain text
#: _docs/Security_Model.md
msgid "The security model of the [Build Server Setup](../Build_Server_Setup)  and the [Signing Process](../Signing_Process) are documented separately."
msgstr "[构建服务器设置](../Build_Server_Setup) 和 [签名过程](../Signing_Process) 的安全模型分别记录。"

#. type: Title ##
#: _docs/Security_Model.md
#, no-wrap
msgid "App signing"
msgstr "应用签名"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "Apps can be distributed using the [developer's own](../Reproducible_Builds) signatures when the builds are fully reproducible."
msgstr "当构建完全可重复时，可以使用[开发者自己的](../Reproducible_Builds)签名分发应用。"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "By default, the \"publish\" server will generate and manage a signing key for each individual app.  These signing keys are only shared between apps when specifically configured to do so using the [_keyaliases_](https://gitlab.com/fdroid/fdroidserver/-/blob/886394c9a4909/examples/config.yml#L156) mechanism in _config.yml_."
msgstr "默认情况下，“发布”服务器将为每个单独应用生成和管理签名密钥。 要在不同应用间分享签名密钥，必须使用 _config.yml_ 中的 [_keyaliases_](https://gitlab.com/fdroid/fdroidserver/-/blob/886394c9a4909/examples/config.yml#L156)机制进行专门配置。"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "All apps are signed by [the key devoted to that app](https://gitlab.com/fdroid/fdroidserver/-/blob/2.1.2/fdroidserver/publish.py#L420) unless the upstream [specifically](https://gitlab.com/fdroid/fdroiddata/-/merge_requests/10240) requests multiple apps be signed by the same key, and the _fdroiddata_ maintainers approve it."
msgstr "所有应用均由 [专用于该应用的密钥](https://gitlab.com/fdroid/fdroidserver/-/blob/2.1.2/fdroidserver/publish.py#L420) 进行签名，除非上游 [专门](https://gitlab.com/fdroid/fdroiddata/-/merge_requests/10240) 请求多个应用由同一个密钥签名，且须经 _fdroiddata_ 维护者批准。"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "For _f-droid.org_, all app signing is done on a dedicated, air-gapped, offline machine."
msgstr "对 _f-droid.org_，所有的应用签名均在专用的、气隙隔离的离线机器上完成。"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "At any time, the developer's own signatures may be added their app(s) in _f-droid.org_ once reproducible builds have been achieved.  Additionally, releases signed by the _f-droid.org_ key will continue to be shipped."
msgstr "任何时候，一旦实现了可重复构建，就可以将开发者自己的签名添加到开发者发布于 _f-droid.org_ 的应用。另外，由 _f-droid.org_ 密钥签署的版本将继续分发。"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "In the official F-Droid client app, the developer's own signature is the default for fresh installs."
msgstr "在官方 F-Droid 客户端应用中，新安装默认使用开发者自己的签名。"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "We encourage app developers and maintainers to think about whether they want to use a special Application ID for the app when published in _f-droid.org_ to avoid conflicts with other versions.  One common pattern is to add `.fdroid` to the end of the Application ID via a Gradle Build Flavor."
msgstr "我们鼓励应用开发人员和维护人员考虑在 _f-droid.org_ 上进行发布时是否要为应用使用特殊的应用 ID，以避免与其他版本发生冲突。 一种常见的模式是通过 Gradle Build Flavor 将`.fdroid`添加到应用 ID 的末尾。"

#. type: Title ##
#: _docs/Security_Model.md
#, no-wrap
msgid "Initial Installs"
msgstr "初始安装"

#. type: Plain text
#: _docs/Security_Model.md
msgid "Most users of F-Droid download the APK from _f-droid.org_ and install it.  This is a potential vector of attack that built-in app stores do not have.  Therefore, many additional security precautions are taken to make it as hard as possible to exploit this vector."
msgstr "大多数 F-Droid 的用户从 _f-droid.org_ 下载 APK 并安装它。 这是一个内置应用商店没有的潜在攻击载体。 因此，我们采取了许多额外的安全预防措施，以使其尽可能地难以利用这一载体。"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "included on the [HSTS preload list](https://hstspreload.org/?domain=f-droid.org), so major browsers will only ever use HTTPS for all connections to _f-droid.org_"
msgstr "包括在 [HSTS 预加载列表](https://hstspreload.org/?domain=f-droid.org) 中，所以主流的浏览器对到 _f-droid.org_ 的所有连接将只使用 HTTPS"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "a [strong](https://observatory.mozilla.org/analyze/f-droid.org#third-party) TLS/HTTPS configuration"
msgstr "一个 [增强的](https://observatory.mozilla.org/analyze/f-droid.org#third-party) TLS/HTTPS配置"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "DNSSEC signatures on our [domain name](https://dnssec-analyzer.verisignlabs.com/f-droid.org) records"
msgstr "我们[域名](https://dnssec-analyzer.verisignlabs.com/f-droid.org)记录的 DNSSEC 签名"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "DNS Certification Authority Authorization (CAA) [policy](https://www.ssllabs.com/ssltest/analyze.html?d=f%2ddroid.org)"
msgstr "DNS 证书颁发机构授权（CAA）[政策](https://www.ssllabs.com/ssltest/analyze.html?d=f%2ddroid.org)"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "a [strong](https://observatory.mozilla.org/analyze/f-droid.org) HTTP Content Security Policy"
msgstr "一个 [增强 的](https://observatory.mozilla.org/analyze/f-droid.org) HTTP 内容安全策略"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "[PGP-signature]({{ site.fdroid_apk_download_url }}.asc) on the initial install [download link]({{ site.fdroid_apk_download_url }})"
msgstr "初始安装 [下载链接]({{ site.fdroid_apk_download_url }}) 上的 [PGP签名]({{ site.fdroid_apk_download_url }}.asc)"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "automated [regular](https://gitlab.com/fdroid/fdroid-website/-/jobs/47503948)  and [random](https://verification.f-droid.org/check-fdroid-apk)  [auditing](https://gitlab.com/fdroid/fdroidserver/blob/dfbe114af3c4cef15ce3aa5e979d9f4684f2acbc/tests/check-fdroid-apk)  that [F-Droid.apk]({{ site.fdroid_apk_download_url }}) has not been tampered with"
msgstr "自动[常规](https://gitlab.com/fdroid/fdroid-website/-/jobs/47503948)和[随机](https://verification.f-droid.org/check-fdroid-apk)[审计](https://gitlab.com/fdroid/fdroidserver/blob/dfbe114af3c4cef15ce3aa5e979d9f4684f2acbc/tests/check-fdroid-apk)，[F-Droid.apk]({{ site.fdroid_apk_download_url }})没有被篡改过"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "F-Droid Limited controls many potential phishing domains like [fdroid.org](https://whois.icann.org/lookup?name=fdroid.org), [f-droid.com](https://whois.icann.org/lookup?name=f-droid.com), and [f-dro1d.org](https://whois.icann.org/lookup?name=f-dro1d.org). (donations of more are welcome!)"
msgstr "F-Droid Limited 控制着许多潜在的网络钓鱼域名，例如 [fdroid.org](https://whois.icann.org/lookup?name=fdroid.org)、 [f-droid.com](https://whois.icann.org/lookup?name=f-droid.com), 以及 [f-dro1d.org](https://whois.icann.org/lookup?name=f-dro1d.org)。 （欢迎捐赠更多！）"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "website is [statically generated](https://gitlab.com/fdroid/fdroid-website) to greatly reduce the attack surface"
msgstr "网站是 [静态生成](https://gitlab.com/fdroid/fdroid-website)，以大大减少攻击面"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "website is fully functional when JavaScript is disabled in the browser, eliminating all possibility of XSS attacks"
msgstr "当浏览器中的 JavaScript 被禁用时，网站是完全正常的，消除了所有 XSS 攻击的可能性"

#. type: Title ##
#: _docs/Security_Model.md
#, no-wrap
msgid "F-Droid as built-in app store"
msgstr "F-Droid 作为内置应用商店"

#. type: Plain text
#: _docs/Security_Model.md
msgid "When F-Droid is built into Android, either as part of the ROM or by flashing an [OTA update]({{ site.baseurl }}/packages/org.fdroid.fdroid.privileged.ota/), it no longer needs \"Unknown Sources\" enabled to function.  This is the preferred method of operation, so we aim to make it as easy as possible for users to run F-Droid this way.  Flashing the OTA package for F-Droid [Privileged Extension](https://gitlab.com/fdroid/privileged-extension/#how-do-i-install-it-on-my-device)  has the same or lower risk profile as installing the standard \"gapps\" package that many people flash onto custom ROMs. So this delivery method does not increase the risk profile of those users."
msgstr "当 F-Droid 内置到 Android 中时，无论是作为 ROM 的一部分，还是通过刷新 [OTA 更新]({{ site.baseurl }}/packages/org.fdroid.fdroid.privileged.ota/)，它不再需要启用“未知来源”功能。这是首选的操作方法，因此我们的目标是让用户尽可能轻松地以这种方式运行 F-Droid。刷入 F-Droid 的 OTA 包 [特权扩展](https://gitlab.com/fdroid/privileged-extension/#how-do-i-install-it-on-my-device) 具有相同或更低的风险 profile 安装标准的“gapps”包，许多人将其置入到自定义 ROM 上。因此，这种交付方式不会增加这些用户的风险状况。"

#. type: Plain text
#: _docs/Security_Model.md
msgid "On top of this, F-Droid makes it as easy as possible to [build it into](https://gitlab.com/fdroid/privileged-extension/#how-do-i-build-it-into-my-rom)  ROM projects.  It is already included in [CalyxOS](https://calyxos.org/), [Replicant](https://www.replicant.us/), [LineageOS for microG](https://lineage.microg.org/) and [Fairphone Open](https://code.fairphone.com/projects/fp-osos/)."
msgstr "在此基础上，F-Droid 使其尽可能容易地 [构建到](https://gitlab.com/fdroid/privileged-extension/#how-do-i-build-it-into-my-rom) ROM 项目中。 它已经包含在 [CalyxOS](https://calyxos.org/)、[Replicant](https://www.replicant.us/)、[LineageOS for microG](https://lineage.microg.org/) 和 [Fairphone Open](https://code.fairphone.com/projects/fp-osos/)。"

#. type: Title ##
#: _docs/Security_Model.md
#, no-wrap
msgid "Protecting against malicious contributor-generated data"
msgstr "防范恶意贡献者产生的数据"

#. type: Plain text
#: _docs/Security_Model.md
msgid "The app descriptions are submitted by all sorts of people, and they can also be taken from the app's source repository.  This data is ultimately delivered to the Android client or the user's browser via _f-droid.org_."
msgstr "应用描述是由各种各样的人提交的，它们也可以从应用的源代码库中获取。 这些数据最终通过 _f-droid.org_ 交付给 Android 客户端或用户的浏览器。"

#. type: Plain text
#: _docs/Security_Model.md
#, no-wrap
msgid ""
"* the Android client never runs CSS, JavaScript, or dangerous HTML\n"
"tags since it displays HTML via\n"
"[`android.text.Html.fromHtml()`](https://gitlab.com/fdroid/fdroidclient/blob/1.3.1/app/src/main/java/org/fdroid/fdroid/views/AppDetailsRecyclerViewAdapter.java#L441)\n"
"with image loading disabled\n"
"* the _f-droid.org_ website protects against malicious and\n"
"CSS/HTML/JavaScript injection with a\n"
"[strict HTTP Content Security Policy](https://observatory.mozilla.org/analyze/f-droid.org).\n"
"* Repomaker filters the texts through Mozilla's\n"
"[_bleach_](https://github.com/mozilla/bleach) and has a good\n"
"[HTTP Content Security Policy](https://observatory.mozilla.org/analyze.html?host=repomaker.grobox.de).\n"
msgstr ""
"* Android 客户端从不运行 CSS、JavaScript 或危险的 HTML\n"
"标签，因为它通过\n"
"[`android.text.Html.fromHtml()`](https://gitlab.com/fdroid/fdroidclient/blob/1.3.1/app/src/main/java/org/fdroid/fdroid/views/AppDetailsRecyclerViewAdapter.java#L441)\n"
"显示 HTML，并禁用了图像加载\n"
"* _f-droid.org_ 网站通过\n"
"[严格的 HTTP 内容安全政策](https://observatory.mozilla.org/analyze/f-droid.org)\n"
"来防止恶意内容和 CSS/HTML/JavaScript 注入。\n"
"* Repomaker 通过 Mozilla 的 [_bleach_](https://github.com/mozilla/bleach) 过滤文本，\n"
"并且有一个良好的\n"
"[HTTP 内容安全策略](https://observatory.mozilla.org/analyze.html?host=repomaker.grobox.de)。\n"

#. type: Title ##
#: _docs/Security_Model.md
#, no-wrap
msgid "HTTPS/TLS configuration"
msgstr "HTTPS/TLS 配置"

#. type: Plain text
#: _docs/Security_Model.md
#, no-wrap
msgid "F-Droid has a long history of supporting all Android devices that are still running, that means maintaining compatibility as long as possible.  Towards that end, as long as users running current Android versions are not put at risk, old TLS configurations are still supported.  This is why we leave TLSv1.0 and TLSv1.1 enabled on our websites.   We believe there is no added risk for people who keep their software updated. And a device running Android 1.6 should be able to install an old version of F-Droid, and have a working app store.\n"
msgstr "F-Droid 长久以来支持所有仍在运行的 Android 设备，这意味着尽可能长时间地维护兼容性。  为此，只要运行当前 Android 版本的用户不处于风险之下，我们就仍然支持旧的 TLS 配置。  这是我们的网站仍开启 TLSv1.0 和 TLSv1.1 的原因。   我们相信这不会增加更新软件的用户的风险。一台运行 Android 1.6 系统的设备应该可以安装旧版本的 F-Droid，并有一个基本够用的应用商店。\n"

#. type: Plain text
#: _docs/Security_Model.md
msgid "Some security scanners will flag this site because TLSv1.1 and TLSv1.0 are still supported.  More importantly, this site supports TLSv1.3 and TLSv1.2, both of which offer downgrade protections.  On top of that, the latest browsers and F-Droid clients entirely disable TLSv1.1 and TLSv1.0, making it impossible to force those devices to use those vulnerable TLS versions.  So the only connections using old TLS versions actually needs those old versions to function.  If you are on a device that still needs to use TLS 1.0 or 1.1, then there are already so many well known security vulnerabilities that this one is not particularly interesting."
msgstr "某些安全扫描器会标记此网站，因其仍支持 TLSv1.1 和 TLSv1.0。  但更重要的是，此网站同样支持 TLSv1.3 和 TLSv1.2，这两者均提供降级保护。  此外，最新的浏览器和 F-Droid 客户端完全禁用 TLSv1.1 和 TLSv1.0，使得攻击者不可能迫使它们使用有漏洞的 TLS 版本。  因此，这些为数不多使用旧的 TLS 版本的连接实际上需要旧的客户端和浏览器版本才能运作。  还在使用 TLS 1.0 或 1.1 的设备上本就存在许多知名的安全漏洞，旧 TLS 版本相比之下也就算不上什么了。"

#. type: Plain text
#: _docs/Security_Model.md
msgid "If you would like to test whether your browser still supports TLS 1.0 or 1.1, click on the links below and see if they give you an error message."
msgstr "如果你想测试你的浏览器是否仍支持 TLS 1.0 或 1.1，单击下方链接看看是否显示错误信息。"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "<https://tls-v1-0.badssl.com:1010/>"
msgstr "<https://tls-v1-0.badssl.com:1010/>"

#. type: Bullet: '* '
#: _docs/Security_Model.md
msgid "<https://tls-v1-1.badssl.com:1011/>"
msgstr "<https://tls-v1-1.badssl.com:1011/>"

#. type: Title ##
#: _docs/Security_Model.md
#, no-wrap
msgid "Security Audits"
msgstr "安全审计"

#. type: Bullet: '1. '
#: _docs/Security_Model.md
msgid "There was a quick, informal [security audit](https://dev.guardianproject.info/projects/bazaar/wiki/Initial_FDroid_Audit_by_pd0x)  ([_archived_](https://web.archive.org/web/20170317154208/https://dev.guardianproject.info/projects/bazaar/wiki/Initial_FDroid_Audit_by_pd0x))  done in 2013 by then graduate student Daniel McCarney aka _pd0x_."
msgstr "2013年，当时的研究生丹尼尔·麦卡尼（Daniel McCarney）（又名_pd0x_）完成了一个快速、非正式的 [安全审计](https://dev.guardianproject.info/projects/bazaar/wiki/Initial_FDroid_Audit_by_pd0x)（[_archived_](https://web.archive.org/web/20170317154208/https://dev.guardianproject.info/projects/bazaar/wiki/Initial_FDroid_Audit_by_pd0x)）。"

#. type: Bullet: '2. '
#: _docs/Security_Model.md
msgid "The first \"Bazaar\" project funded by [Open Tech Fund](https://opentech.fund) included an [external public audit]({{ site.baseurl }}/2018/01/20/upcoming-security-audit.html)  from [Cure53](https://cure53.de)"
msgstr "第一个由 [开放技术基金](https://opentech.fund) 资助的\"Bazaar\"项目包括来自 [Cure53](https://cure53.de) 的 [外部公共审计]({{ site.baseurl }}/2018/01/20/upcoming-security-audit.html)"

#. type: Bullet: '3. '
#: _docs/Security_Model.md
msgid "The second \"Bazaar 2\" project funded by Open Tech Fund included an [external public audit]({{ site.baseurl }}/2018/09/04/second-security-audit-results.html)  from [Radically Open Security](https://radicallyopensecurity.com/)"
msgstr "由开放技术基金资助的第二个\"Bazaar 2\"项目包括来自 [Radically Open Security](https://radicallyopensecurity.com/)的 [外部公共审计]({{ site.baseurl }}/2018/09/04/second-security-audit-results.html)"

#. type: Bullet: '4. '
#: _docs/Security_Model.md
msgid "The NLnet-funded projects \"Tracking the Trackers\" and \"The Search for Ethical Apps\" provided an [audit]({% post_url 2022-12-22-third-audit-results %}) performed by [Radically Open Security](https://radicallyopensecurity.com/)"
msgstr "The NLnet 资助的项目\"Tracking the Trackers\" 和 \"The Search for Ethical Apps\"提供了由 [Radically Open Security](https://radicallyopensecurity.com/) 执行的 [审计]({% post_url 2022-12-22-third-audit-results %})"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid "Setup an F-Droid App Repo"
msgstr "设置 F-Droid 应用存储库"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "F-Droid.org is the default package repository (repo) in the F-Droid client, but it is not the only possibility. Anyone can create their own repo, and users can control which repos their client is using, including even disabling the default f-droid.org repo. This model is modeled somewhat after the [Debian GNU/Linux](https://www.debian.org)  distro.  Like Debian and Ubuntu, you can also setup your own repos for anyone to use.  Custom repos do not even need to build the APKs, they can just be \"simple binary repos\" of any APKs."
msgstr "F-Droid.org 是 F-Droid 客户端中的默认包存储库（repo），但这不是唯一的可能性。任何人都可以创建自己的存储库，用户可以控制他们的客户端使用的存储库，甚至包括禁用默认的 f-droid.org 存储库。这个模型有点模仿 [Debian GNU/Linux](https://www.debian.org) 发行版。与 Debian 和 Ubuntu 一样，你也可以设置自己的存储库供任何人使用。自定义存储库甚至不需要构建 APK，它们可以是任何 APK 的“简单二进制存储库”。"

#. type: Title ##
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid "Overview"
msgstr "概况"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "If you want to maintain a simple binary repository of APKs and packages obtained elsewhere, the process is quite simple:"
msgstr "如果你想维护一个简单的二进制库，即从其他地方获得的 APK 和软件包，这个过程非常简单:"

#. type: Bullet: '1.  '
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "[Set up the server tools](../Installing_the_Server_and_Repo_Tools)"
msgstr "[设置服务器工具](../Installing_the_Server_and_Repo_Tools)"

#. type: Bullet: '2.  '
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Create a directory called _fdroid_, then run `fdroid init` in that directory to generate the signing key that uniquely identifies your repo."
msgstr "创建一个名为 _fdroid_ 的目录，然后在该目录中运行 `fdroid init`，以生成唯一标识存储库的签名密钥。"

#. type: Bullet: '3.  '
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Optionally edit the _config.yml_ file to your liking, detailed examples are in [examples/config.yml](https://gitlab.com/fdroid/fdroidserver/-/blob/master/examples/config.yml)"
msgstr "可选择编辑 _config.yml_ 文件以满足你的需要，详细例子见 [examples/config.yml](https://gitlab.com/fdroid/fdroidserver/-/blob/master/examples/config.yml)"

#. type: Bullet: '4.  '
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Within _fdroid_, make a directory called _repo_ and put APK files in it."
msgstr "在 _fdroid_ 中，建立一个名为 _repo_ 的目录，并将 APK 文件放入其中。"

#. type: Bullet: '5.  '
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Run `fdroid update`."
msgstr "运行 `fdroid update`。"

#. type: Bullet: '6.  '
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "If it reports that any metadata files are missing, you can create them in the `metadata` directory and run it again."
msgstr "如果它报告缺少任何元数据文件，你可以在 `metadata` 目录中创建它们，然后再次运行它。"

#. type: Bullet: '7.  '
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "To ease creation of metadata files, run `fdroid update` with the `-c` option. It will create 'skeleton' metadata files that are missing, and you can then just edit them and fill in the details."
msgstr "为了简化元数据文件的创建，请使用 `-c` 选项运行 `fdroid update`。它将创建丢失的“骨架”元数据文件，然后你可以编辑它们并填写详细信息。"

#. type: Bullet: '8.  '
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Then, if you've changed things, run `fdroid update` again."
msgstr "然后，如果你更改了内容，请再次运行 `fdroid update`。"

#. type: Bullet: '9.  '
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Running `fdroid update` adds an _icons_ directory into the repo directory, and also creates the repository index files (_index.xml_, _index.jar_, etc) __NOTE: To make this process secure, read [Real World Setup](#real-world-setup) below!__"
msgstr "运行 `fdroid update` 将 _icons_ 目录添加到存储库目录中，并且还会创建存储库索引文件（_index.xml_、_index.jar_ ] 等）__注意：要确保此过程安全，请阅读下面的 [真实世界设置](#real-world-setup)！__"

#. type: Bullet: '0.  '
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Publish the resulting contents of the _repo_ directory to your web server (or set `serverwebroot` in your _config.yml_ then use `fdroid deploy`)"
msgstr "将 _repo_ 目录的结果内容发布到你的 Web 服务器（或在 _config.yml_ 中设置 `serverwebroot`，然后使用 `fdroid deploy`）"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Following the above process will result in a _repo_ directory, which you simply need to push to any HTTP (or preferably HTTPS) server to make it accessible."
msgstr "按照上述过程将产生一个 _repo_ 目录，你只需要把它推送到任何 HTTP（或者最好是 HTTPS）服务器上，使其可以访问。"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "While some information about the applications (and versions thereof)  is retrieved directly from the APK files, most comes from the corresponding file in the _metadata/_ directory. The [metadata file](../Build_Metadata_Reference) covering ALL versions of a particular application is named _package.id.yml_ where package.id is the unique identifier for that package.  All build metadata fields are relevant for binary APKs, except for `Builds:` entries, which should be omitted."
msgstr "虽然有关应用（及其版本）的一些信息是直接从 APK 文件中检索的，但大部分信息来自 _metadata/_ 目录中的相应文件。覆盖特定应用所有版本的 [元数据文件](../Build_Metadata_Reference) 被命名为 _package.id.yml_，其中 package.id 是该包的唯一标识符。所有构建元数据字段都与二进制 APK 相关，但 `Builds:` 条目除外，该条目应被省略。"

#. type: Title ##
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid "Local Demo Repo HOWTO"
msgstr "本地演示存储库 HOWTO"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "This is a full HOWTO to setup your own repository wherever you want to host it. It is somewhat technical, you will use the terminal, but you don't need to be a terminal expert to follow along. First, this HOWTO will walk through setting up a test repo that is not very secure. Then it will walk through setting up a repo for real world use, with the signing key on a separate machine from the public webserver. Before you start, you need to get [the `fdroidserver` tools](../Installing_the_Server_and_Repo_Tools)  and a webserver. For the webserver, this HOWTO will use _nginx_ since its lightweight, but any will do if you already have one running."
msgstr "这是一个完整的 HOWTO，可以在你想要托管它的任何位置设置自己的存储库。这有点技术性，你将使用终端，但你不需要成为终端专家即可跟进。首先，本 HOWTO 将逐步介绍如何设置不太安全的测试存储库。然后，它将逐步完成设置存储库以供实际使用的过程，并将签名密钥放在与公共 Web 服务器不同的计算机上。在开始之前，你需要获取 [` fdroidserver` 工具](../Installing_the_Server_and_Repo_Tools) 和一个 Web 服务器。对于 Web 服务器，此 HOWTO 将使用 _nginx_，因为它的轻量级，但是如果你已经运行了一个，则可以使用。"

#. type: Fenced code block (bash)
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid "sudo apt-get install nginx\n"
msgstr "sudo apt-get install nginx\n"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "In the case of this HOWTO, we're going to setup a \"simple binary repository\" to host a collection of APKs. The repo will be set up in the recommended _fdroid/_ subdirectory. This gives the `fdroid` tool its own directory to work in, and makes the repo URL clearly marked as an F-Droid repo. Also, the F-Droid client will automatically search for a repository at the _/fdroid/repo_ path if the user only enters the server (e.g. \"https://f-droid.org\"). Let's give our normal user control over this subdirectory in the web root so that we don't need to run the F-Droid tools as root (with _nginx_, the webroot is _/usr/share/nginx/www_, it is different for other webservers):"
msgstr "在本 HOWTO 的情况下，我们将设置一个“简单的二进制存储库”来托管一组 APK。存储库将设置在推荐的 _fdroid/_ 子目录中。这为 `fdroid` 工具提供了自己的工作目录，并使存储库 URL 清楚地标记为 F-Droid 存储库。此外，如果用户仅进入服务器（例如“https://f-droid.org”），F-Droid 客户端将自动在 _/fdroid/repo_ 路径中搜索存储库。让我们让普通用户控制 web root 中的这个子目录，这样我们就不需要以 root 身份运行 F-Droid 工具（使用 _nginx_，webroot 是 _/usr/share/ nginx/www_，其他网络服务器不同）："

#. type: Fenced code block (bash)
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid ""
"sudo mkdir /usr/share/nginx/www/fdroid\n"
"sudo chown -R $USER /usr/share/nginx/www/fdroid\n"
"cd /usr/share/nginx/www/fdroid\n"
"fdroid init\n"
msgstr ""
"sudo mkdir /usr/share/nginx/www/fdroid\n"
"sudo chown -R $USER /usr/share/nginx/www/fdroid\n"
"cd /usr/share/nginx/www/fdroid\n"
"fdroid init\n"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Now put your APK files into _/usr/share/nginx/www/fdroid/repo_ and you are ready to run the commands to build the repo (if `fdroid init` cannot find your Android SDK in _/opt/android-sdk_ or `$ANDROID_HOME`, it will prompt you for the path):"
msgstr "现在将你的 APK 文件放入 _/usr/share/nginx/www/fdroid/repo_，你就可以运行命令来构建存储库（如果 `fdroid init` 找不到你的 Android SDK 在 _/opt/android-sdk_ 或 `$ANDROID_HOME`，它会提示你输入路径）："

#. type: Fenced code block (bash)
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid ""
"cd /usr/share/nginx/www/fdroid\n"
"cp /path/to/\\*.apk /usr/share/nginx/www/fdroid/repo/\n"
"fdroid update --create-metadata\n"
msgstr ""
"cd /usr/share/nginx/www/fdroid\n"
"cp /path/to/\\*.apk /usr/share/nginx/www/fdroid/repo/\n"
"fdroid update --create-metadata\n"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Voila! Now you have a working F-Droid Repo! Remember, this is __just a test__ setup, remember to move on to the [Real World Setup](#real-world-setup) after this! Add your new repo to an F-Droid client on your Android device to test it out. That is done in the __Manage Repos__ screen available from the menu. Your repo URL will be the hostname or IP address of your machine with `/fdroid/repo/` added to the end of it, i.e.  `https://mysecureserver.com/fdroid/repo/` or `http://192.168.2.53/fdroid/repo/`. You can temporarily uncheck the official repos to easily see what F-Droid found in your new repo."
msgstr "瞧！现在你有一个可用的 F-Droid 存储库！请记住，这是__只是一个测试__设置，记住在此之后继续进行[真实世界设置](#real-world-setup)！将你的新存储库添加到 Android 设备上的 F-Droid 客户端以进行测试。这是在菜单中可用的 __Manage Repos__ 屏幕中完成的。你的存储库 URL 将是你机器的主机名或 IP 地址，并在其末尾添加 `/fdroid/repo/`，即 `https://mysecureserver.com/fdroid/repo/` ] 或 `http://192.168.2.53/fdroid/repo/`。你可以暂时取消选中官方存储库，以便轻松查看 F-Droid 在你的新存储库中找到的内容。"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "While you can serve the repository at an arbitrary URL, it is customary to make it available at an URL ending with `/fdroid/repo/`.  A good reason to actually do this is that the F-Droid client sets up an intent filter and registers itself for such URLs. As a result, a user that has the F-Droid app installed and opens such a well-formed URL will have their device open F-Droid and guide them directly to adding the repository to it."
msgstr "虽然你可以在任意 URL 上提供存储库，但习惯上使其在以 `/fdroid/repo/` 结尾的 URL 上可用。真正这样做的一个很好的理由是 F-Droid 客户端设置了一个意图过滤器并为这些 URL 注册自己。因此，安装了 F-Droid 应用并打开这样一个格式良好的 URL 的用户将使他们的设备打开 F-Droid 并引导他们直接向其中添加存储库。"

#. type: Title ###
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid "Customization"
msgstr "定制化"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "You can also customize your repo by editing the config file. Be sure to use a programming text editor, like `editor /usr/share/nginx/www/fdroid/config.yml`. In the config file, you can set the name of the repo, the description, the icon, paths to specific versions of the build tools, links to a related wiki, and whether to keep stats. Here's the basic repo description block:"
msgstr "你还可以通过编辑配置文件来自定义你的存储库。请务必使用编程文本编辑器，例如 `editor /usr/share/nginx/www/fdroid/config.yml`。在配置文件中，你可以设置存储库的名称、描述、图标、特定版本构建工具的路径、相关 wiki 的链接以及是否保留统计信息。这是基本的存储库描述块："

#. type: Fenced code block (yaml)
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid ""
"repo_url = \"http://guardianproject.info/fdroid/repo\"\n"
"repo_name = \"My Local Repo\"\n"
"repo_icon = \"GP_Logo_hires.png\"\n"
"repo_description = \"\"\"\n"
"A local test repository of Hans-Christoph Steiner <hans@guardianproject.info>.\n"
"It is a repository of Guardian Project apps. \"\"\"\n"
msgstr ""
"repo_url = \"http://guardianproject.info/fdroid/repo\"\n"
"repo_name = \"My Local Repo\"\n"
"repo_icon = \"GP_Logo_hires.png\"\n"
"repo_description = \"\"\"\n"
"A local test repository of Hans-Christoph Steiner <hans@guardianproject.info>.\n"
"It is a repository of Guardian Project apps. \"\"\"\n"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "To put your icon into your repo, choose a PNG image to put in your repo.  The PNG goes in `/usr/share/nginx/www/fdroid/`, the file can be named whatever you want (by default its `fdroid-icon.png`). If you change the name from the default, be sure to update `repo_icon` and `archive_icon` in `/usr/share/nginx/www/fdroid/config.yml`."
msgstr "要将你的图标放入你的存储库，请选择一个 PNG 图像放入你的存储库。 PNG 进入 `/usr/share/nginx/www/fdroid/`，该文件可以任意命名（默认为 `fdroid-icon.png`）。如果更改默认名称，请务必更新 `/usr/share/nginx/www/fdroid/config.yml` 中的 `repo_icon` 和 `archive_icon`。"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "A final note about security: this setup is not a good setup for a real public repo, instead it is a quick and easy way to test out F-Droid. At the very least, when generating the repo in place, make sure that _config.yml_ is not accessible via the web, since it contains passwords. If the file permissions are correct (e.g.  `chmod 0600 config.yml`), then _config.yml_ will not be readable by the webserver."
msgstr "关于安全性的最后一点说明：对于真正的公共存储库来说，此设置不是一个好的设置，而是一种快速简便的方法来测试 F-Droid。至少，在就地生成存储库时，请确保无法通过 Web 访问 _config.yml_，因为它包含密码。如果文件权限正确（例如 `chmod 0600 config.yml`），则 _config.yml_ 将无法被 Web 服务器读取。"

#. type: Title ###
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid "App Metadata"
msgstr "应用元数据"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "You can control lots of aspects of how an app is represented in your repo by editing the app's metadata. Running `fdroid update --create-metadata` creates stub files for you, in order to have a working repo. Then you can edit those files to add a description, donation links, bug tracker, license, home page, etc. See the [Build Metadata Reference](../Build_Metadata_Reference) for more info on what all the options are."
msgstr "你可以通过编辑应用的元数据来控制应用在你的存储库中的表示方式的许多方面。运行 `fdroid update --create-metadata` 会为你创建存根文件，以便拥有一个有效的存储库。然后你可以编辑这些文件以添加描述、捐赠链接、错误跟踪器、许可证、主页等。有关所有选项的详细信息，请参阅 [构建元数据参考](../Build_Metadata_Reference)。"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "_CurrentVersionCode_ provides a handy way to deploy beta releases in the same stream as your full releases. You can set _CurrentVersionCode_ to your current stable release, then add APKs to your repo. Users will only be updated automatically to the version code you specify. Any APKs for a given app in your repo that have a newer version code will not be automatically installed. Instead, the user can see them in the app detail view in the client, and can manually install them."
msgstr "_CurrentVersionCode_ 提供了一种在与完整版本相同的流中部署 Beta 版本的便捷方式。你可以将 _CurrentVersionCode_ 设置为你当前的稳定版本，然后将 APK 添加到你的存储库中。用户只会自动更新到你指定的版本代码。将不会自动安装存储库中具有较新版本代码的给定应用的任何 APK。相反，用户可以在客户端的应用详细信息视图中看到它们，并且可以手动安装它们。"

#. type: Title ##
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid "Real World Setup"
msgstr "真实世界设置"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Now that you have a working repo, it is straightforward to create a real world setup. Generating a repo in place like we did above is very easy, that is why this HOWTO started there, but it is not as secure as it should be if your repo is going to be your main distribution point. For example, the repo signing keys should not ever be on a public server."
msgstr "现在，你已经有了一个有效的存储库，可以直接创建一个真实的设置。像我们上面所做的那样，在适当的位置生成存储库非常容易，这就是为什么这个 HOWTO 从那里开始，但是如果你的存储库将成为你的主要分发点，它并不像它应该的那样安全。例如，存储库签名密钥不应位于公用服务器上。"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "To improve this situation, generate the repo on a non-public machine like your laptop, keeping _config.yml_ and the keystore only on that machine (remember to make backups!). Then use `fdroid deploy` to publish the changes to your repo on a separate server via ssh. So start a new repo from scratch on your non-public machine:"
msgstr "要改善这种情况，请在非公共计算机（如笔记本电脑）上生成存储库，仅将 _config.yml_ 和密钥库保留在该计算机上（请记住进行备份！然后使用 `fdroid deploy` 通过 ssh 将更改发布到单独服务器上的存储库。因此，在非公共计算机上从头开始新的存储库："

#. type: Fenced code block (bash)
#: _docs/Setup_an_F-Droid_App_Repo.md
#, no-wrap
msgid ""
"mkdir ~/fdroid\n"
"cd ~/fdroid\n"
"fdroid init\n"
"cp /path/to/\\*.apk ~/fdroid/repo/\n"
"fdroid update --create-metadata\n"
"emacs config.yml # add the serverwebroot, etc.\n"
"fdroid deploy -v\n"
msgstr ""
"mkdir ~/fdroid\n"
"cd ~/fdroid\n"
"fdroid init\n"
"cp /path/to/\\*.apk ~/fdroid/repo/\n"
"fdroid update --create-metadata\n"
"emacs config.yml # add the serverwebroot, etc.\n"
"fdroid deploy -v\n"

#. type: Plain text
#: _docs/Setup_an_F-Droid_App_Repo.md
msgid "Now edit _config.yml_ to set `serverwebroot`, it is in the form of a standard SCP file destination. Then `fdroid deploy` will do the publishing via rsync over ssh. So both computers will have to have ssh and rsync installed and setup. You can also use your own existing signing key rather than the one generated by `fdroid init`, just edit `repo_keyalias`, `keystore`, `keystorepass`, `keypass`, and `keydname` in _~/fdroid/config.yml_."
msgstr "现在编辑 _config.yml_ 设置 `serverwebroot`，它是标准 SCP 文件目的地的形式。然后 `fdroid deploy` 将通过 ssh 上的 rsync 进行发布。因此，两台计算机都必须安装和设置 ssh 和 rsync。你也可以使用自己现有的签名密钥而不是 `fdroid init` 生成的密钥，只需编辑 `repo_keyalias`、`keystore`、`keystorepass`， `keypass` 和 `keydname` 在 _~/fdroid/config.yml_。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Signing_Process.md
#, no-wrap
msgid "Signing Process"
msgstr "签名流程"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "Cryptographic signatures using public/private key parts are central to [how F-Droid](../Security_Model) provides secure app distribution. Signing keys are required to make your own releases with the F-Droid tools.  Consider the location, security and backup status of your key files carefully.  The keys need to remain secure for the entire lifetime of an F-Droid repo, or an Android app.  The signing key is central the identity of an Android app and an F-Droid repo, so those keys must be kept safe, secure and well backed up! Also, take note that Google's directions for [securing these private keys](https://developer.android.com/studio/publish/app-signing.html#secure-key)  provides only the minimal steps to take to safeguard the keys."
msgstr "使用公钥/私钥部分的加密签名是 [F-Droid](../Security_Model) 如何提供安全应用分发的核心。使用 F-Droid 工具制作你自己的版本需要签名密钥。仔细考虑关键文件的位置、安全性和备份状态。密钥需要在 F-Droid 存储库或 Android 应用的整个生命周期内保持安全。签名密钥是 Android 应用和 F-Droid 存储库身份的核心，因此必须妥善保管这些密钥并妥善备份！另外，请注意，Google 的[保护这些私钥](https://developer.android.com/studio/publish/app-signing.html#secure-key) 的说明仅提供了保护密钥所需的最少步骤."

#. type: Plain text
#: _docs/Signing_Process.md
msgid "There are two kinds of signing involved in running a repository:"
msgstr "运行存储库涉及两种类型的签名："

#. type: Bullet: '-   '
#: _docs/Signing_Process.md
msgid "the signing of the repo index itself"
msgstr "存储库索引自身的签名"

#. type: Bullet: '-   '
#: _docs/Signing_Process.md
msgid "the standard Android APK signing process"
msgstr "标准的 Android APK 签名流程"

#. type: Title ###
#: _docs/Signing_Process.md
#, no-wrap
msgid "Repo Index Signing"
msgstr "存储库索引签名"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "When setting up the repository, one of the first steps should be to generate a signing key for the repository index. This will also create a keystore, which is the file that holds the signing keys."
msgstr "设置存储库时，第一步应该是为存储库索引生成签名密钥。这还将创建一个密钥库，它是保存签名密钥的文件。"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "`fdroid init` will automatically create a new signing key for an F-Droid repo.  It is possible to manually create keys just like creating [Android signing keys](https://developer.android.com/studio/publish/app-signing.html#signing-manually), with a command like:"
msgstr "`fdroid init` 将自动为 F-Droid 存储库创建一个新的签名密钥。可以像创建 [Android 签名密钥](https://developer.android.com/studio/publish/app-signing.html#signing-manually) 一样手动创建密钥，使用如下命令："

#. type: Fenced code block (bash)
#: _docs/Signing_Process.md
#, no-wrap
msgid ""
"keytool -genkey -v -keystore my.keystore -alias repokey \\\n"
"  -keyalg RSA -keysize 2048 -validity 10000\n"
msgstr ""
"keytool -genkey -v -keystore my.keystore -alias repokey \\\n"
"  -keyalg RSA -keysize 2048 -validity 10000\n"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "In the above, replace _my.keystore_ with the name of the keystore file to be created, and 'repokey' with a name to identify the repo index key by.  You'll be asked for a password for the keystore, AND a password for the key. They shouldn't be the same. In between, you'll be asked for some identifying details which will go in the certificate."
msgstr "在上面，将 _my.keystore_ 替换为要创建的 keystore 文件的名称，并将 “repokey” 替换为识别存储库索引密钥的名称。 你会被要求提供 keystore 的密码和钥匙的密码。它们不应该是相同的。在这两者之间，你会被要求提供一些识别细节，这些细节将被写入证书。"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "The two passwords entered go into _config.yml_, as `keystorepass` and `keypass` respectively. The path to the keystore file is set in `keystore`, and the alias you chose for the key also go into that file is called `repo_keyalias`."
msgstr "输入的两个密码分别作为 `keystorepass` 和 `keypass` 进入 _conconfig.yml_。密钥库文件的路径在 `密钥库 ` 中设置，你为密钥选择的别名也进入该文件，称为 `repo_keyalias`。"

#. type: Title ###
#: _docs/Signing_Process.md
#, no-wrap
msgid "APK Signing"
msgstr "APK 签名"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "The F-Droid tools can automatic generate and manage APK signing keys for each app that it maintains.  With the repo index signing configured, all that remains to be done for package signing to work is to set the _keydname_ field in _config.yml_ to contain the same identifying details you entered before.  A new key will be generated using these details, for each application that is built. If a specific key is required for a particular application, this system can be overridden using the _keyaliases_ config settings."
msgstr "F-Droid 工具可以为其维护的每个应用自动生成和管理 APK 签名密钥。 配置存储库索引签名后，包签名工作所要做的就是将 _config.yml_ 中的 _keydname_ 字段设置为包含你之前输入的相同标识详细信息。 将使用这些详细信息为生成的每个应用生成一个新密钥。如果特定应用需要特定密钥，则可以使用 _keyaliases_ 配置设置覆盖此系统。"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "To set up `fdroid publish`, do these steps on the same machine where you copy APKs to and run `fdroid update`.  First, set _keydname_ in _config.yml_, it should be something like this:"
msgstr "要设置 `fdroid publish`，请在将 APK 复制到并运行 `fdroid update` 的同一台机器上执行这些步骤。首先，在 _config.yml_ 中设置 _keydname_，应该是这样的："

#. type: Fenced code block (python)
#: _docs/Signing_Process.md
#, no-wrap
msgid "keydname = \"CN=example.com, O=Example Ltd, C=UK\"\n"
msgstr "keydname = \"CN=example.com, O=Example Ltd, C=UK\"\n"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "Create a dir called _unsigned/_ next to the _metadata/_ and _repo/_ dirs, and run these commands to move the APK into place with a new name based on _Application ID_ and _Version Code_:"
msgstr "在 _metadata/_ 和 _repo/_ 目录旁边创建一个名为 _unsigned/_ 的目录，然后运行这些命令以基于_Application ID_ 和 _Version Code_："

#. type: Fenced code block (console)
#: _docs/Signing_Process.md
#, no-wrap
msgid ""
"$ cd /path/to/repobasedir\n"
"$ touch metadata/com.example.app.yml\n"
"$ mkdir unsigned\n"
"$ cp /path/to/app-release-unsigned.apk unsigned/com.example.app_1234.apk\n"
"$ fdroid publish --verbose\n"
"$ fdroid update --verbose\n"
"$ fdroid deploy --verbose\n"
msgstr ""
"$ cd /path/to/repobasedir\n"
"$ touch metadata/com.example.app.yml\n"
"$ mkdir unsigned\n"
"$ cp /path/to/app-release-unsigned.apk unsigned/com.example.app_1234.apk\n"
"$ fdroid publish --verbose\n"
"$ fdroid update --verbose\n"
"$ fdroid deploy --verbose\n"

#. type: Title ###
#: _docs/Signing_Process.md
#, no-wrap
msgid "Package Signing"
msgstr "包签名"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "All packages built and/or distributed using F-Droid tools can also be signed by PGP using [GnuPG](https://gnupg.org), anything from APKs to media files will be signed.  This process is run with `fdroid gpgsign`.  Add `gpghome` and `gpgkey` to your _config.yml_ to configure it, there is more information in _examples/config.yml_."
msgstr "使用 F-Droid 工具构建和/或分发的所有包也可以由 PGP 使用 [GnuPG](https://gnupg.org) 签名，从 APK 到媒体文件的任何内容都将被签名。此过程使用 `fdroid gpgsign` 运行。将 `gpghome` 和 `gpgkey` 添加到你的 _config.yml_ 中进行配置，_examples/config.yml_ 中有更多信息."

#. type: Title ###
#: _docs/Signing_Process.md
#, no-wrap
msgid "Hardware Security Modules"
msgstr "硬件安全模块"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "Hardware Security Modules (HSMs) are specially designed pieces of hardware for securely storing and using cryptographic keys.  They provide write-only storage, so that a private key can only be written to the HSM and never read off of it.  _fdroidserver_ has support for using HSMs for repo signing keys."
msgstr "硬件安全模块 （HSM） 是专门设计的硬件，用于安全地存储和使用加密密钥。 它们提供只写存储，因此私钥只能写入 HSM，而不能读出它。 _fdroidserver_ 支持使用 HSM 进行存储库签名密钥。"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "For information on how to configure an F-Droid repo to use an HSM, see the \"smartcard\" sections of _examples/config.yml_, specifically `keystore` and `smartcardoptions`.  Most likely, [OpenSC](https://github.com/OpenSC/OpenSC) will need to be set up as a PKCS11 provider for Java.  [_hsmwiz_](https://github.com/johndoe31415/hsmwiz) is a simpler way to work with smart card HSMs like the Nitrokey HSM.  Both OpenSC and _hsmwiz_ are available in Debian."
msgstr "有关如何配置 F-Droid 存储库以使用 HSM 的信息，请参阅 _examples/config.yml_ 的\"智能卡\"部分，特别是 `密钥库` 和 `智能卡选项 `。 最有可能的是， [OpenSC](https://github.com/OpenSC/OpenSC) 需要设置为 Java 的 PKCS11 提供程序。 [_hsmwiz_](https://github.com/johndoe31415/hsmwiz)是一种使用智能卡 HSM（如 Nitrokey HSM）的更简单方法。OpenSC 和_hsmwiz_ 都可以在 Debian 中使用。"

#. type: Plain text
#: _docs/Signing_Process.md
msgid "For more in-depth information, see:"
msgstr "更深入的信息，请参阅："

#. type: Bullet: '* '
#: _docs/Signing_Process.md
msgid "_fdroidserver_ example config file: [examples/config.yml](https://gitlab.com/fdroid/fdroidserver/-/blob/2.1a0/examples/config.yml#L125)"
msgstr "_fdroidserver_ 示例配置文件: [examples/config.yml](https://gitlab.com/fdroid/fdroidserver/-/blob/2.1a0/examples/config.yml#L125)"

#. type: Bullet: '* '
#: _docs/Signing_Process.md
msgid "[Publishing an F-Droid Repo using a Hardware Security Module]({% post_url 2020-10-05-ntrokey-signing %})"
msgstr "[使用硬件安全模块发布 F-Droid 存储库]({% post_url 2020-10-05-ntrokey-signing %})"

#. type: Bullet: '* '
#: _docs/Signing_Process.md
msgid "[Security in a thumb drive: the promise and pain of hardware security modules, take one!](https://guardianproject.info/2014/03/28/security-in-a-thumb-drive-the-promise-and-pain-of-hardware-security-modules-take-one/)"
msgstr "[拇指驱动器中的安全性：硬件安全模块的承诺和痛苦，挑一个！](https://guardianproject.info/2014/03/28/security-in-a-thumb-drive-the-promise-and-pain-of-hardware-security-modules-take-one/)"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
#, no-wrap
msgid "Submitting to F-Droid Quick Start Guide"
msgstr "提交到 F-Droid 快速入门指南"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Doing this is apparently the best way to get your own package into the repository, since you can provide a direct merge request for the metadata about your package, making it easy for the maintainers."
msgstr "这样做显然是将自己的包放入存储库的最佳方法，因为你可以为有关包的元数据提供直接合并请求，从而使维护人员轻松。"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "To understand the overview of the process, read the *Proposal by Metadata Merge Request* section of the [Inclusion How-To](../Inclusion_How-To/)."
msgstr "要理解这一过程的概况，请阅读[收录指南](../Inclusion_How-To/)的*元数据合并请求提案*部分。"

#. type: Title ##
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
#, no-wrap
msgid "First steps"
msgstr "第一步"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "In the source of the application you want to include, find all the _AndroidManifest.xml_ and _build.gradle_ files, and write down in which subdir the most detailed of them happen to be."
msgstr "在你想被收录的应用的源代码中，找到所有的 _AndroidManifest.xml_ 和 _build.gradle_文件，并写下它们之中最详细文件所在的子目录。"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Register on [GitLab](https://gitlab.com/) and fork the [fdroiddata](https://gitlab.com/fdroid/fdroiddata) repository."
msgstr "在 [GitLab](https://gitlab.com/) 上注册，并 fork [fdroiddata](https://gitlab.com/fdroid/fdroiddata) 代码库。"

#. type: Title ##
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
#, no-wrap
msgid "Upstream metadata"
msgstr "上游元数据"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Each official release commit in the application's upstream Git repository should have a tag. For example, if its AndroidManifest contains `versionName: '1.0'`, the commit needs a `v1.0` tag. It is strongly encouraged to add metadata in the application's source repo, too:"
msgstr "应用的上游 Git 存储库中的每个官方 release 提交都应该有一个标签。比如，如果应用的 AndroidManifest 包含 `versionName: '1.0`，则该提交需要一个 `v1.0`标签。我们强烈鼓励在应用的源码库中也添加元数据："

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "_metadata/en-US/short_description.txt_ (30-50 chars, no trailing dot)"
msgstr "_metadata/en-US/short_description.txt_ (30-50 个字符, 无拖尾点)"

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "_metadata/en-US/full_description.txt_"
msgstr "_metadata/en-US/full_description.txt_"

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "_metadata/en-US/images/icon.png_"
msgstr "_metadata/en-US/images/icon.png_"

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "_metadata/en-US/images/phoneScreenshots/screenshot.png_"
msgstr "_metadata/en-US/images/phoneScreenshots/screenshot.png_"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "If the AndroidManifest contains `versionCode: 123`, there should be a corresponding explanation of what's new in this version:"
msgstr "如 AndroidManifest 包含 `versionCode: 123`, 对于这个版本中的新变化应该有相应的解释："

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "_metadata/en-US/changelogs/123.txt_ (max 500 characters)"
msgstr "_metadata/en-US/changelogs/123.txt_ (最多 500 个字符)"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Browse the [F-Droid client metadata](https://gitlab.com/fdroid/fdroidclient/-/tree/master/metadata/en-US)  directory to see a real-world example."
msgstr "浏览 [F-Droid 客户端元数据](https://gitlab.com/fdroid/fdroidclient/-/tree/master/metadata/en-US)  目录查看真实世界样例。"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Other formats and locations of the [description, graphics, and screenshots](../All_About_Descriptions_Graphics_and_Screenshots/) are supported, too. For example, the _metadata/en-US_ directory can instead be _fastlane/metadata/android/en-US_."
msgstr "也支持其他格式和位置的 [描述、图像和截屏](../All_About_Descriptions_Graphics_and_Screenshots/)。比如，_metadata/en-US_目录可以是 _fastlane/metadata/android/en-US_。"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Send the application's development team a merge request if the repository doesn't have those files, and open an issue if it has no version tags. Having this metadata in place lets it be under direct control of the developer, and their updates and future translations will be pulled automatically."
msgstr "如果存储库没有这些文件，则向应用的开发团队发送合并请求，如果没有版本标记，则新开一个问题。有了这些元数据，开发人员就可以直接控制它，它们的更新和未来的翻译将被自动拉取。"

#. type: Title ##
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
#, no-wrap
msgid "Build environment"
msgstr "构建环境"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "On a laptop with Ubuntu 21.10 in February 2022, it took 2 GB of traffic and 5 GB of disk space to set up an F-Droid build environment."
msgstr "2022 年 2 月，在装有 Ubuntu 21.10 系统的笔记本上，需要 2GB 流量和 5GB 磁盘空间来建立一个 F-Droid 构建环境。"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Network requirements:"
msgstr "网络要求："

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "60 MB: shallow-clone _fdroiddata_ and _fdroidserver_"
msgstr "60 MB: 浅克隆 _fdroiddata_ 和 _fdroidserver_"

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "75 MB: install _docker.io_"
msgstr "75 MB：安装 _docker.io_"

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "1000 MB: load the container"
msgstr "1000 MB：加载容器"

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "800 MB: build"
msgstr "800 MB: 构建"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Storage requirements:"
msgstr "存储要求："

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "1000 MB: clone the repos and install _docker.io_"
msgstr "1000 MB: 克隆代码库并安装 _docker.io_"

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "4000 MB: load the container and build"
msgstr "4000 MB: 加载容器和构建"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Download your fork, then create a new branch and a metadata file. For example, if the application's _build.gradle_ says `applicationId \"com.example\"`:"
msgstr "下载你的 fork，接着建立新分支和一个元数据文件。比如，如果应用的 _build.gradle_ 说 `applicationId \"com.example\"`："

#. type: Fenced code block (sh)
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
#, no-wrap
msgid ""
"git clone --depth=1 https://gitlab.com/YOUR_ACCOUNT/fdroiddata ~/fdroiddata\n"
"cd ~/fdroiddata\n"
"git checkout -b com.example\n"
"cp templates/build-gradle.yml metadata/com.example.yml\n"
msgstr ""
"git clone --depth=1 https://gitlab.com/YOUR_ACCOUNT/fdroiddata ~/fdroiddata\n"
"cd ~/fdroiddata\n"
"git checkout -b com.example\n"
"cp templates/build-gradle.yml metadata/com.example.yml\n"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Fill _~/fdroiddata/metadata/com.example.yml_ according to the [build metadata reference](../Build_Metadata_Reference/). If you have convinced the application's development team to include the descriptions and use version tags in their repository as explained above, the file will be very concise:"
msgstr "填写 _~/fdroiddata/metadata/com.example.yml_，依据是 [构建元数据参考](../Build_Metadata_Reference/)。如果你已经说服了应用的开发团队像上面解释的那样在存储库中包括描述和使用版本标签，这个文件将非常简洁："

#. type: Fenced code block (yaml)
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
#, no-wrap
msgid ""
"Categories:\n"
"  - Internet\n"
"  - Navigation\n"
"License: GPL-3.0-or-later\n"
"SourceCode: https://gitlab.com/APPLICATION_UPSTREAM/ExampleCom\n"
"\n"
"RepoType: git\n"
"Repo: https://gitlab.com/APPLICATION_UPSTREAM/ExampleCom\n"
"\n"
"Builds:\n"
"  - versionName: '1.0'\n"
"    versionCode: 123\n"
"    commit: v1.0\n"
"    # Where build.gradle is:\n"
"    subdir: app\n"
"    sudo:\n"
"      - apt-get update\n"
"      - apt-get install -y librsvg2-bin openjdk-17-jdk-headless\n"
"      - update-alternatives --auto java\n"
"    gradle:\n"
"      - yes\n"
"\n"
"AutoUpdateMode: Version\n"
"UpdateCheckMode: Tags\n"
"CurrentVersion: '1.0'\n"
"CurrentVersionCode: 123\n"
msgstr ""
"Categories:\n"
"  - Internet\n"
"  - Navigation\n"
"License: GPL-3.0-or-later\n"
"SourceCode: https://gitlab.com/APPLICATION_UPSTREAM/ExampleCom\n"
"\n"
"RepoType: git\n"
"Repo: https://gitlab.com/APPLICATION_UPSTREAM/ExampleCom\n"
"\n"
"Builds:\n"
"  - versionName: '1.0'\n"
"    versionCode: 123\n"
"    commit: v1.0\n"
"    # Where build.gradle is:\n"
"    subdir: app\n"
"    sudo:\n"
"      - apt-get update\n"
"      - apt-get install -y librsvg2-bin openjdk-17-jdk-headless\n"
"      - update-alternatives --auto java\n"
"    gradle:\n"
"      - yes\n"
"\n"
"AutoUpdateMode: Version\n"
"UpdateCheckMode: Tags\n"
"CurrentVersion: '1.0'\n"
"CurrentVersionCode: 123\n"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Adjust or remove the relevant _sudo_ lines if needed:"
msgstr "如有需要，调整或删除相关的 _sudo_ 行："

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "The example application's _build.gradle_ executes _rsvg-convert_ to rasterize its vector icons, so we install _librsvg2-bin_ from the official Debian repositories. All such dependencies should be specified in the app's _README_."
msgstr "示例应用的 _build.gradle_ 执行 _rsvg-convert_ 来栅格化它的矢量图标，因此我们从官方 Debian 存储库安装 _librsvg2-bin_。所有这样的依赖项应该在应用的 _README_ 中明确。"

#. type: Bullet: '* '
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "`gradle/wrapper/gradle-wrapper.properties` mentions `gradle-8.0`, and Gradle 8 is known to depend on Java 17. So we install _openjdk-17-jdk-headless_ and select it as the _java_ alternative."
msgstr "`gradle/wrapper/gradle-wrapper.properties` 提到了 `gradle-8.0`, 而 Gradle 8 已知依赖于 Java 17。我们因而安装 _openjdk-17-jdk-headless_ 并选择它为 _java_ 备选。"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Download and launch the latest version of the server tools container:"
msgstr "下载并启动最新版本的服务器工具容器："

#. type: Fenced code block (sh)
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
#, no-wrap
msgid ""
"git clone --depth=1 https://gitlab.com/fdroid/fdroidserver ~/fdroidserver\n"
"sudo sh -c 'apt-get update &&apt-get install -y docker.io'\n"
"sudo docker run --rm -itu vagrant --entrypoint /bin/bash \\\n"
"  -v ~/fdroiddata:/build:z \\\n"
"  -v ~/fdroidserver:/home/vagrant/fdroidserver:Z \\\n"
"  registry.gitlab.com/fdroid/fdroidserver:buildserver\n"
msgstr ""
"git clone --depth=1 https://gitlab.com/fdroid/fdroidserver ~/fdroidserver\n"
"sudo sh -c 'apt-get update &&apt-get install -y docker.io'\n"
"sudo docker run --rm -itu vagrant --entrypoint /bin/bash \\\n"
"  -v ~/fdroiddata:/build:z \\\n"
"  -v ~/fdroidserver:/home/vagrant/fdroidserver:Z \\\n"
"  registry.gitlab.com/fdroid/fdroidserver:buildserver\n"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "In the container:"
msgstr "在容器中："

#. type: Fenced code block (sh)
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
#, no-wrap
msgid ""
". /etc/profile\n"
"export PATH=\"$fdroidserver:$PATH\" PYTHONPATH=\"$fdroidserver\"\n"
"export JAVA_HOME=$(java -XshowSettings:properties -version 2>&1 > /dev/null | grep 'java.home' | awk -F'=' '{print $2}' | tr -d ' ')\n"
"cd /build\n"
"fdroid readmeta\n"
"fdroid rewritemeta com.example\n"
"fdroid checkupdates --allow-dirty com.example\n"
"fdroid lint com.example\n"
"fdroid build com.example\n"
msgstr ""
". /etc/profile\n"
"export PATH=\"$fdroidserver:$PATH\" PYTHONPATH=\"$fdroidserver\"\n"
"export JAVA_HOME=$(java -XshowSettings:properties -version 2>&1 > /dev/null | grep 'java.home' | awk -F'=' '{print $2}' | tr -d ' ')\n"
"cd /build\n"
"fdroid readmeta\n"
"fdroid rewritemeta com.example\n"
"fdroid checkupdates --allow-dirty com.example\n"
"fdroid lint com.example\n"
"fdroid build com.example\n"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "If any command, such as `fdroid readmeta`, returns an error, edit _~/fdroiddata/metadata/com.example.yml_ accordingly and try running the command again. After a successful build, exit the container, commit your metadata file with a `New App` label, and push it to your fork:"
msgstr "如任何命令，比如 `fdroid readmeta`，返回一个错误，相应编辑 _~/fdroiddata/metadata/com.example.yml_ 并尝试再次运行命令。在成功的构建后，退出容器，使用 `New App` 标签提交元数据文件，并将它推送到你的 fork："

#. type: Fenced code block (sh)
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
#, no-wrap
msgid ""
"exit\n"
"cd ~/fdroiddata\n"
"git add metadata/com.example.yml\n"
"git commit -m \"New App: com.example\"\n"
"git push origin com.example\n"
msgstr ""
"exit\n"
"cd ~/fdroiddata\n"
"git add metadata/com.example.yml\n"
"git commit -m \"New App: com.example\"\n"
"git push origin com.example\n"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "Create a [merge request](https://gitlab.com/fdroid/fdroiddata/-/merge_requests)  at the fdroiddata repository, selecting your _com.example_ source branch. Wait for the packagers to pick up your merge request. Please keep track if they asked any questions and reply to them as soon as possible."
msgstr "在 fdroiddata 存储库创建一个 [合并请求](https://gitlab.com/fdroid/fdroiddata/-/merge_requests)，选中你的 _com.example_ 源码分支。等待打包人员接收你的合并请求。如果他们有任何问题，请跟踪，并尽快回复。"

#. type: Plain text
#: _docs/Submitting_to_F-Droid_Quick_Start_Guide.md
msgid "You can [get help with F-Droid](../../about/#contact) via IRC, Matrix, XMPP, e-mail and some other channels."
msgstr "你可以通过 IRC、Matrix、XMPP、电子邮件和其他渠道 [获取 F-Droid 的帮助](../../about/#contact)。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Take-Down_Requests.md
#, no-wrap
msgid "Take-Down Requests"
msgstr "下架请求"

#. type: Plain text
#: _docs/Take-Down_Requests.md
#, no-wrap
msgid ""
"<!--\n"
"  this is very loosely inspired by:\n"
"    * https://docs.github.com/en/github/site-policy/submitting-content-removal-requests\n"
"-->\n"
msgstr ""
"<!--\n"
"  略受下列内容的启发:\n"
"    * https://docs.github.com/en/github/site-policy/submitting-content-removal-requests\n"
"-->\n"

#. type: Title ##
#: _docs/Take-Down_Requests.md
#, no-wrap
msgid "Introduction"
msgstr "介绍"

#. type: Plain text
#: _docs/Take-Down_Requests.md
msgid "This document covers how you may send a request to remove content or apps from the official f-droid.org repository.  Our team checks all app submissions we receive for compliance with our [inclusion policy](../Inclusion_Policy) to the best of their abilities.  Please let us know if an app in the official f-droid.org repository infringes on your rights by submitting a take-down request."
msgstr "本文档涵盖了如何发送请求从官方 f-droid.org 存储库中删除内容或应用。  我们的团队尽最大努力检查收到的所有应用提交是否符合我们的[收录政策](../Inclusion_Policy)。  如官方 f-droid.org 存储库中的应用侵犯了您的权利，请提交下架请求让我们得知。"

#. type: Plain text
#: _docs/Take-Down_Requests.md
msgid "The official f-droid.org repository is a distribution service/platform for FOSS apps and will be called downstream in the remainder of this document.  F-Droid does not hold any rights to the apps in the official f-droid.org repository other than those granted by their respective license.  The authors/copyright holders of said apps will be called upstream in the remainder of this document."
msgstr "官方 f-droid.org 存储库是自由开源软件应用的分发服务/平台，在本文的其余部分将被称为“下游”。  除官方 f-droid.org 存储库中应用各自的许可证授予的权利外，F-Droid 不持有这些应用的任何权利，除了那些由各自相应许可授权的应用。  上述应用的作者/版权持有人将在本文的其余部分被称为“上游”。"

#. type: Title ##
#: _docs/Take-Down_Requests.md
#, no-wrap
msgid "Submitting Take-Down Requests"
msgstr "提交下架请求"

#. type: Plain text
#: _docs/Take-Down_Requests.md
msgid "Please take some time to familiarize yourself with our policies and take-down procedure before submitting any take-down requests.  You have to make sure that requests you're submitting to us, contain all information required by our team to check the legitimacy of your claims.  If you submit an incomplete request, we will have to ask you for clarifications."
msgstr "在提交任何下架请求之前，请先花些时间熟悉我们的政策和下架流程。  您必须确保您提交给我们的请求包含所有我们团队检查您陈诉合法性所需的全部信息。如果您提交的请求不完整，我们将要求您澄清。"

#. type: Plain text
#: _docs/Take-Down_Requests.md
#, no-wrap
msgid ""
"Copyright based take-down requests must at least include:\n"
"- link to the infringing content on f-droid.org\n"
"- full copyright attribution (author/artists/copyright holder, copyright date, ...)\n"
"- publishing information (publisher, publishing medium, publishing date, web\n"
"  links to postings/store-listings/e-commerce-listings/etc., ...)\n"
"- license information\n"
"- written description of the copyrighted material\n"
"- short statement about the author/artist/copyright holder/etc. which\n"
"  explains their field of expertise/field of interest/business/etc.\n"
"or a concise explanation why this information is not available.\n"
msgstr ""
"基于版权的下架请求必须至少包括：\n"
"- f-droid.org 上侵权内容的链接\n"
"- 完整版权归因 (作者/艺术家/版权持有人、版权日期等 ...)\n"
"- 出版信息 (出版商、出版媒介、出版日期、正式公告/商店上架信息/电商上架信息等\n"
"  的网页链接)\n"
"- 许可信息\n"
"- 版权材料的书面描述\n"
"- 有关作者/艺术家/版权持有人等的简短声明，用于解释\n"
"  专业领域 / 兴趣领域 / 业务等.\n"
"或者简短解释为何此信息不可用。\n"

#. type: Plain text
#: _docs/Take-Down_Requests.md
msgid "If your take-down request is not based on copyright, you will still need to supply ample information that allows us to check your request. (e.g. trademark registration information, inclusion policy violation information, etc.)"
msgstr "即使您的下架请求不是以版权为基础，您仍需要提供充分信息，来允许我们检查您的请求（如商标注册信息、收入政策违规信息等）"

#. type: Plain text
#: _docs/Take-Down_Requests.md
msgid "Note that some apps distributed by downstream may connect to 3rd party services or rely on 3rd party software.  Downstream does not connect to these services or rely on this software, so their Terms of Service, Terms of Use or similar agreements usually do not provide an enforceable basis for take-down requests."
msgstr "请注意，某些由下游分发的应用可能连接到第三方服务或依赖于第三方软件。  下游不连接到这些服务或者依赖于此软件，那些它们的服务条款、使用条款或类似协议通常不提供下架请求的可强制基础。"

#. type: Plain text
#: _docs/Take-Down_Requests.md
msgid "Also please note that f-droid.org is a volunteer-driven organization.  We prioritize take-down requests, but we can't guarantee instant responses."
msgstr "同时请注意，F-Droid 是一个由志愿者驱动的组织。  我们会优先处理下架请求，但不能保证立即回应。"

#. type: Plain text
#: _docs/Take-Down_Requests.md
msgid "We accept take-down requests on our team E-Mail account.  [team@f-droid.org](mailto:team@f-droid.org). Our team will open a public issue in our issue tracker and quote your request there."
msgstr "您可以将您的下架请求发送到我们团队的电子邮件账户。  [team@f-droid.org](mailto:team@f-droid.org) 。我们的团队会在我们的问题跟踪器上公开这个 issue，并在 issue 中引用您的请求。"

#. type: Plain text
#: _docs/Take-Down_Requests.md
msgid "Take-down requests cannot be confidential.  By submitting a take-down request you automatically grant us permission to publish your request on our web-sites and our issue trackers.  Privacy-relevant information will be redacted."
msgstr "下架请求不能秘而不宣。  提交下架请求，意味着您自动授予我们在我们的网站或问题跟踪器上公开您请求的权限。我们会去掉涉及隐私的信息。"

#. type: Title ##
#: _docs/Take-Down_Requests.md
#, no-wrap
msgid "Transparency reporting"
msgstr "透明度报告"

#. type: Plain text
#: _docs/Take-Down_Requests.md
msgid "All take-down requests we receive regarding apps on the official f-droid.org repository are transparently disclosed in our [issue tracker](https://gitlab.com/groups/fdroid/-/issues/?sort=created_date&state=all&label_name%5B%5D=Takedown%20Request)  and [merge-request tracker](https://gitlab.com/groups/fdroid/-/merge_requests?scope=all&state=all&label_name[]=Takedown%20Request)  under the `Takedown Request` label."
msgstr "我们收到的所有关于 f-droid.org 官方存储库上应用的下架请求都公开披露于我们的 [问题跟踪器](https://gitlab.com/fdroidgroups/fdroiddata/-/issues/?scope=allort=created_date&state=all&label_name[]%5B%5D=Takedown%20Request)  和 [合并请求跟踪器](https://gitlab.com/fdroidgroups/fdroiddata/-/merge_requests?scope=all&state=all&label_name[]=Takedown%20Request)  ，并带 `下架请求` 标签。"

#. type: Title ##
#: _docs/Take-Down_Requests.md
#, no-wrap
msgid "3rd party repositories"
msgstr "第三方存储库"

#. type: Plain text
#: _docs/Take-Down_Requests.md
msgid "Third party repositories are not under our control what so ever. If you think a 3rd party repository is violating your rights you will have to get in contact with their respective operators. Procedures described here apply exclusively to f-droid.org."
msgstr "第三方存储库并不在我们的控制之下。如果您认为第三方存储库侵犯了您的权利，您将不得不与这些存储库各自的运营方联系。这里描述的流程只适用于 f-droid.org。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Translation_and_Localization.md
#, no-wrap
msgid "Translation and Localization"
msgstr "翻译和本地化"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "Every piece of F-Droid can be localized, including the Android app, the entire website, and the tools.  That means that all of the texts can be translated into any language supported by Android.  F-Droid will also use localized formats for numbers, currency, dates, etc. which happens automatically based on the language and country specified in the device's settings.  All of the F-Droid resources are available for translation on [Weblate \"components\"](https://hosted.weblate.org/projects/f-droid/)  that are each managed separately, based on technical requirements."
msgstr "F-Droid 的每一块都可以被本地化，包括 Android 应用、整个网站和工具。 这意味着所有的文本都可以被翻译成 Android 支持的任何语言。 F-Droid 还将根据设备设置中指定的语言和国家/地区自动使用数字、货币、日期等的本地化格式。 所有的 F-Droid 资源都可以在 [Weblate \"组件\"](https://hosted.weblate.org/projects/f-droid/)上进行翻译，每个组件都根据技术要求单独管理。"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "If an app's source code repo includes app descriptions, then those will be automatically included as long as they use the [supported layouts](../All_About_Descriptions_Graphics_and_Screenshots).  If there are any issues with missing translations or broken localized formats, please [file an issue](https://gitlab.com/fdroid/fdroid-website/-/issues)  so it can be fixed."
msgstr "如果应用的源代码存储库包含应用的说明，那么只要它们使用 [支持的布局](../All_About_Descriptions_Graphics_and_Screenshots)，它们就会自动包含在内。如果有任何翻译缺失或本地化格式损坏的问题，请[提交问题](https://gitlab.com/fdroid/fdroid-website/-/issues) 以便修复。"

#. type: Title ##
#: _docs/Translation_and_Localization.md
#, no-wrap
msgid "Contributing"
msgstr "贡献"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "Is F-Droid not in your language, or the translation is incorrect or incomplete? Get involved in the translations on [our Weblate](https://hosted.weblate.org/projects/f-droid/)."
msgstr "F-Droid 没有以你的语言呈现，或者翻译不正确或不完整？请参与到 [我们在 Weblate](https://hosted.weblate.org/projects/f-droid/) 上进行的翻译工作中来。"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "All translation work is done in Weblate to keep the workflow easy.  We recommend that translators use a [GitLab](https://gitlab.com) account for logging into Weblate since that same account can be used on all of the F-Droid projects on GitLab. you can find other translators on the [forum](https://forum.f-droid.org/c/translation)."
msgstr "所有的翻译工作都在 Weblate 中完成，以保持工作流程的简便。 我们建议译者使用 [GitLab](https://gitlab.com) 账户登录 Weblate，因为同一账户可以用于 GitLab 上所有的 F-Droid 项目。你可以在 [论坛](https://forum.f-droid.org/c/translation) 上找到其他译者。"

#. type: Title ###
#: _docs/Translation_and_Localization.md
#, no-wrap
msgid "Adding a new language"
msgstr "添加新语言"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "First and foremost, Android must [already support](https://android.googlesource.com/platform/frameworks/base/+/master/core/res/res/values/locale_config.xml)  the specific language and locale you want to add.  We cannot work with languages that Android and the SDK do not support, the tools simply break down.  Next, if you are considering adding a country-specific variant of a language (e.g. _de-AT_), first make sure that the main language is well maintained (e.g. _de_). Your contribution might be useful to more people if you contribute to the existing version of your language rather than the country-specific variant."
msgstr "首先，Android 必须[已经支持](https://android.googlesource.com/platform/frameworks/base/+/master/core/res/res/values/locale_config.xml) 你想要添加的特定语言和区域设置。我们无法使用 Android 和 SDK 不支持的语言，否则这些工具会崩溃。接下来，如果你正在考虑添加特定于国家/地区的语言变体（例如 _de-AT_），请首先确保主要语言得到良好维护（例如 _de_）。如果你为你的语言的现有版本而不是特定国家/地区的变体做出贡献，那么你的贡献可能对更多人有用。"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "For [_fdroidclient_](https://hosted.weblate.org/projects/f-droid/f-droid/), [_fdroidserver_](https://hosted.weblate.org/projects/f-droid/fdroidserver/)  and [_Repomaker_](https://hosted.weblate.org/projects/f-droid/repomaker), anyone can create a new language via Weblate.  For the rest of the translation \"components\" on Weblate, please [file an admin issue](https://gitlab.com/fdroid/admin/issues) to request a new language."
msgstr "对于 [_fdroidclient_](https://hosted.weblate.org/projects/f-droid/f-droid/)，[_fdroidserver_](https://hosted.weblate .org/projects/f-droid/fdroidserver/) 和 [_Repomaker_](https://hosted.weblate.org/projects/f-droid/repomaker)，任何人都可以通过 Weblate 创建一种新语言。对于 Weblate 上的其余翻译“组件”，请[提交管理问题](https://gitlab.com/fdroid/admin/issues) 以请求新语言。"

#. type: Title ###
#: _docs/Translation_and_Localization.md
#, no-wrap
msgid "When translations are included"
msgstr "翻译何时会被收录"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "The translation files are included from Weblate before each release.  There are varying conditions for when the translations are included, based on the limitations of each platform."
msgstr "在每个版本发布前，都会从 Weblate 中收录翻译文件。  根据每个平台的限制，收录翻译的时间会有不同的情况。"

#. type: Title ####
#: _docs/Translation_and_Localization.md
#, no-wrap
msgid "Android app"
msgstr "Android 应用"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "As a general rule, a translation must be at least 70% complete for it to be included in a final release.  For alpha releases, we try to include all translations, no matter how incomplete."
msgstr "一般来说，翻译必须至少完成 70%，才会被包含在最终发布版本中。  我们会尝试在 Alpha 版本中收录所有翻译，无论翻译多么不完整。"

#. type: Title ####
#: _docs/Translation_and_Localization.md
#, no-wrap
msgid "App summaries"
msgstr "应用概要"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "_f-droid.org_ makes the one line summaries for many apps [available for translation](https://hosted.weblate.org/projects/f-droid/fdroiddata/).  The goal is to make it possible to have sections where only a single language is show, like the Latest Tab or the website sidebar.  These are imported on a rolling basis, at least once a month."
msgstr "_f-droid.org_ 使许多应用的单行概要 [可供翻译](https://hosted.weblate.org/projects/f-droid/fdroiddata/)。 我们的目标是使只显示一种语言的部分成为可能，比如最新标签或网站侧边栏。 这些都是以滚动方式导入的，至少每月一次。"

#. type: Title ####
#: _docs/Translation_and_Localization.md
#, no-wrap
msgid "f-droid.org website"
msgstr "f-droid.org 网站"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "For the f-droid.org website, it is a much more complicated system.  Each time the website is updated, thousands of pages must be regenerated per-locale.  Since this setup [cannot](https://gitlab.com/groups/fdroid/-/milestones/6)  support lots of languages, we have to put stricter requirements on it.  The core strings must be fully translated to be included.  They also must be maintained in order to stay included.  The documentation and tutorials are very useful to have translated.  The blog posts are the least important.  Each page must be fully translated before the translated version will be shown, otherwise, the site will show the original English."
msgstr "f-droid.org 网站则是一个更复杂的系统。每次更新网站，必须为每种语言重新生成数千个页面。由于它[不能](https://gitlab.com/groups/fdroid/-/milestones/6)支持很多语言，我们必须对它提出更严格的要求。 核心字符串必须被完全翻译才能被收录。 为保持收录状态，它们必须得到维护。 文档和教程的翻译是非常有用的。 博客文章是最不重要的。 每个页面在显示翻译版本之前都必须完全翻译，否则，网站将显示原始英文。"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "In order for a new language to be added to f-droid.org, it must have:"
msgstr "为了将新语言添加到 f-droid.org，它必须满足："

#. type: Bullet: '* '
#: _docs/Translation_and_Localization.md
msgid "[Website](https://hosted.weblate.org/projects/f-droid/website) component: 100% translated"
msgstr "[网站](https://hosted.weblate.org/projects/f-droid/website) 部件：100% 已翻译"

#. type: Bullet: '* '
#: _docs/Translation_and_Localization.md
msgid "[Website Pages](https://hosted.weblate.org/projects/f-droid/website-pages/) component: 100% translated"
msgstr "[网站页面](https://hosted.weblate.org/projects/f-droid/website-pages/) 部件：100% 已翻译"

#. type: Bullet: '* '
#: _docs/Translation_and_Localization.md
msgid "[Data](https://hosted.weblate.org/projects/f-droid/fdroiddata) component: at least 10% translated"
msgstr "[数据](https://hosted.weblate.org/projects/f-droid/fdroiddata) 部件：至少翻译了 10%"

#. type: Bullet: '* '
#: _docs/Translation_and_Localization.md
msgid "A blog post announcing support for the new language with an explanation the translation team."
msgstr "宣布对新语言支持的博客文章，其中包含翻译团队等解释性内容。"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "There is a [nightly build of the website](https://staging.f-droid.org)  that includes all translations on Weblate, no matter how complete they are. This lets everyone see the progress, and means we can get new languages working well before launching them."
msgstr "有一个[每日构建的网站](https://staging.f-droid.org)，其中包括 Weblate 上的所有不同完成度的翻译。这让每个人都能看到进展，这意味着我们可以在发布新语言之前让它们运行良好。"

#. type: Title ##
#: _docs/Translation_and_Localization.md
#, no-wrap
msgid "The old \"Languages\" preference"
msgstr "旧的\"语言\"首选项"

#. type: Plain text
#: _docs/Translation_and_Localization.md
msgid "There are cases where having English as the fallback language is not helpful.  For example, much of the world would prefer to fall back to Chinese, Spanish, or Russian instead of English.  On Android 6.0 and older, F-Droid provides a \"Languages\" setting inside the app so that users can switch F-Droid to a different language.  Note that this might not handle localized format properly, just the language. Android 7.0 fixed this by allowing users to specify a list of language+country \"locales\", ordered by importance to the user."
msgstr "在有些情况下，将英语作为后备语言是没有帮助的。 例如，世界上很多地方都喜欢使用中文、西班牙语或俄语，而不是英语。 在 Android 6.0 及更早版本中，F-Droid 在应用中提供了\"语言\"设置，以便用户可以将 F-Droid 切换到不同的语言。 注意，这可能无法正确处理语言以外的本地化格式。Android 7.0 修复了这一点，允许用户指定一个语言+国家/地区\"区域设置\"列表，按对用户的重要性排序。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Update_Processing.md
#, no-wrap
msgid "Update Processing"
msgstr "更新处理"

#. type: Plain text
#: _docs/Update_Processing.md
msgid "The F-Droid tools can automatically detect and build updates to apps and packages."
msgstr "F-Droid 工具可以自动检测和构建应用和软件包的更新。"

#. type: Title ###
#: _docs/Update_Processing.md
#, no-wrap
msgid "Detecting<a name=\"Detecting\"></a>"
msgstr "检测<a name=\"Detecting\"></a>"

#. type: Plain text
#: _docs/Update_Processing.md
msgid "There are various mechanisms in place for automatically detecting that updates are available for applications, with the _UpdateCheckMode_ field in the metadata determining which method is used for a particular application."
msgstr "有各种机制来自动检测应用的更新是否可用，元数据中的 _UpdateCheckMode_ 字段决定哪种方法用于特定的应用。"

#. type: Plain text
#: _docs/Update_Processing.md
msgid "Running the `fdroid checkupdates` command will apply this method to each application in the repository and update the _CurrentVersion_ and _CurrentVersionCode_ fields in the metadata accordingly."
msgstr "运行 `fdroid checkupdates` 命令会将此方法应用于存储库中的每个应用，并相应地更新元数据中的 _CurrentVersion_ 和 _CurrentVersionCode_ 字段。"

#. type: Plain text
#: _docs/Update_Processing.md
msgid "As usual, the `-p` option can be used with this, to restrict processing to a particular application."
msgstr "像往常一样，`-p` 选项可以与此一起使用，以限制对特定应用的处理。"

#. type: Plain text
#: _docs/Update_Processing.md
msgid "Note that this only updates the metadata such that we know what the current published/recommended version is. It doesn't make that version available in the repository - for that, see the next section."
msgstr "注意，这只是更新元数据，让我们知道当前发布/推荐的版本是什么。它并不使该版本在存储库中可用——关于这一点，请看下一节。"

#. type: Title ###
#: _docs/Update_Processing.md
#, no-wrap
msgid "Adding<a name=\"Adding\"></a>"
msgstr "添加<a name=\"Adding\"></a>"

#. type: Plain text
#: _docs/Update_Processing.md
msgid "Adding updates (i.e. new versions of applications already included in the repository) happens in two ways. The simple case is applications where the APK files are binaries, retrieved from a developer's published build. In this case, all that's required is to place the new binary in the _Repo_ directory, and the next run of `fdroid update` will pick it up."
msgstr "添加更新（即已经包含在存储库中的应用的新版本）有两种方式。其中简单的情况是应用的 APK 文件是直接获取的开发者发布二进制文件。在这种情况下，只需要把新的二进制文件放在 _Repo_ 目录下，然后运行 `fdroid update` 就可以将它添加到更新中。"

#. type: Plain text
#: _docs/Update_Processing.md
msgid "For applications built from source, it is necessary to add a new `Build Version` line to the metadata file. At the very least, the version name, version code and commit will be different. It is also possible that the additional build flags will change between versions."
msgstr "对于从源代码构建的应用，需要在元数据文件中添加一个新的 `Build Version` 行。至少，版本名称、版本代码和提交会有所不同。附加构建标志也可能会在版本之间发生变化。"

#. type: Plain text
#: _docs/Update_Processing.md
msgid "For processing multiple updates in the metadata at once, it can be useful to run `fdroid update --interactive`. This will check all the applications in the repository, and where updates are required you will be prompted to \\[E\\]dit the metadata, \\[I\\]gnore the update, or \\[Q\\]uit altogether."
msgstr "为了一次处理元数据中的多个更新，可以运行 `fdroid update --interactive`。这将检查存储库中的所有应用并在需要更新的地方提示你进行操作。你可以\\[E\\]编辑元数据、\\[I\\]忽略更新或\\[Q\\]完全放弃。"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Verification_Server.md
#, no-wrap
msgid "Verification Server"
msgstr "验证服务器"

#. type: Plain text
#: _docs/Verification_Server.md
msgid "The idea of a [verification server](https://verification.f-droid.org)  is to automatically reproduce official releases published by f-droid.org (or any other server).  This ensures that everything in the release APK came from the source code, and nothing was inserted or included during the build process.  This is also useful for verifying that the build process is not including proprietary libraries."
msgstr "[验证服务器](https://verification.f-droid.org) 的想法是自动复制由 f-droid.org（或任何其他服务器）发布的官方版本。这可以确保发布 APK 中的所有内容都来自源代码，并且在构建过程中没有插入或包含任何内容。这对于验证构建过程不包括私有库也很有用。"

#. type: Plain text
#: _docs/Verification_Server.md
msgid "The ultimate goal is a simple installation that any third party can make, that will continuously check for new published packages, make its own builds, and confirm that the binaries match exactly. There are many issues to resolve to get to this final destination, but the basic concept is already tested and working. (see the 'fdroid verify' command)."
msgstr "最终目标是任何第三方都可以进行的简单安装，该安装将不断检查新发布的软件包，创建自己的构建，并确认二进制文件完全匹配。要达到这个最终目标，有许多问题需要解决，但基本概念已经过测试并有效（请参阅\"fdroid verify\"命令）。"

#. type: Plain text
#: _docs/Verification_Server.md
msgid "The output of multiple verification servers would then be available to the F-Droid client. The idea would be to configure the client such that it does not trust a binary until multiple verification servers are in agreement that it correct."
msgstr "多个验证服务器的输出随后可供 F-Droid 客户端使用。这个想法是将客户端配置为不信任二进制文件，直到多个验证服务器一致认为它是正确的。"

#. type: Title ##
#: _docs/Verification_Server.md
#, no-wrap
msgid "Verification based on APK signature"
msgstr "基于 APK 签名的验证"

#. type: Plain text
#: _docs/Verification_Server.md
msgid "The verification process currently works by building a new unsigned APK, then copying the APK signature from the existing APK into the newly built unsigned APK.  If the APK signature verifies, then the APK has been reproduced, and is marked as verified.  If not, a [diffoscope](https://diffoscope.org) log is generated to show what the differences are between the two builds. The verification server needs no signing capability, just building."
msgstr "目前的验证过程是构建一个新的未签名 APK，然后将 APK 签名从现有 APK 复制到新构建的未签名 APK 中。如果 APK 签名通过验证，则该 APK 已被复现，并被标记为已验证。如果不是，则会生成 [diffoscope](https://diffoscope.org) 日志以显示两个构建之间的差异。验证服务器不需要签名能力，只需要构建。"

#. type: Title ##
#: _docs/Verification_Server.md
#, no-wrap
msgid "Setting one up"
msgstr "设置一个"

#. type: Plain text
#: _docs/Verification_Server.md
msgid "This is still pretty raw, so expect some tinkering.  It also will likely only work on Debian, Ubuntu and other Debian-derivatives. The first step is getting the [_fdroidserver_ tools setup](../Installing_the_Server_and_Repo_Tools) and working. Run the _fdroidserver_ tools directly out of git (e.g. `~/code/fdroidserver/fdroid build org.adaway`), that's going to be the easiest for now since the verification server stuff is a moving target. The base server needs to be at minimum Debian/jessie, or there will need to be some heavy tweaking. If you run Ubuntu or derivative distro, you can get any packages missing from your version, like _vagrant-cachier_, from this PPA: <https://launchpad.net/~fdroid/+archive/ubuntu/buildserver/>"
msgstr "这仍然很原始，所以期待一些修补。它也可能只适用于 Debian、Ubuntu 和其他 Debian 衍生产品。第一步是获取 [_fdroidserver_ 工具设置](../Installing_the_Server_and_Repo_Tools) 并开始工作。直接从 git 运行 _fdroidserver_ 工具（例如 `~/code/fdroidserver/fdroid build org.adaway`），这将是目前最简单的，因为验证服务器的东西是移动目标。基本服务器需要至少是 Debian/jessie，否则需要进行一些重大调整。如果你运行 Ubuntu 或衍生发行版，你可以从这个 PPA：<https://launchpad.net/~fdroid/+archive/ubuntu/buildserver/>"

#. type: Plain text
#: _docs/Verification_Server.md
msgid "Then you can find more on the process by reading [Build Server Setup](../Build_Server_Setup). You can also see the Continuous Integration scripts for this process to see how the whole thing can work:"
msgstr "然后你可以通过阅读 [构建服务器设置](../Build_Server_Setup) 找到有关该过程的更多信息。你还可以查看此过程的持续集成脚本，以了解整个过程是如何工作的："

#. type: Bullet: '* '
#: _docs/Verification_Server.md
msgid "<https://gitlab.com/fdroid/fdroidserver/blob/master/jenkins-build-makebuildserver>"
msgstr "<https://gitlab.com/fdroid/fdroidserver/blob/master/jenkins-build-makebuildserver>"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Verifying_Downloaded_APK.md
#, no-wrap
msgid "Verifying downloaded F-Droid.apk"
msgstr "验证下载的 F-Droid.apk"

#. type: Plain text
#: _docs/Verifying_Downloaded_APK.md
msgid "Some details on this can be found in our documentation at [Release Channels and Signing Keys](../Release_Channels_and_Signing_Keys). To make it easier to understand for non-devs, here are the steps in short:"
msgstr "可以在我们的文档[发布通道和签名密钥](../Release_Channels_and_Signing_Keys)中了解详细内容。为了方便非技术人员理解，简单步骤如下："

#. type: Bullet: '* '
#: _docs/Verifying_Downloaded_APK.md
msgid "download [https://f-droid.org/F-Droid.apk.asc](https://f-droid.org/F-Droid.apk.asc) and [https://f-droid.org/F-Droid.apk](https://f-droid.org/F-Droid.apk)"
msgstr "下载 [https://f-droid.org/F-Droid.apk.asc](https://f-droid.org/F-Droid.apk.asc) 和 [https://f-droid.org/F-Droid.apk](https://f-droid.org/F-Droid.apk)"

#. type: Bullet: '* '
#: _docs/Verifying_Downloaded_APK.md
msgid "load the public key for `admin@f-droid.org`"
msgstr "加载 `admin@f-droid.org` 的公钥"

#. type: Bullet: '* '
#: _docs/Verifying_Downloaded_APK.md
msgid "compare the fingerprint with what the documentation mentioned above states"
msgstr "将指纹与上面提到的文档中所声明的比较"

#. type: Bullet: '* '
#: _docs/Verifying_Downloaded_APK.md
msgid "verify the file"
msgstr "验证文件"

#. type: Plain text
#: _docs/Verifying_Downloaded_APK.md
msgid "On Linux, this is what it would look like:"
msgstr "在 Linux 上，它看起来是这样："

#. type: Fenced code block
#: _docs/Verifying_Downloaded_APK.md
#, no-wrap
msgid ""
"# download the files\n"
"wget -q https://f-droid.org/F-Droid.apk.asc\n"
"wget -q https://f-droid.org/F-Droid.apk\n"
"# load the public key\n"
"gpg --keyserver keyserver.ubuntu.com --recv-key 37D2C98789D8311948394E3E41E7044E1DBA2E89\n"
"# verify the file\n"
"gpg --verify F-Droid.apk.asc F-Droid.apk\n"
msgstr ""
"# 下载文件\n"
"wget -q https://f-droid.org/F-Droid.apk.asc\n"
"wget -q https://f-droid.org/F-Droid.apk\n"
"# 加载公钥\n"
"gpg --keyserver keyserver.ubuntu.com --recv-key 37D2C98789D8311948394E3E41E7044E1DBA2E89\n"
"#验证文件\n"
"gpg --verify F-Droid.apk.asc F-Droid.apk\n"

#. type: Plain text
#: _docs/Verifying_Downloaded_APK.md
msgid "The expected output of the last command should look like:"
msgstr "最后一个命令的预期输出应当看起来是："

#. type: Fenced code block
#: _docs/Verifying_Downloaded_APK.md
#, no-wrap
msgid ""
"gpg: Signature made Mon 09 Aug 2021 11:17:55 PM CEST\n"
"gpg:                using RSA key 802A9799016112346E1FEFF47A029E54DD5DCE7A\n"
"gpg: Good signature from \"F-Droid <admin@f-droid.org>\" [unknown]\n"
"gpg: WARNING: This key is not certified with a trusted signature!\n"
"gpg:          There is no indication that the signature belongs to the owner.\n"
"Primary key fingerprint: 37D2 C987 89D8 3119 4839  4E3E 41E7 044E 1DBA 2E89\n"
"     Subkey fingerprint: 802A 9799 0161 1234 6E1F  EFF4 7A02 9E54 DD5D CE7A\n"
msgstr ""
"gpg: 签名建立于 2021年08月09日 星期一 11时17分55秒 CEST\n"
"gpg:               使用 RSA 密钥 802A9799016112346E1FEFF47A029E54DD5DCE7A\n"
"gpg: 完好的签名，来自于 “F-Droid <admin@f-droid.org>” [未知]\n"
"gpg: 警告：此密钥未被受信任签名认证！\n"
"gpg:       没有证据表明此签名属于其声称的所有者。\n"
"主密钥指纹： 37D2 C987 89D8 3119 4839  4E3E 41E7 044E 1DBA 2E89\n"
"     子密钥指纹： 802A 9799 0161 1234 6E1F  EFF4 7A02 9E54 DD5D CE7A\n"

#. type: Plain text
#: _docs/Verifying_Downloaded_APK.md
msgid "The date will vary as the client APK is updated, it's not an issue if it is newer. The warning about the key not being certified with a trusted signature can be ignored. The important part is the indication of a good signature and that it has the same fingerprint that was used to download the key:"
msgstr "更新客户端 APK 时，日期会发生变化，变化后的日期如果比之前的要新是正常的。可以忽略公钥未被受信任签名认证的警告。重要的是良好签名的标示，及其指纹和用于下载公钥的指纹相同："

#. type: Plain text
#: _docs/Verifying_Downloaded_APK.md
#, no-wrap
msgid "    37D2 C987 89D8 3119 4839 4E3E 41E7 044E 1DBA 2E89\n"
msgstr "    37D2 C987 89D8 3119 4839 4E3E 41E7 044E 1DBA 2E89\n"

#. type: Yaml Front Matter Hash Value: title
#: _docs/Whitelabel_Builds.md
#, no-wrap
msgid "Whitelabel Builds"
msgstr "白标构建"

#. type: Plain text
#: _docs/Whitelabel_Builds.md
msgid "F-Droid can be rebranded and embedded in Android ROMs, building upon F-Droid as the \"white-label\" version. This is a basic introduction for how to do that. For this, [\"_gradle_ flavors\"](https://developer.android.com/studio/build/build-variants.html)  are used for building rebranded, configured versions of F-Droid."
msgstr "F-Droid 可以重新命名并嵌入到 Android ROM 中，以 F-Droid 为“白标”版本。这是如何做到这一点的基本介绍。为此，[\"_gradle_ flavors\"](https://developer.android.com/studio/build/build-variants.html) 用于构建 F-Droid 的更名、配置版本。"

#. type: Plain text
#: _docs/Whitelabel_Builds.md
msgid "Starting in *app/build.gradle*, set the package names and create a _flavorDimension_ and _productFlavors_:"
msgstr "从 *app/build.gradle* 开始，设置包名并创建 _flavorDimension_ 和 _productFlavors_："

#. type: Fenced code block (gradle)
#: _docs/Whitelabel_Builds.md
#, no-wrap
msgid ""
"def fullApplicationId = \"com.mycompany.full\"\n"
"def basicApplicationId = \"com.mycompany.basic\"\n"
"// yes, this actually needs both quotes https://stackoverflow.com/a/41391841\n"
"def privilegedExtensionApplicationId = '\"com.mycompany.privileged\"'\n"
"\n"
"\n"
"[snip]\n"
"\n"
"\n"
"android {\n"
"    flavorDimensions \"base\", \"mycompany\"\n"
"    productFlavors {\n"
"       mycompany {\n"
"           dimension \"mycompany\"\n"
"       }\n"
"    }\n"
"}\n"
msgstr ""
"def fullApplicationId = \"com.mycompany.full\"\n"
"def basicApplicationId = \"com.mycompany.basic\"\n"
"// yes, this actually needs both quotes https://stackoverflow.com/a/41391841\n"
"def privilegedExtensionApplicationId = '\"com.mycompany.privileged\"'\n"
"\n"
"\n"
"[snip]\n"
"\n"
"\n"
"android {\n"
"    flavorDimensions \"base\", \"mycompany\"\n"
"    productFlavors {\n"
"       mycompany {\n"
"           dimension \"mycompany\"\n"
"       }\n"
"    }\n"
"}\n"

#. type: Plain text
#: _docs/Whitelabel_Builds.md
msgid "Then *gradle* will automatically look at whole set of folders for custom versions of files:"
msgstr "然后 *gradle* 将自动查看整套文件夹中的自定义版本的文件："

#. type: Bullet: '* '
#: _docs/Whitelabel_Builds.md
msgid "Java sources: _app/src/mycompany/java_"
msgstr "Java 源：_app/src/mycompany/java_"

#. type: Bullet: '* '
#: _docs/Whitelabel_Builds.md
msgid "Manifest file: _app/src/mycompany/AndroidManifest.xml_"
msgstr "Manifest 文件：_app/src/mycompany/AndroidManifest.xml_"

#. type: Bullet: '* '
#: _docs/Whitelabel_Builds.md
msgid "Android resources: _app/src/mycompany/res_"
msgstr "Android 资源：_app/src/mycompany/res_"

#. type: Bullet: '* '
#: _docs/Whitelabel_Builds.md
msgid "Assets: _app/src/mycompany/assets_"
msgstr "资产：_app/src/mycompany/assets_"

#. type: Plain text
#: _docs/Whitelabel_Builds.md
msgid "There cannot be duplicate Java classes, but any extensions can be managed there. For anything in _res/_, i.e. _strings.xml_ or drawable resources, the files in _app/src/mycompany/res_ will take precedence over the default F-Droid ones. For example, override the app icon by providing _app/src/mycompany/res/drawable/ic\\_launcher.xml_."
msgstr "不能有重复的 Java 类，但可以在那里管理任何扩展。对于 _res/_ 中的任何内容，即 _strings.xml_ 或可绘制资源，_app/src/mycompany/res_ 中的文件将优先于默认的 F-Droid 的。例如，通过提供 _app/src/mycompany/res/drawable/ic\\_launcher.xml_ 来覆盖应用图标。"

#. type: Plain text
#: _docs/Whitelabel_Builds.md
msgid "To specify a custom set of app repositories, provide _app/src/mycompany/res/values/default\\_repos.xml_. The format of that file is a String array, with sets of 8 elements per repo. For example, here's the Guardian Project repo config enabled by default with push request always accepted by the client:"
msgstr "要指定一组自定义应用存储库，请提供_app/src/mycompany/res/values/default\\_repos.xml_。该文件的格式是 String 数组，每个存储库包含 8 个元素。例如，下面是默认情况下启用的 Guardian Project 存储库配置，客户端始终接受推送请求："

#. type: Fenced code block (xml)
#: _docs/Whitelabel_Builds.md
#, no-wrap
msgid ""
" <!-- name -->\n"
" <item>Guardian Project</item>\n"
" <!-- address -->\n"
" <item>https://guardianproject.info/fdroid/repo</item>\n"
" <!-- description -->\n"
" <item>\n"
"   The official app repository of The Guardian\n"
"   Project. Applications in this repository are official\n"
"   binaries build by the original application developers and\n"
"   signed by the same key as the APKs that are released in the\n"
"   Google Play store.\n"
" </item>\n"
" <!-- version -->\n"
" <item>13</item>\n"
" <!-- enabled -->\n"
" <item>1</item>\n"
" <!-- priority -->\n"
" <item>10</item>\n"
" <!-- push requests: ignore, prompt, always -->\n"
" <item>always</item>\n"
" <!-- pubkey -->\n"
" <item>\n"
"   308205d8308203c0020900a397b4da7ecda034300d06092a864886f70d01010505003081ad310b30090603550406130255533111300f06035504080c084e657720596f726b3111300f06035504070c084e657720596f726b31143012060355040b0c0b4644726f6964205265706f31193017060355040a0c10477561726469616e2050726f6a656374311d301b06035504030c14677561726469616e70726f6a6563742e696e666f3128302606092a864886f70d0109011619726f6f7440677561726469616e70726f6a6563742e696e666f301e170d3134303632363139333931385a170d3431313131303139333931385a3081ad310b30090603550406130255533111300f06035504080c084e657720596f726b3111300f06035504070c084e657720596f726b31143012060355040b0c0b4644726f6964205265706f31193017060355040a0c10477561726469616e2050726f6a656374311d301b06035504030c14677561726469616e70726f6a6563742e696e666f3128302606092a864886f70d0109011619726f6f7440677561726469616e70726f6a6563742e696e666f30820222300d06092a864886f70d01010105000382020f003082020a0282020100b3cd79121b9b883843be3c4482e320809106b0a23755f1dd3c7f46f7d315d7bb2e943486d61fc7c811b9294dcc6b5baac4340f8db2b0d5e14749e7f35e1fc211fdbc1071b38b4753db201c314811bef885bd8921ad86facd6cc3b8f74d30a0b6e2e6e576f906e9581ef23d9c03e926e06d1f033f28bd1e21cfa6a0e3ff5c9d8246cf108d82b488b9fdd55d7de7ebb6a7f64b19e0d6b2ab1380a6f9d42361770d1956701a7f80e2de568acd0bb4527324b1e0973e89595d91c8cc102d9248525ae092e2c9b69f7414f724195b81427f28b1d3d09a51acfe354387915fd9521e8c890c125fc41a12bf34d2a1b304067ab7251e0e9ef41833ce109e76963b0b256395b16b886bca21b831f1408f836146019e7908829e716e72b81006610a2af08301de5d067c9e114a1e5759db8a6be6a3cc2806bcfe6fafd41b5bc9ddddb3dc33d6f605b1ca7d8a9e0ecdd6390d38906649e68a90a717bea80fa220170eea0c86fc78a7e10dac7b74b8e62045a3ecca54e035281fdc9fe5920a855fde3c0be522e3aef0c087524f13d973dff3768158b01a5800a060c06b451ec98d627dd052eda804d0556f60dbc490d94e6e9dea62ffcafb5beffbd9fc38fb2f0d7050004fe56b4dda0a27bc47554e1e0a7d764e17622e71f83a475db286bc7862deee1327e2028955d978272ea76bf0b88e70a18621aba59ff0c5993ef5f0e5d6b6b98e68b70203010001300d06092a864886f70d0101050500038202010079c79c8ef408a20d243d8bd8249fb9a48350dc19663b5e0fce67a8dbcb7de296c5ae7bbf72e98a2020fb78f2db29b54b0e24b181aa1c1d333cc0303685d6120b03216a913f96b96eb838f9bff125306ae3120af838c9fc07ebb5100125436bd24ec6d994d0bff5d065221871f8410daf536766757239bf594e61c5432c9817281b985263bada8381292e543a49814061ae11c92a316e7dc100327b59e3da90302c5ada68c6a50201bda1fcce800b53f381059665dbabeeb0b50eb22b2d7d2d9b0aa7488ca70e67ac6c518adb8e78454a466501e89d81a45bf1ebc350896f2c3ae4b6679ecfbf9d32960d4f5b493125c7876ef36158562371193f600bc511000a67bdb7c664d018f99d9e589868d103d7e0994f166b2ba18ff7e67d8c4da749e44dfae1d930ae5397083a51675c409049dfb626a96246c0015ca696e94ebb767a20147834bf78b07fece3f0872b057c1c519ff882501995237d8206b0b3832f78753ebd8dcbd1d3d9f5ba733538113af6b407d960ec4353c50eb38ab29888238da843cd404ed8f4952f59e4bbc0035fc77a54846a9d419179c46af1b4a3b7fc98e4d312aaa29b9b7d79e739703dc0fa41c7280d5587709277ffa11c3620f5fba985b82c238ba19b17ebd027af9424be0941719919f620dd3bb3c3f11638363708aa11f858e153cf3a69bce69978b90e4a273836100aa1e617ba455cd00426847f\n"
" </item>\n"
msgstr ""
" <!-- name -->\n"
" <item>Guardian Project</item>\n"
" <!-- address -->\n"
" <item>https://guardianproject.info/fdroid/repo</item>\n"
" <!-- description -->\n"
" <item>\n"
"   The Guardian Project 的官方应用仓库。\n"
"    此仓库中的应用是\n"
"    官方二进制文件，由原始应用开发者构建，并使用\n"
"   和发布在 Google Play商店中版本一样的密钥\n"
"   进行签名。\n"
" </item>\n"
" <!-- version -->\n"
" <item>13</item>\n"
" <!-- enabled -->\n"
" <item>1</item>\n"
" <!-- priority -->\n"
" <item>10</item>\n"
" <!-- push requests: ignore, prompt, always -->\n"
" <item>always</item>\n"
" <!-- pubkey -->\n"
" <item>\n"
"   308205d8308203c0020900a397b4da7ecda034300d06092a864886f70d01010505003081ad310b30090603550406130255533111300f06035504080c084e657720596f726b3111300f06035504070c084e657720596f726b31143012060355040b0c0b4644726f6964205265706f31193017060355040a0c10477561726469616e2050726f6a656374311d301b06035504030c14677561726469616e70726f6a6563742e696e666f3128302606092a864886f70d0109011619726f6f7440677561726469616e70726f6a6563742e696e666f301e170d3134303632363139333931385a170d3431313131303139333931385a3081ad310b30090603550406130255533111300f06035504080c084e657720596f726b3111300f06035504070c084e657720596f726b31143012060355040b0c0b4644726f6964205265706f31193017060355040a0c10477561726469616e2050726f6a656374311d301b06035504030c14677561726469616e70726f6a6563742e696e666f3128302606092a864886f70d0109011619726f6f7440677561726469616e70726f6a6563742e696e666f30820222300d06092a864886f70d01010105000382020f003082020a0282020100b3cd79121b9b883843be3c4482e320809106b0a23755f1dd3c7f46f7d315d7bb2e943486d61fc7c811b9294dcc6b5baac4340f8db2b0d5e14749e7f35e1fc211fdbc1071b38b4753db201c314811bef885bd8921ad86facd6cc3b8f74d30a0b6e2e6e576f906e9581ef23d9c03e926e06d1f033f28bd1e21cfa6a0e3ff5c9d8246cf108d82b488b9fdd55d7de7ebb6a7f64b19e0d6b2ab1380a6f9d42361770d1956701a7f80e2de568acd0bb4527324b1e0973e89595d91c8cc102d9248525ae092e2c9b69f7414f724195b81427f28b1d3d09a51acfe354387915fd9521e8c890c125fc41a12bf34d2a1b304067ab7251e0e9ef41833ce109e76963b0b256395b16b886bca21b831f1408f836146019e7908829e716e72b81006610a2af08301de5d067c9e114a1e5759db8a6be6a3cc2806bcfe6fafd41b5bc9ddddb3dc33d6f605b1ca7d8a9e0ecdd6390d38906649e68a90a717bea80fa220170eea0c86fc78a7e10dac7b74b8e62045a3ecca54e035281fdc9fe5920a855fde3c0be522e3aef0c087524f13d973dff3768158b01a5800a060c06b451ec98d627dd052eda804d0556f60dbc490d94e6e9dea62ffcafb5beffbd9fc38fb2f0d7050004fe56b4dda0a27bc47554e1e0a7d764e17622e71f83a475db286bc7862deee1327e2028955d978272ea76bf0b88e70a18621aba59ff0c5993ef5f0e5d6b6b98e68b70203010001300d06092a864886f70d0101050500038202010079c79c8ef408a20d243d8bd8249fb9a48350dc19663b5e0fce67a8dbcb7de296c5ae7bbf72e98a2020fb78f2db29b54b0e24b181aa1c1d333cc0303685d6120b03216a913f96b96eb838f9bff125306ae3120af838c9fc07ebb5100125436bd24ec6d994d0bff5d065221871f8410daf536766757239bf594e61c5432c9817281b985263bada8381292e543a49814061ae11c92a316e7dc100327b59e3da90302c5ada68c6a50201bda1fcce800b53f381059665dbabeeb0b50eb22b2d7d2d9b0aa7488ca70e67ac6c518adb8e78454a466501e89d81a45bf1ebc350896f2c3ae4b6679ecfbf9d32960d4f5b493125c7876ef36158562371193f600bc511000a67bdb7c664d018f99d9e589868d103d7e0994f166b2ba18ff7e67d8c4da749e44dfae1d930ae5397083a51675c409049dfb626a96246c0015ca696e94ebb767a20147834bf78b07fece3f0872b057c1c519ff882501995237d8206b0b3832f78753ebd8dcbd1d3d9f5ba733538113af6b407d960ec4353c50eb38ab29888238da843cd404ed8f4952f59e4bbc0035fc77a54846a9d419179c46af1b4a3b7fc98e4d312aaa29b9b7d79e739703dc0fa41c7280d5587709277ffa11c3620f5fba985b82c238ba19b17ebd027af9424be0941719919f620dd3bb3c3f11638363708aa11f858e153cf3a69bce69978b90e4a273836100aa1e617ba455cd00426847f\n"
" </item>\n"

#. type: Title ###
#: _docs/Whitelabel_Builds.md
#, no-wrap
msgid "Basic vs Full Product Flavors"
msgstr "基本 Flavor 与完整产品 Flavor"

#. type: Plain text
#: _docs/Whitelabel_Builds.md
msgid "F-Droid itself already has two flavors built-in: _basic_ and _full_.  _full_ is the app known as _F-Droid_, while _basic_ is the most minimal possible version of the app that still provides the core app store functionality.  Since those are in a separate _flavorDimension_, the added customizations will apply to both.  Choosing which one to build is done by specifying the \"Build Variant\" in Android Studio, and the _gradle_ target, .e.g `./gradlew assembleMycompanyFullDebug`."
msgstr "F-Droid 本身已经内置了两种 Flavor：_basic_ 和 _full_。 _full_ 是被称为 _F-Droid_ 的应用，而 _basic_ 是该应用的最简约版本，它仍然提供核心应用商店功能。 由于这些是单独的 _ flavorDimension_，因此添加的自定义项将同时适用于两者。 选择要构建的那个是通过在 Android Studio 中指定\"Build Variant\" 和 _gradle_ 目标来完成的，例如 `./gradlew assembleMycompanyFullDebug`。"

#. type: Title ###
#: _docs/Whitelabel_Builds.md
#, no-wrap
msgid "Customizations"
msgstr "定制化"

#. type: Plain text
#: _docs/Whitelabel_Builds.md
msgid "When using gradle build flavors, it is very easy to customize any of the XML files. So this is the recommended way to start with customizing your build of F-Droid. Any XML file in _app/src/main/res_ can be overridden by placing an XML with the same name in _app/src/mycompany/res_."
msgstr "使用 gradle 构建 Flavor 时，可以很容易地自定义任何 XML 文件。因此，这是开始自定义 F-Droid 构建的推荐方式。 _app/src/main/res_ 中的任何 XML 文件都可以通过在 _app/src/mycompany/res_ 中放置一个同名的 XML 来覆盖。"

#. type: Title ####
#: _docs/Whitelabel_Builds.md
#, no-wrap
msgid "Removing ActionBar/Menu Items"
msgstr "移除操作栏/菜单项"

#. type: Plain text
#: _docs/Whitelabel_Builds.md
msgid "To hide things like \"Swap Apps\" or \"Repositories\", override _app/src/main/res/menu/main.xml_ by copying it into _app/src/mycompany/res/menu/main.xml_, and removing and/or customizing the items there."
msgstr "要隐藏诸如“交换应用”或“存储库”之类的内容，请将 _app/src/main/res/menu/main.xml_ 复制到 _app/src/mycompany/res/menu/ main.xml_，并删除和/或自定义那里的项目。"

#. type: Title ####
#: _docs/Whitelabel_Builds.md
#, no-wrap
msgid "Preferences"
msgstr "首选项"

#. type: Plain text
#: _docs/Whitelabel_Builds.md
msgid "For a custom build that enables Automatic Updates by default, override _app/src/main/res/xml/preferences.xml_. You can customize the preferences and their default values in _app/src/mycompany/res/xml/preferences.xml_. The fully automatic update requires [Privileged Extension](https://gitlab.com/fdroid/privileged-extension). With regular access, the updates will only automatically download. The user still needs to click install on each one."
msgstr "对于默认启用自动更新的自定义构建，覆盖 _app/src/main/res/xml/preferences.xml_。你可以在 _app/src/mycompany/res/xml/preferences.xml_ 中自定义首选项及其默认值。全自动更新需要 [特权扩展](https://gitlab.com/fdroid/privileged-extension)。通过定期访问，更新只会自动下载。用户仍然需要在每一个上点击安装。"
